<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>CYC&#39;s 个人博客</title>
  
  <subtitle>当我与世界初相见</subtitle>
  <link href="https://ychch.top/atom.xml" rel="self"/>
  
  <link href="https://ychch.top/"/>
  <updated>2024-08-20T02:09:49.735Z</updated>
  <id>https://ychch.top/</id>
  
  <author>
    <name>ych-ch</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>JavaScript设计模式</title>
    <link href="https://ychch.top/archives/11ecb80b.html"/>
    <id>https://ychch.top/archives/11ecb80b.html</id>
    <published>2023-03-19T06:52:33.000Z</published>
    <updated>2024-08-20T02:09:49.735Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>探讨一些经典和现代的设计模式的JavaScript实现。</p><p>没有最好的，只有最合适的</p><span id="more"></span><p>设计模式一共分为3大类23种</p><table><thead><tr><th>模式类型</th><th>设计模式</th></tr></thead><tbody><tr><td>创建型模式</td><td>单例模式、工厂模式、建造者模式</td></tr><tr><td>结构型模式</td><td>适配器模式、装饰器模式、代理模式</td></tr><tr><td>行为型模式</td><td>策略模式、观察者模式、发布订阅模式、职责链模式、中介者模式</td></tr></tbody></table><h1 id="单例模式"><a href="#单例模式" class="headerlink" title="单例模式"></a>单例模式</h1><p>一个类只有一个实例，并提供一个访问他的全局访问点</p><p><img data-src="https://s2.loli.net/2023/03/19/blH6onuzgIYkC2w.png" alt="image-20230319225821142"></p><ul><li><p><code>Singleton</code> ：特定类，这是我们需要访问的类，访问者要拿到的是它的实例；</p></li><li><p><code>instance</code> ：单例，是特定类的实例，特定类一般会提供 <code>getInstance</code> 方法来获取该单例；</p></li><li><p><code>getInstance</code> ：获取单例的方法；</p></li></ul><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">class</span> <span class="token class-name">Singleton</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> _instance <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>    <span class="token keyword">static</span> <span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>Singleton<span class="token punctuation">.</span>_instance<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          Singleton<span class="token punctuation">.</span>instance <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Singleton</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">// 如果这个唯一的实例已经存在，则直接返回</span>        <span class="token keyword">return</span> Singleton<span class="token punctuation">.</span>_instance    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">const</span> s1 <span class="token operator">=</span> Singleton<span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">const</span> s2 <span class="token operator">=</span> Singleton<span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>s1 <span class="token operator">===</span> s2<span class="token punctuation">)</span>  <span class="token comment">// true</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h2><p>Vuex 实现了一个全局的store用来存储应用的所有状态。这个store的实现就是单例模式的典型应用。</p><h2 id="使用场景"><a href="#使用场景" class="headerlink" title="使用场景"></a>使用场景</h2><ol><li><p>如果一个类实例化过程消耗资源比较多，可以使用单例避免性能浪费</p></li><li><p>需要公共状态，可以使用单例保证访问一致性。</p></li></ol><h1 id="工厂模式"><a href="#工厂模式" class="headerlink" title="工厂模式"></a>工厂模式</h1><p>工厂模式：根据不同的参数，返回不同类的实例。将对象的创建与对象的实现分离。实现复杂，但使用简单。<strong>直接使用工厂提供的方法即可</strong></p><p><strong>优点：</strong></p><ol><li><p>良好的封装，访问者无需了解创建过程，代码结构清晰。</p></li><li><p>扩展性良好，通过工厂方法隔离了用户和创建流程，符合开闭原则。</p></li></ol><p><strong>缺点：</strong></p><p>给系统增加了抽象性，带来了额外的系统复杂度，不能滥用</p><h2 id="实例-1"><a href="#实例-1" class="headerlink" title="实例"></a>实例</h2><p><code>document.createElement</code> 创建 <code>DOM</code> 元素。这个方法采用的就是工厂模式，方法内部很复杂，但外部使用很简单。</p><h2 id="使用场景-1"><a href="#使用场景-1" class="headerlink" title="使用场景"></a>使用场景</h2><ul><li><p>对象创建比较复杂，访问者无需了解创建过程。</p></li><li><p>需要处理大量具有相同/类似属性的小对象。</p></li></ul><h1 id="适配器模式"><a href="#适配器模式" class="headerlink" title="适配器模式"></a>适配器模式</h1><p>用于解决兼容问题，接口/方法/数据不兼容，将其转换成访问者期望的格式进行使用。</p><p><img data-src="https://s2.loli.net/2023/03/19/KbpEs3lXA2ag7xL.png" alt="image-20230319230730502"></p><p>场景特点：</p><ol><li>整合第三方SDK</li><li>封装旧接口</li></ol><h1 id="装饰器模式"><a href="#装饰器模式" class="headerlink" title="装饰器模式"></a>装饰器模式</h1><ul><li>动态地给某个对象添加一些额外的职责，，是一种实现继承的替代方案</li><li>在不改变原对象的基础上，通过对其进行包装扩展，使原有对象可以满足用户的更复杂需求，而不会影响从这个类中派生的其他对象</li></ul><p><img data-src="https://s2.loli.net/2023/03/19/EOimUhK5A3dT2Lp.png" alt="image-20230319230958645"></p><p>有点原型链的味道</p><h1 id="代理模式"><a href="#代理模式" class="headerlink" title="代理模式"></a>代理模式</h1><p>为一个对象提供一个代用品或占位符，以便控制对它的访问</p><h2 id="使用场景-2"><a href="#使用场景-2" class="headerlink" title="使用场景"></a>使用场景</h2><ul><li>ES6的proxy</li><li>jQuery.proxy()方法</li></ul><h1 id="装饰者与代理模式的区别"><a href="#装饰者与代理模式的区别" class="headerlink" title="装饰者与代理模式的区别"></a>装饰者与代理模式的区别</h1><ul><li>装饰者模式： 扩展功能，原有功能不变且可直接使用</li><li>代理模式： 显示原有功能，但是经过限制之后的</li></ul><h1 id="策略模式"><a href="#策略模式" class="headerlink" title="策略模式"></a>策略模式</h1><p>定义一系列算法，根据输入的参数决定使用哪个算法。</p><p><img data-src="https://s2.loli.net/2023/03/19/mQDhOwGroEkgXCu.png" alt="image-20230319231627454"></p><h2 id="实例-2"><a href="#实例-2" class="headerlink" title="实例"></a>实例</h2><p>场景：双十一满减活动。满200-20、满300-50、满500-100。这个需求，怎么写？</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// if-else：臃肿，难改动</span><span class="token keyword">function</span> <span class="token function">priceCalculate</span><span class="token punctuation">(</span><span class="token parameter">discountType<span class="token punctuation">,</span>price</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>discountType <span class="token operator">===</span> <span class="token string">'discount200-20'</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> price <span class="token operator">-</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>price<span class="token operator">/</span><span class="token number">200</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">20</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>discountType <span class="token operator">===</span> <span class="token string">'discount300-50'</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> price <span class="token operator">-</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>price<span class="token operator">/</span><span class="token number">300</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">50</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>userType <span class="token operator">===</span> <span class="token string">'discount500-100'</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> price <span class="token operator">-</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>price<span class="token operator">/</span><span class="token number">500</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">100</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">//策略模式改写，隐藏了算法，预留了增加策略的入口，便于拓展</span><span class="token keyword">const</span> priceCalculate <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> discountMap <span class="token operator">=</span> <span class="token punctuation">&#123;</span>        <span class="token string-property property">'discount200-20'</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">price</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> price <span class="token operator">-</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>price <span class="token operator">/</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">20</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token string-property property">'discount300-50'</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">price</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> price <span class="token operator">-</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>price<span class="token operator">/</span><span class="token number">300</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">50</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token string-property property">'discount500-100'</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">price</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> price <span class="token operator">-</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>price<span class="token operator">/</span><span class="token number">500</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">100</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>        <span class="token function">addStategy</span><span class="token punctuation">(</span><span class="token parameter">stategyName<span class="token punctuation">,</span>fn</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>discountMap<span class="token punctuation">[</span>stategyName<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>            discountMap<span class="token punctuation">[</span>stategyName<span class="token punctuation">]</span> <span class="token operator">=</span> fn<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token function">priceCal</span><span class="token punctuation">(</span><span class="token parameter">discountType<span class="token punctuation">,</span>price</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> discountMap<span class="token punctuation">[</span>discountType<span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> discountMap<span class="token punctuation">[</span>discountType<span class="token punctuation">]</span><span class="token punctuation">(</span>price<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>优点：</p><ol><li>策略相互独立，可以互相切换。提高了灵活性以及复用性。</li><li>不需要使用<code>if-else</code>进行策略选择，提高了维护性。</li><li>可扩展性好，满足开闭原则。</li></ol><p>缺点：</p><ol><li>策略相互独立，一些复杂的算法逻辑无法共享，造成资源浪费。</li><li>用户在使用策略时，需要了解具体的策略实现。不满足最少知识原则，增加了使用成本。</li></ol><h2 id="使用场景-3"><a href="#使用场景-3" class="headerlink" title="使用场景"></a>使用场景</h2><ol><li>算法需要自由切换的场景。</li><li>多个算法只有行为上有些不同，可以考虑策略模式动态选择算法。</li><li>需要多重判断，可以考虑策略模式规避多重条件判断。</li></ol><h1 id="观察者模式"><a href="#观察者模式" class="headerlink" title="观察者模式"></a>观察者模式</h1><p>一个对象（称为subject）维持一系列依赖于它的对象（称为observer），将有关状态的任何变更自动通知给它们（观察者）。</p><h2 id="优缺点"><a href="#优缺点" class="headerlink" title="优缺点"></a>优缺点</h2><p>优点：目标变化就会通知观察者，这是观察者模式最大的优点。</p><p>缺点： 目标和观察者是耦合在一起的，要实现观察者模式，必须同时引入被观察者和观察者才能达到响应式的效果。</p><h2 id="使用场景-4"><a href="#使用场景-4" class="headerlink" title="使用场景"></a>使用场景</h2><p>假设B站用户就是观察者，B站up主是被观察者，有多个的B站用户关注了青春湖北这个up主，当这个up主更新视频时就会通知这些关注的B站用户。</p><h1 id="发布订阅模式"><a href="#发布订阅模式" class="headerlink" title="发布订阅模式"></a>发布订阅模式</h1><p>基于一个主题，希望接收通知的对象（称为subscriber）通过自定义事件订阅主题，被激活事件的对象（称为publisher）通过发布主题事件的方式被通知。</p><h2 id="使用场景-5"><a href="#使用场景-5" class="headerlink" title="使用场景"></a>使用场景</h2><p>微信会关注很多公众号，公众号有新文章发布时，就会有消息及时通知我们文章更新了。</p><p>这个时候公众号为发布者，用户为订阅者，用户将订阅公众号的事件注册到事件调度中心，当发布者发布新文章时，会发布事件至事件调度中心，调度中心会发消息告诉订阅者。</p><h3 id="Vue-双向绑定中的发布订阅模式"><a href="#Vue-双向绑定中的发布订阅模式" class="headerlink" title="Vue 双向绑定中的发布订阅模式"></a>Vue 双向绑定中的发布订阅模式</h3><p><img data-src="https://s2.loli.net/2023/03/19/C7fZDAMiQeozbBU.png" alt="image-20230319232727395"></p><p><code>Vue</code> 双向绑定通过数据劫持和发布-订阅模式实现</p><ul><li><p>通过<code>DefineProperty</code>劫持各个数据的<code>setter</code>和<code>getter</code>，并为每个数据添加一个订阅者列表，这个列表将会记录所有依赖这个数据的组件。</p><p>响应式数据相当于消息的发布者。</p></li><li><p>每个组件都对应一个<code>Watcher</code>订阅者，当组件渲染函数执行时，会将本组件的<code>Watcher</code>加入到所依赖的响应式数据的订阅者列表中。</p><p>这个过程叫做“依赖收集”。</p></li><li><p>当响应式数据发生变化时，会出<code>setter</code>，<code>setter</code>负责通知数据的订阅者列表中的<code>Watcher</code>，<code>Watcher</code>触发组件重新渲染来更新视图。</p><p>视图层相当于消息的订阅者。</p></li></ul><h1 id="观察者模式和发布订阅的区别"><a href="#观察者模式和发布订阅的区别" class="headerlink" title="观察者模式和发布订阅的区别"></a>观察者模式和发布订阅的区别</h1><p>观察者是经典软件<code>设计模式</code>中的一种，但发布订阅只是软件架构中的一种<code>消息范式</code></p><table><thead><tr><th>观察者模式</th><th>发布订阅</th></tr></thead><tbody><tr><td>2个角色</td><td>3个角色</td></tr><tr><td>重点是被观察者</td><td>重点是发布订阅中心</td></tr></tbody></table><p>观察与被观察的关系是通过<code>被观察者主动</code>建立的，<code>被观察者</code>至少要有三个方法——添加观察者、移除观察者、通知观察者。</p><p>发布订阅基于一个中心来建立整个体系，其中<code>发布者</code>和<code>订阅者</code>不直接进行通信，而是发布者将要发布的消息交由中心管理，订阅者也是根据自己的情况，按需订阅中心中的消息。</p><p>发布订阅的实现内部利用了<code>观察者模式</code>，但由于<code>发布订阅中心</code>这一中间层的出现，对于生产方和消费方的通信管理变得更加的可管理和可拓展。</p><p><a href="https://juejin.cn/post/6978728619782701087#heading-17">理解【观察者模式】和【发布订阅】的区别 - 掘金 (juejin.cn)</a></p><p><a href="https://juejin.cn/post/7061987842473345061">JS 常用的六种设计模式介绍 - 掘金 (juejin.cn)</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;探讨一些经典和现代的设计模式的JavaScript实现。&lt;/p&gt;
&lt;p&gt;没有最好的，只有最合适的&lt;/p&gt;</summary>
    
    
    
    <category term="前端开发" scheme="https://ychch.top/categories/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    
    
    <category term="设计模式" scheme="https://ychch.top/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>百度前端提前批</title>
    <link href="https://ychch.top/archives/9dc3568f.html"/>
    <id>https://ychch.top/archives/9dc3568f.html</id>
    <published>2023-03-17T05:33:04.000Z</published>
    <updated>2024-08-20T02:05:12.128Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="6b9381cab2c2404f66fc0748c020cce2584dd2b5cd8bbe29576063247c5f1333">76a564cf6a4091bde4fff08fa9cda2a247c4cdd737369a731c51df7d65acd49b4e01eff2db11f7f71dd5d8041f2873a34c7b018d654fb61739c890a6a44889e3675924e640a59206cbaa04bfc658aff070cacd128282ddf03a06a955b91291d95b66602f170c9d9d8c8d8ccdc7620d14fd86697f465e431b408fb3c9d09a471e1c2bb682292299c785b35f51322ad8cc2fbeb471b92069190c49fbc603d57d4628f583847efc600aebb244974ed0f5a2b3be4f9fcec15b1fdf5d9e303105269da4d8f936110d009f42082937235733dad134de85cffb089bdb775b961010911f708bf89d4bff7c5af6b309504b5cc39453040a6788220275e463701d97a22968aa164db8e1577be8003afdd6b5a9d4538af0bf4746dc312538a35d04d427f25a49f20d90baa2f666c6808e28cf628218f6f00a62fa4623687ee5ff0f966000d35c986e8c2fe7be3615bccac775965d71d6f76ae2057b2aad249ccf1931b54b4192222e03bcf684fa97f1cc50297095fc37636696c7a8d8d3823e21d9f04e3c130ba22666685a10b850a098ed8abd924696d352122b825e8d8f68236120bfe83964a1ade0d6dbe67fe9dd47970f7c5920beb0f42fce5748eb4d0b2f5d2415a98ba4764b283c8cef6bc7ef8f8accdd323612c53b30e7d32257073f7177833cff1b2c626c9cf64442c97ef2c714e32db35d493d18612fad29d0abf6e0fdb24ade50ab0ac03066b28ed033933a5f0729311ee9ff5d08ca79c9ef07df8ac6d9f04c854349901c725193a71edcb8897b8c7057a9e3aebeca8344f8ee343f15d2adabf4bd5045d4b3d71661714eb919e8532cfacf083a41ad65ec07143703962826da4d7047e22f79960dd9055f164974d650a18a8ecffc5d55fba21bfd18518c3840d7aae73373e6bb0f20e023f4a987fa96e9ce7f778506141ff713c7df1cd8544d06bea0583a27707815da1bcf512b08170dfbca31281eb231c6f7c069200c9c1e915c4c68c51bf8c6d60a654e998d0980abe3f0e4bed5d43a9be7d37c693cf3acd3707994317415abaa3c9a9e2d68c84262dc8fd78e9c1627a3f89c8e52cf288b361e5e03019c2a4472d6b2391095de83b7086f922ecd2256240ca644ceedd72df0a2cef917d899d0b732f73b5c9240d38fc4a041f5fcccdc361762400d9e5baff5f993244ff2b54e0a283e837365e6fa587e1a678cd9e7389263acafa08ac18003aedaab84017a5ee3558049a6b08b96b96cb207b3a47d34d4a1b8681602588c58931793e365f280c621fc9aad0f58b5f2ad9fc565432acf3aa0eaca14b7d67ad672de4ae418ee6d2000a084c80040fd67d30800410561b53af1071a99a480c61e826a43a0c8f7a16d7cddf908c175b581e87e66144b1569ffb9f371207b4dda1e5ca1e728140ff373baeaf453cbc2facbe1c0ea1657d2cb537499221ad7c2dd95457c7abc0829f7497a886676888baae686d8d1964b19ecc70d2a794580b4c77dadf5b73801ecc798a50a0f2ab505d25383548b6b1a3eb43ac647a71fc35def191fc7f81dd50259af5fd9e54b052e7884cc1c9e835a0f7c1540cef6388dcce312fdb7e4e1e313964e97bfea863ff8afd4f2967b0aabf659cec745b822b9b36f1f1235b3077f97cfa00ee5f5da89dbc3ccf40fa721be1fffb9603301300fb1069e84c54999b93ad780655879310be069181a01127d9f6a7ec99a115a44e507877f3b3e20666418addf4cf36d740d72902c8cdbc650b8dc06c7182debd1d3953448a96833f2d974f6a74f5a57f838ede26ed43e90c7bb3ba4534da277b79b6b026246de29fc8a3468e4a13d03b911f57b15a1f5b3034fd91ad99dea56738c796a1236f3f613b31c534eebb7571b8cdfb40d29bb6e661af29285409ec4fd03c967c2a09fb0744d2a09a90349185e9ef8be5ebaa7b6b5aa2832f2871df4c9dce57367944a153ba3af419a254aca49abe4736f56143e6b32a281c7d51cc8ca5bdf0f6c8503aa737a27db2fe06eab09d6fd3210d23d6ee82c4fa8d395e1a52ce803864fec239af56345cb53644a9c2d0964228846b8b03efc0745bac276577249be5dd2a3bcb74cb068d3e8de17b390260357bd2f0c68a47d7831dae8510537144490550bc2ee6fb728b759fd53d4cdc6162d27abd3794ae92e11510ea7c6df598e93ea2add044a642ec889f4031b84ed0f88a35b1f8bc3ddf52924ba4bacd70bc74554ad6b8d2cc5fe33840e0a1df8a6de4b65e5b45a8725dd12dbccaa932678912bb3ddbe012459e80317c7b0f8d883e8be491c9a104096126cde0b36345fee079c46c63288bfe6fc9a49cfbc0d377d59c96a93b3f6e0fdf4f940acc769d03247ffd3bb4bbf7a20937f6592fdead96f630de296512b96051cb21c33c1b6f3cfee07fed96647fbc8b01bac2f852513bdeadb34954937b03f0a46e636ba75e1e71f8e8e49d7843fca46697412960d78befd8de4a91cadaed8d52141d65e6c5d5f4a163efa1c34ad085bb67c8352f2d06678d2768c8368ec6838744e7232722cce652a001c794f0517434f70a2fa7036d8675536ba9d11054f5d7dbffc927eaab7be9b4a8d75a0a770347e14ebdb9dbc7e9e97df7c26193763df4a0a7b30e94c818a87f3603a9400648c492ba2a0af1f20b39667d1667efadeb04057040133b313b98f9ef1ad431473cf51ffc36cb729c7746a6b2b04a30535a339f43584568581dba3e8cde663a2291b459485cf9a939eaa6ee6477a3479a689c464ebaae9b735330c3f1341c0d66498ea730cf9d79a86297b7ab3fb573d1bdd98f0e813314eddb5cd59f4c9c0f01f62311cdfb6856473decc9d4b8ccfbd7d76397335c1f912892eabc2aefb60174ad2dde0a518ffdcf75eece53fd800bad4098f60ddc884830f2946dd55ca201f56b0c7545c93e6b305c84b28952044b3c30ff78972def95d0a23807e7e47f8d0899d137acadc4e2412d11a710e7f732f50545623562e8d85efc97f66c6c154d8c42b2eddddd6171cdd5a5bc019247f1e903eb42b86a93b08b4017b0ca46bbeb965ff385c3b483dc4edf3b9990cb87b6088417d1e71dc190b986b1aecc06e42b6eeb63d0453311ebd2b2c4a5b9682d8204f40f89bcc532ad7e899febca91f4aa34459333c4c071314f2a6f2a215c1c99118c86b0deb2642c8cebf70548510bf5031993b896262f843bd6e6c41be2003961f64525e8bbe68b577354059cc1e9c1a5eca32617d22515b3ffebc3e794877aff612b8a5b2ad16a2cb823affd9dada26b9be23199e66068381abc9f1d6186233b69850911884ee030732294a126977b74f6ee521e90420106ae728d1c9d32e02b8e76c4219bdaa703b55493ed43d8b20cba6ef3d3af6600031387a07a74b89bcd647bcfae6390560dbef96dba6a8e1d56852ceec77fa3231f3d740d5bc4e21849c979089d02692d821506f1628638575b4b0bc3b56ad69f13f6b5e9c3f73da8c18041b91289ee327e2ebeb287c95f98d301b521af8196b01a9840e12afc1935589f22d31d71753e8b2f3dc0717b97e5dd989491de7ac017d2e711fd7eb933ee52300cd59dff0e4c13fdfa0a73a87827c8fc6e94d108c9258220fc63c</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-xray">      <input class="hbe hbe-input-field hbe-input-field-xray" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-xray" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-xray">请输入密码</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-xray" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>        <path d="M0,2.5c0,0,298.666,0,399.333,0C448.336,2.5,513.994,13,597,13c77.327,0,135-10.5,200.999-10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">Here&#39;s something encrypted, password is required to continue reading.</summary>
    
    
    
    <category term="面经" scheme="https://ychch.top/categories/%E9%9D%A2%E7%BB%8F/"/>
    
    
    <category term="面经" scheme="https://ychch.top/tags/%E9%9D%A2%E7%BB%8F/"/>
    
    <category term="百度" scheme="https://ychch.top/tags/%E7%99%BE%E5%BA%A6/"/>
    
  </entry>
  
  <entry>
    <title>小红书前端面经</title>
    <link href="https://ychch.top/archives/d7c4b1e.html"/>
    <id>https://ychch.top/archives/d7c4b1e.html</id>
    <published>2023-03-17T05:03:51.000Z</published>
    <updated>2024-08-20T02:11:40.844Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="5f524c34bfe4f82fb40085b0133c7fab0a43102a0e070e8b7c267b19cd867b6d">76a564cf6a4091bde4fff08fa9cda2a247c4cdd737369a731c51df7d65acd49b4e01eff2db11f7f71dd5d8041f2873a34c7b018d654fb61739c890a6a44889e3675924e640a59206cbaa04bfc658aff070cacd128282ddf03a06a955b91291d95b66602f170c9d9d8c8d8ccdc7620d14fd86697f465e431b408fb3c9d09a471e1c2bb682292299c785b35f51322ad8cc2fbeb471b92069190c49fbc603d57d4628f583847efc600aebb244974ed0f5a2b3be4f9fcec15b1fdf5d9e303105269da4d8f936110d009f42082937235733dad134de85cffb089bdb775b961010911f708bf89d4bff7c5af6b309504b5cc39453040a6788220275e463701d97a22968aa164db8e1577be8003afdd6b5a9d4538af0bf4746dc312538a35d04d427f25a49f20d90baa2f666c6808e28cf628218f6f00a62fa4623687ee5ff0f966000d3d9693242021e09935a7f5b71fe5c906b55ce48f5666c5c40bcdcf0e367a7519c2b63efb7e8165dd0ac2c4622f8e07ff8912275959aca1d0d13d38e5f31b72db10714b993e2fb2a6fffb6095910c890f433b06d05bfd7e962e3c0b7e76d635d56b6ff8b6bd6a5f2ca89cba38f1f03e72d2c252cfb1d2908be35cfa1374601bc84fa59a49aa2a5f91a03b3aeee5688485dbc2109f16cc29df950655fc2877c59388171cbe57f00ea02dd996dd705c31f7ce83ba1825d0f81b9e644cb6818cef43fd90345da618876133c294470322c77db2d1cda22b5e1107477b6f4cc36ecd0bb6ea31cde7df2ffa5d6a068ebbf4efba529db7d11d18df9ade9e9c9326828b84d7c311947387bcc80b0f6ec5e971ce14d0f6eb32c72fa77ba7a2f1fb6de3f2d6a6b13be8ca1676d48b793d5871a9d5fbeae764c9e041c5ecea622a7b49d95534bf1d0cb236d53a241dbefb0409203984dca6a52a6b9d9624cd58972700ba5a6d29741149e89bedaf5b09a89e95754375f138d50e8d78d3e02540ea5ff5af87c3015b6064e377a0581d5967af232f3b1893d9fc31fa446a996d39a3bede5cca6976bbe6029e6153e3c3eb057318c13c244c0dc5659bc60863b3a669adbfbcbfe3c5cf18e33468387c48c8728374bdae88b8bc59c041a4a4b08b2302ab237cb1e7b95a1ee20baa5a20ce9ed86fe5d2837a05b66372bfe56d94500ce136a38cc56f7bc04cb7ed8af55a749bf90fb10b3bc78a4978304febb27ec7f24d2fb947fb6786dfd3b89e0cc89aa0181cd8dbe5e1cf6fabd0f156d7e4c9fd2a41b7b471aeb8637ab4eb0a72987d2f0f8808b60527de798ce122ae9b8fbce1050fe9b461009348ef681ad540a3b6d77a6ed22f34151758c71044b89377dc9b8b991f5b957ceb4f79b0a39db89e48e0649f63e1a82af32db9107c14c6a6bd2aec7b1f2609298c750125296c4fbd82c06d04f0884e6b6d2134afb6cc4967e6c2e35d15f23b88a2380481b750965f5ae1730fd6cee2b4a176fccc4c5ba4f8bf72a902969b2ab3768d26e485b6b95c1873a700096747530047b2db413d355cff5cf7608fdec8060439b9819f20b6bd5f3eec37ce62f54439479f573d13f4257bdada8c6061cdf978d6483cc974da7bfefc81e8e9bc3a643c7e271d6a72f8a250ae1c6c72dde0fa757578c55e5144b434a87e70e695f4b7bfdf8edf56866cbd6955883ca43912fbd3c680f928088a9bd5d92f68366c385d84deefdf9a96351617c50b262704dd8c86dd4b2a85ceb25a4e5d530f4dcd995d5b411c3afd9052138f182d611a5c5c641da0a867c993b664997681c23259a234716136a90ef1002cad044b30e2cde9e819587d874e114df626cf1711fe0a80ce3545a6e29d2e5e8592e5881223b2f1f49be9e9ae8dcb8e15f604b3adf7b92057e808320b5e16092410b841e831d13615bbc19f1e2f161e18fd33c05b0400eaee6b25576932521ae5c188eddd68881904e651f75e537fad493e55d8dc07b8b14c3904cc39556660775272200bea7c49bf03d8f85aed267e0ee5ca309b948f04b51bde3ba6c4164195399502ebc2ac82e721aea127b72fd3c53e0fcd409fc519ec4cc</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-xray">      <input class="hbe hbe-input-field hbe-input-field-xray" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-xray" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-xray">请输入密码</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-xray" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>        <path d="M0,2.5c0,0,298.666,0,399.333,0C448.336,2.5,513.994,13,597,13c77.327,0,135-10.5,200.999-10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">Here&#39;s something encrypted, password is required to continue reading.</summary>
    
    
    
    <category term="面经" scheme="https://ychch.top/categories/%E9%9D%A2%E7%BB%8F/"/>
    
    
    <category term="面经" scheme="https://ychch.top/tags/%E9%9D%A2%E7%BB%8F/"/>
    
    <category term="小红书" scheme="https://ychch.top/tags/%E5%B0%8F%E7%BA%A2%E4%B9%A6/"/>
    
  </entry>
  
  <entry>
    <title>顺丰地图前端面试</title>
    <link href="https://ychch.top/archives/7a7b7b88.html"/>
    <id>https://ychch.top/archives/7a7b7b88.html</id>
    <published>2023-03-15T06:39:17.000Z</published>
    <updated>2024-08-20T02:02:49.715Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="a6477ec31aa42478050121fd123b571769a999e8f2c511487adb4bc80d8186e7"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-xray">      <input class="hbe hbe-input-field hbe-input-field-xray" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-xray" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-xray">请输入密码</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-xray" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>        <path d="M0,2.5c0,0,298.666,0,399.333,0C448.336,2.5,513.994,13,597,13c77.327,0,135-10.5,200.999-10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">Here&#39;s something encrypted, password is required to continue reading.</summary>
    
    
    
    <category term="面经" scheme="https://ychch.top/categories/%E9%9D%A2%E7%BB%8F/"/>
    
    
    <category term="面经" scheme="https://ychch.top/tags/%E9%9D%A2%E7%BB%8F/"/>
    
    <category term="顺丰地图" scheme="https://ychch.top/tags/%E9%A1%BA%E4%B8%B0%E5%9C%B0%E5%9B%BE/"/>
    
  </entry>
  
  <entry>
    <title>使用JavaScript创建二维数组常犯的错误</title>
    <link href="https://ychch.top/archives/19558d30.html"/>
    <id>https://ychch.top/archives/19558d30.html</id>
    <published>2023-03-15T06:15:30.000Z</published>
    <updated>2024-08-20T01:48:16.230Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>Array(3).fill(Array(3).fill(0)) === Array(3).fill(0).map((value) =&gt; Array(3).fill(0)) 为什么返回false？</p><span id="more"></span><ul><li>Array.prototype.fill() 方法会用一个固定的值填充一个数组。</li><li>Array.prototype.map() 方法会创建一个新的数组，其中每个元素都是原数组中对应元素经过一个函数处理后的结果。</li><li>当使用 fill() 方法填充一个二维数组时，如果传入的参数是一个引用类型（如对象或数组），那么所有的子数组都会指向同一个引用，而不是创建新的副本。</li><li>当使用 map() 方法创建一个二维数组时，如果传入的函数返回一个新的数组，那么每个子数组都会是独立的副本，而不是共享同一个引用。</li><li>因此，使用 fill() 方法和 map() 方法得到的二维数组在内存中存储的方式不同，所以它们之间不能用 === 运算符进行严格相等比较。</li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;Array(3).fill(Array(3).fill(0)) === Array(3).fill(0).map((value) =&amp;gt; Array(3).fill(0)) 为什么返回false？&lt;/p&gt;</summary>
    
    
    
    <category term="前端开发" scheme="https://ychch.top/categories/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    
    
    <category term="前端" scheme="https://ychch.top/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>南方基金+qq音乐</title>
    <link href="https://ychch.top/archives/43293ce1.html"/>
    <id>https://ychch.top/archives/43293ce1.html</id>
    <published>2023-03-13T06:38:02.000Z</published>
    <updated>2024-08-20T02:03:51.227Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="f7cff10dda9405c8de3f05a0f2d8b577c77e54fff4b619a3a5310d53bc24d9a7"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-xray">      <input class="hbe hbe-input-field hbe-input-field-xray" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-xray" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-xray">请输入密码</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-xray" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>        <path d="M0,2.5c0,0,298.666,0,399.333,0C448.336,2.5,513.994,13,597,13c77.327,0,135-10.5,200.999-10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">Here&#39;s something encrypted, password is required to continue reading.</summary>
    
    
    
    <category term="面经" scheme="https://ychch.top/categories/%E9%9D%A2%E7%BB%8F/"/>
    
    
    <category term="面经" scheme="https://ychch.top/tags/%E9%9D%A2%E7%BB%8F/"/>
    
    <category term="南方基金" scheme="https://ychch.top/tags/%E5%8D%97%E6%96%B9%E5%9F%BA%E9%87%91/"/>
    
    <category term="qq音乐" scheme="https://ychch.top/tags/qq%E9%9F%B3%E4%B9%90/"/>
    
  </entry>
  
  <entry>
    <title>拼多多前端面试</title>
    <link href="https://ychch.top/archives/cfccc4d5.html"/>
    <id>https://ychch.top/archives/cfccc4d5.html</id>
    <published>2023-03-12T04:26:51.000Z</published>
    <updated>2024-08-20T02:04:24.307Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="1e7c4440af1cb466ad4b0014ec29bac6c5adc94d349ae69d3c9f77e3c8065894">76a564cf6a4091bde4fff08fa9cda2a247c4cdd737369a731c51df7d65acd49b4e01eff2db11f7f71dd5d8041f2873a34c7b018d654fb61739c890a6a44889e3675924e640a59206cbaa04bfc658aff070cacd128282ddf03a06a955b91291d95b66602f170c9d9d8c8d8ccdc7620d14fd86697f465e431b408fb3c9d09a471e1c2bb682292299c785b35f51322ad8cc2fbeb471b92069190c49fbc603d57d4628f583847efc600aebb244974ed0f5a2b3be4f9fcec15b1fdf5d9e303105269da4d8f936110d009f42082937235733dad134de85cffb089bdb775b961010911f708bf89d4bff7c5af6b309504b5cc39453040a6788220275e463701d97a22968aa164db8e1577be8003afdd6b5a9d4538af0bf4746dc312538a35d04d427f25a49f20d90baa2f666c6808e28cf628218f6f00a62fa4623687ee5ff0f966000d3861fdd29ffddf734d658ecf20fb7382f530adfb1ac8e0d859c53b3498f078cd1a6c09f205c9f525ea8b03e256f4ee7313e0dd92a2c519f542717d34d7b5c93502793d5b3ee289e7c8727723ab369e221a96b46960ccce33728c775a242578e72de05c7323e78616399486c0daa8b58677d2bc79010bda97eea75aa4136d7f89479059a49db91b7ebf4e08a3c0a4a20729d294cd02d1cadab9a0d768a3263184b90499944dd9a6bf5e00d55b0d50e752cdea7932012163215a15fd23f2d10de89e3dabb041ed3b2a00ca373e8fe7786a451843a7ef776992e9777f78b02583461c94f0dd95d4cb3283a4d7b8b3a98cd1c209374af41c477ec7c00ad14929a217b256124bb71736f06812edd882bd0d356098f0468c9d06d2fa45c104df22bdb5ecbc9754ae5deee7213046e2a0391d6f5cbc6d5138b9d7872c804ecfaad56c3b4579e671673197f7d4f0d91a21eead4d17bc7c2a65fcf071614a7a62520cf1a70a273afdc4c01b88461c0b2f820e0b366875aa3cf0b6aa16e4035f9f514b9e23b6e205ead2816d02d872a01767e3ea6ca256d7440a9313c46765f1dac8d685ae07b314da4649ed74f5503bba573e1d1de487e16dce344715cc241ec1cb0e731493864cdc007f48d60d5b45767d65aac6824eeaf65dd2ccdf313802a4446125ed69149ef34e35d687e2d67bb5dbb1baebefe92c5b7472e2fcaa932312a15a3bc90f8be163327e7a4bdc2d5d7529027607888e69c1e12150a1f7ea31d26ee131270c084a3e264491e84c06fd1d14277eef92e982965e3d462ca0ad08c733532cfce089b88f253bcf6c2453efebf60779c1a2ce3e110723ea90b186fb55b42285223ed54eb7fb4bf153ba529721ff3e180eb298daf477e72fc34f596291baf3ce8a1068cc27f6090f08c86284d29f8c71012603dad217ec7005dd60be7bd271f50ef03c8f68665bc98a590545e53eb6d5b8f1784d7de281a457f11f8f45cb2eab9535ae713f807df0a437f9112400760fbb4d45fa6fddf5d8898be48ee08c63c2d218d41b56b1cc7328233664459c36059bf62d5c5f2e731983d20782ca99ae52684763a2509ab98e3ca6c77504c9d7e500ac2ccbf9c98f459a0fdaade4214efd0a38d5a8a1005b40d9404f65137c7f5413b46f9b887d2dd02c4c8b28b08811dd246be4592ae890ec1b3347ddd12653c73fde9e442d90db2e900b85068bd92e19c3256ab18d497843fb7839064c3cd095b8c4bef4256fc49093c6156c73ff078a70522b0d156954b88c03f735eac22b13e4230c4c44c3d5142a8f3f312c851154ce8b101a9a9e3bfab25e6b7130b34765d53883235de2e354ecdfe7261fa86e6409eb4c1f7dc788e48cfaff9b6f651f8d0d94c5371920dcb46320672d3a51316dbc248c50d33828dd4af2f4f95df20da30c18e0a7c17ea6ee868b5f9711cd6b6361f27925ac3d72d6ed6a39853e17f5474a010fea3fe76332127756364a9a6514bf511f96ffae23fe3428778863411dbeb16e429669f9eb45d698af6eb29c687359ae395b2c472b7f32cbee7ff682ea8fac7fd89b81a238f3b84b82f381792af2c80388d8d536266f55cf88654b4193ee64d98ed2356b9f59ab8edea3a1fdfb4954e91eab2749f987a413c367f9483611b213da8f86b95538123f157f898eba0cb103181d678fb273096bbb3437cdcb9d54892d95381049a320fcc98b7a4c7a2d9f23bc2b5b490fd4d31dd8861681bca794012ad27dca859faf891af892a9a4a41eaa051b937e252a56a5c7a89f05432ead36480204548071afc6d618d04f7b8e2ecfe03cfced6bf8272c8d583bc151c96615b67a4a771e65ec3d4253972bc9bb6241f815040a54452a6eeeb46c46d58aa76d4dd937306ae1e0c8b9c2ecc41be652ac6a69d84005e4f1e219846bef3d25c47dd34ef01dc1bcb315f1a0e21ddac102ee2ba1d58819a4a3e65507f20774a34fa11bae8ddd1aa4440e4e496d7d5284d7f5fd62f15ddfa248e9e1aa8ea11020fc8759a99efe0351b6e36e36a2ab82b762f2d8bfc4d77b56ed23a79373f15afb6e56eb750272da710fccf5070d2dcf2f66f6919cb4c651e73bb2b3f0b46aab789286740b61b134cf2fca7161e28a3c3a60ad445b985de2cc7c87f2f59ea20609c1fcc54799329f78bd3ebf2ed5d6092ac9638dbcfa4827737c2fb59d512475697eb2fbc78774e0333ba289ab4b5e18460a80790a103a57872a352922f0cb65b18477521292fb7eac05a0a7897ab37853e26159b35d120df56d8c47894564d42e19f71a5154c4264e6f5d09df8029334929c08b4e16eca851afd7f33f6a537610eabbbd4058517a0aa7a9e8d8d2743c876e1f798b043faa420f702de2581b8056a17cef62adc9153f41985b5687d721793257baac387b0799d5a065741d83b13f7f032d65791ea25f914b71581faf40b2f9e5bf5a3cb1f48730ea4aeab954db7dd29ae6cc0cec2978fcce118275c5eedf0020539baf2e16c51c230fd29e79e0b51f277dd276f2465708e086321fd67957e4eb121ad677b6a0f43824f9628e59256fbceadd761afb0a0ee9e313e99dbf133a638c207dd7ef8eddf7a510e36b3a8563fc9c0a9bf9369d9400de664fd4e987acbf97dd1e79acea8e8846550e7ba87638ebc6d68387fd6ad8d70fbd18dafe05cbd64f925c7e0c6dbc24401b845da48a6ac9deed0e88e672f2a1713cd272e2a3353c9be4d035ed25655acce8a2afceb73f04654529e9a69e604e07e6df1da9688dc7db6617e38b1dd77b8929afc29b11e12d67b4dc916f13fc3df7272613681868752ab43059020879eecbf45c0608390c731941b4af80240de88e41dfb52f4b0788cfe618685783e819c7228d26db23d8ac66518fb2a08c6ce2324470c3129b24300b0a6173f333a8fc2e942b61b3da54829f3977b6083222249058d10ae78350e5c802c0788f5c1dc9c1d50c92c85629ea09632934df3a8ee6c48c8ff903a8caa1f04c6214af409df877364821a30f7e09bcec955393a5dda159c1852379179ffa3553f1cbb8763e3f8e8f10a575ea5dc367071b83170a2a5bb6758705d7a342cecef86245ae09675c629e160f0b1142ceff4c282b890b2e8b8448590f314754a235753b422cd5b3de65b7365b90aa78d17bdd376c50fcd153674326122c9db813dcdc225d6cef00b599352f9c19d58e8b5dd73c96f1135e7720035b76abebf40e92c7f19db8e1cadeef1fa30f2607aeaa15eb5e28a8f937a148526d9ee5aadb0f5858d48eab6b2104b5c2d13f0c0f7152933c4343bcfb4ae2913a7ce9999fee9ef6541061c11137f0090b0b96ebc4aa06bab2d8e9ce8d43c8f431ce7d2561cb4894dcae9812e43832d134fac49691edf020870ed9844b403e4d37662dafcf2065f9fb7835768de2c363c8249813dad3fdfbb664bd8460d7672d67fe536d6efbaf125b1f800d24604336288db380b97b3873671adf29f45a08b5de9cfcfcf62ab3b3baadd284b53a6472a7c783cd6e78c55442911f5e6595ca17ec5cb2c3be768b8930d8eab423272a81f509a8e63b61e27ea55fb50578660e6bef3fd26aeb8647228f6675302a7f0233810fd1223f1b26bace14547a546a262221de77c25e57e2cefd2f19899dedf420858fb75fb68338583dcadac1c1c9630f7c67f990e54c5d4ad5e71beff2a51c72b4420a28796433c8d20332bb09ef196d80159e66d9dc5e4d8e4b2a5b4b8dd9322bc639baddc8bd1aafadfa0be9962e7af17b25b6577561e7ec4c7a83aa9daaa32a515ad26b3d7142b6540cd595b1e4ffe8d0358c4789f86e2a3a9717b54edc97f46cc419bbc749ac3b20ecd22363e8ab2b577caedcbfb0679d117ba6e2e2d0554977643681ac9df8a1a78b08a1d29eb87c0ecd912f7fe80958540c794d3de3c1d371c66ec6cec0d4e18f50ebc25d00de9f68e9ec29c1d8444d92c088f32f1732e1f99628afb2e6a7f993c6a071f8ab9747eeda151a87034344ed77f20b7ba50d12e0a55defe5ce796ed490bc0f5406ab4039a7f0c577f4e7e4b6586ef42466f54d65007ee25d8145c9f3b8d7fc964e14c13dcf230a5ce16a084ad798f2841756f24758045cae2e3d14489f0ef0e57d1c595b0958a5928f66608db19c462d602cc9b8ea112f12924b75279c3b0384a89eb3b64dc8b716380e411b99058f14595780cc03b8a6cd7ccfdb07628b96b439267f4ab415d07965a74220dfc0bdb95fac7f2c6ea9eb875eb683cc0a56353d45ddeaf9bd5c19198a13c9d1f0a06c49c2dfd5d7653bacb8278e710d017154e519bf649bc2760f7e47f33eaf966b44a5247c12098112898bbc141c541a2fef624f981f5eb9a5b593a0f960553dc6bfbb4364aa9cef760e38725c1d2e38a0b5a5f2a5cd59a1ee8214c3a2ef3e7dfd17ba746357f6d908bd57a468ae3bc41cf6bb78321baf6a41444c4f43896cf628619ec46ed816b49dede6c44727d3fe53a8915046a039e0f11123c5edcf632f56a4aff21776f1ffb9ec8116852fd4b14e1bfbcbf568448d74ca7022e838e6b832497d72d9b5f37be2b52b34ce79f424c72f3afb93ff0f7815cebfcff96097b7f2e048d7fa388572a91afcdff8289063828a83336697cd53028ef1c73eac15114bf910774df4adf50f346585826e910d9003b9753aac8b8f0c14a50abe1437dbd3c6b4897ad4ce928b5bc8694054ccb2f8f1437a1f52d4f7a6c9c173731b1790590545aec52c7f0146c0126cf9ebdc459704968b6a129a2124073ee6a9774635128aa112281219f5dd7d3bfaf0a301e77b3f18bf21e83c5ae1b2a5c0112efa203f08bbc7b62f0b6f13cb74e7479db043f89d0cf57c534d4a58a911f50450f1aabe19d51d80da08387107f5a2514188489e59ea94b787799cca749400185f16d12ad681a5e932bdc2c710eff96f5a4ed9f0c63f761b102e70d2003bb1e671b61dd1d57b669a22efc12dfb5e4a8edfa95b08f53f82290b169d5d62786363b71c0acb29fa738dc5ae90023401f773746437b294049760d8e4724bdd40e252d34d490939a5b9f1b1645769b0dcc5e4b3e60a37a341af7a209c865de462c818440e2439866aa2e0f13414924de8d622dd55d07615fe29a8d05ed376f784141399f2d9c789e37663651f492934899f4357d13cb45b7e625783822b33bec25edc6f105d5d279d0b9b2434476abb322d2fe77d44d7e8a5eecedc754d4e536113b139e38e7b03007fbfa1bb4e3ef659ed0c4fa58fa39fa22e4ed6c828a0c71402c4ee57d0aeda7d57a41b13111f2e693bcddf2b76a8cd135b73c28c3ac92c413451ebfc830bddcc5c082cba490a3e56590326a4c0ed4ace1071409a7b598f327687aaa88752d8bf23557923c34812af6bb57f145b430779c6997211873604baf823b9bea7ec88f3dc09bdfd809e308c67a60a8a26a0135379787546645a3e096f4d384c5b3518c4cdd00ed16df56e617bcfecb0cb4b05600096329c3f0d53f0c3c44bbd9250acebd1a70e00eb94ff46b237176cb877de87f0df62caec17c688b571afac4182c9410cf274cb3ceee852f13cf5e771756c7c900a66a65517bd528c2da3857d615c7fe882c2c28b05edd9fc9dee8493b8322057dda742c9dd75e232cce2d8f3f19b2a5b091c42856e2e83ff2e63f9a9860cb8a9a6a44fcbc62a75dfce00cc98a84aa7026e96f81a9cb491701bceaf1285a824a873f5fc7b25fd12216894a34a1a564d81be9d8742c4684c5cf50ee93f14906cb5425d6f639cf27b3629d95e049b8d47ca4e6f4942407e805718732840922efe2e3ff2f44dafb40715e444b1dfc1e394a98fbf793bef599fa9a16aa6898f9ef458e791cc8b63a45065e1e993d620b5068e662d8319513b50ee2e40d6e87544b5e2416b4f44c8fbf7d975feef73eae2f018e0ab371c0aa9dcc910ea9d8d6dce9394379b9e7e4c710cab3d7fdb7900c023a9f7b2f48bac674ef9a0d8140f631d9cb477fa811bfbd819312cfbfefece4d187e2a8596f2fcc73607c4395a42973dd4caf8acfc284860ccadead406fa22277d0a10c4fda997eea161cc1cacf848806b044f8c69b30aaee4f3585e7f16882dc5970b755e2017b657270bd96682a4dbefeaba5d7ea618a35c0c47061f4e0491ee92f089840e1dd8ad12710e9b4cd5f5942fcae648b22cd8d8a7eeef2fe23f6ac8e1824a744e85aa9c287a609fc44ee31e6bbe9d326ac6ff0ab5ab731751f34d2010c6c4e90df4b4078a32f584d346d228c93e5e347a29d0add6fefaef8e35a58b3bd5d3f8c9d0e296d4334ea06a676b99bbc297f722103b0a48c319250b71ff859c6bb30d95fa038285f2428659c34b0fe1cf1898783a98849c478deb2cb91a5383e778499fcba4baba9d62c9184fc42918451715bb8aeb0055afc470c30af104bdc7b556ce0e50caafb1386e4373dfc09ee57f8ca17628bfde6af69c1914dc32f2447a83ba0aac4da1df65e9729680577ba9207a1dd10d2ef0a3b95b9791fd8bed01d52b8fa10e9d3513d9f3e34c4cf2fb9b99f7c5dfb2632a7951a7025687789a2b7daeb2d0ce77b3544d6f2d8aad582a5907b249f02873350743da4cbc16f836226d3bcb974e077bb41c88599cce6f7e68e18eecb91bffb48e748bfd4f0f32f0142d25aedfad238071e9ba2eaf070a4df2a0e295f2183adda694e93f284196f1546d3cb26a75623dac9664ea6fd7c068ba41c8bd7aca4da8b651dab4df533b77ffcecabd6f24fab2bdd7cfe4a4c9fe42162a5243fbd7a3effdc0fffc6f8b851c07e5cc81df58c229e9ad12bc64a9b9ff13737e8eba650015639d6ffb531b246e5bd7784eb1d3b8aa6c6a74f8a5f99f27fd2f4858270395335c146038c0c0479cb8c179fa61ddaa9392d8d927ced5b6c0f2260075a26581089dcab0f1f3122dae71946652234cd0e3064a45a76ba7c98f1f83f317d73d6d18cb5fb85684b7a0060cd7fb109d906cce66833a245d4052f8f87ff8e367fe183b2e93daa346162c0ddd5a826e6b7cca31b71898e49ba843a1d931fad4a479931972ee7cb892abf9325f207211e89b6a4a02623be73dda3c122055172cc594941f28de063138c41ce00af0d1a80ff045f5a7d2d367af573bfadd6fa91ba09bc9605a947f3d529c293544d9b776affd85533ec8a55daf0fee916dc6b94a9f6e145cbe24a33d24e6e0e9181fa9f7b5b5ab7778e8c9e71aa300e45597f113721736236d55d106c5a7888907f85a38952307d1a474e907d2a03b4d1756408c479347f84b9928e3019939cccc23e62b3b1715319715077a8068afcb33f1c20d984ffefa592df231ba5aa319363aa9594138bd989d72dba870d85c68236c085f118a82d927fbc477f9ee5262586075638fc3671979a32223087be1c86866247cf0b02a7d97cff8591064f81fcd591499ce5836f4c524f37b9f89f780c61bc7a3df6feb52280eb031cb2bbbb153dd9fedb40c594ba0b864f317de69acee62ba1df2118ca40566fe6e4fb579a5b045b31f328b27ea78a105bcab3fe54313eb070b09e3b8699a1f8d50be87bf4a1699f5931519cc7ed0510542b93de2a3d1d733a2f1f24dc4b2a394bf08c15090ac571c5e83463901218baaaeead8addacc03434cfa1a904547f310cc88c4c2d11a7cf2d4ba8173085d198810e38d5c1d00a7eb792c40e53c77abae31abed0121c26f88db50b373cc803046f1eafec2583f687f945d0b626deb22c32b1d44d666aeb8126fff22b52f1939cc586d3ea729c6cd409b9b99787eb06bf8fc85a6848567efcc8de273139499af16b4a9f8f2ffe3b82d9eb7fcb0fbc37d06c6682b9966eb7c9d925c8b7b07ac797d1931d54cd60cce655c7c838b6af22ccf416b8ee0c2a109a05a57e0e5fe42f618dde6340822f4468c913dd7b897457fa867df9147c9a92b2a7d19977b0e730331ce7fbb96cd22c9eb6ee68a4ca45f7ee869b9999b774dd77188a33ca68f3fee968a37e03be359383a04418c96091cc2eaf4a8e1565ef908ce1c3cfe6bca04f4b1784ed2c4b295c0825ff7a31532d676c2d5b7ffcecd71d0ecceea36db9071615cc27c5f43c26833fc9f338a3d28d477129d41fa567e3003cacaa7a80669ded1ba89ac376d8fd6b814d129b3272ab2128ac4a55d67e0f208acdab571bb83186ca0080c47870b42f0b7e90c3d33bcae779efc2d8a76218be3c1441ab8e487dad22312bd56d8b70a087d995c703242018bc011ddb4bbcd6565c56f8f0b5e2d5a219b538289d1d7b18438f6968ecb0fbd5175c32dad3cb4fee3f31e56636af2cbc545e081b5ae1f1f691f19b5a1b1b4829bc0c35d9d67c3e704b0c290483fbc4f0ff90b8667aad8bbf4cb9e8e20ebec377ba725765f495fc2457f39094c2fd78bf33e0bc2e987b48ff38cb8aa10d8b92a42f31f709541585c0b7b12df7177a6ea7d583ab9858df958bd113ddcae9e7b53b48a2307164ec10ab117e7d3624ab464914b12a59e509d70db9ac2d3cbeeb25311d7cfa5ff1e353438fc5d5ca6df17d360daacab2eecbfb222a92f8b76daf0907ce0237064d60beb8d14dba8968b200922b27afa1aa5f1559d93fc7264192cd7a6dbdd552f9e147998689c3358b491dcb363289b2a8e889a96e1db2de327000629c6937ebdffee4dd7f328567df4e7fb375829d665838cbda127153688883e3db52c7c534c3ff6e6143f7f25dea5be2175094e8a34be0dff392074f1f2ad8bfd58209d3999c9d0dbf564fc43845777d49ed8ca3b03592849cb886a5a8261047f9a2c99933ff41d2a83d6dc5bc105d001d57c18d5068442d84cd8664b279c3706e741bbbde35b4446307f509c09a192b52caae1db03d5712ca43813fcc64ea9e082e309314c7fef2108a7b90f729ca6a4e245ec9fbc851e5943f908925b2887e5d70c11d40b2513a487aa992da90350eb36ca196e4298c263d69efca370795b97b41c62ac8639a57ebe5b672807a1142717e5d39247fcb75fcb6ae9d4c0cfdeb0051c69591532806defdc3a4fdcb66802e5b59aab394d1ef7c7dfdf1718f1bb5f8962ef17fb81b9d7bb1d0040fe5bdd3e3bfaa2fc268e49c301e21f375e6cf2b378245671397f720be0c1cce6205e911c71bac1f0e33f231d3a24c3c0c2c072786d7266b91d008b726197fc4526416b35afb165816471ead98a8e01ea50ad293edcd933829fe2914415d01949b05136f33885f893eac0302a920f080a7912da8632b416f469f41f1dbd49a1cfcdaa3be3e9e7a398d620f1ad369952c96e250b95c12893dcbcf20aa895e27ecb73885284959f5828c64c311d3dc3e5944418f934eb83d56cff75e62f032d29e9950362c21105d50ed77f9146ca812ba36d7b097cc0ea9258f2edc7eb7bee70b9c838339e2a7920df04b67245849d1fdd6d140a7ed982da0a6038b1d93f58ca2de1e228013ca2961a3ea58dcc4c4fad8e6ee1de446a48690cc45634447971e7fe44498c22346245ffa9824a4d71673b46c162115d9a15a1f5f4a22899af29276424a9b8b568138fae0fb89e00604e5528dddcd49271b8a6aaf6f20574c3ae48c81e775670503fe19d286e3eed5b39add0746052b2d80a3930d98c510bebf7957158c53de078f49978d32ea79ac8e936c2f5742ef449771e02406c1847a645ee48c54076a5a4906c92771712ec43912cd0a4bd93e77774cbdf0b9787b79f17d722b2dd08b88e309f31109099389aaa3bb93cc971be4a5c4f12757137fe0f59014c428a4d15c5c45fba3e5ba5e3b1ebd1a0f9bf06dbc63611ad95344cd141dbb92d3fda1f72f6ae114750ec18c2fe4d8851c69e85d61e8379d55eb397bca03530f55bb5017dfa32231f20a7975585766de55d04a744a13b91857d6db7331b01b4428119f2ffc4efc5f2684e95d100075a86330838f0cd6917c8cb124272f0f95f13f20e81609e8ade2c988316b0eae5e3379d0d4f94d220444e41cbf65ac620d90cfcff92339c238a377ef41c40ec6a0021a49f698f577f7f62873946fbcc633612a9e5a42b78774e5e913506b983b5309a828288b5dbdecc18b5c25bbd567fb5cdad8f7c46155f47ebcdf299158c31596a4869f92270291d87d20a9144b9741faa3e45adc6b6cf8d82d80f9578b7ff08a2a19548c28abf57b84e9c08ac7c2d0732472999bf4be50f207ea9e68f4bdc2fbc18844b93dfad9e16356f155529fc630f21cea08b3a67f982562a85e9260a2045d022a114f0b2d627d760b4acbfffa76f3cd34e741def2eaba267068406f230ed11b9df0c90d8ded3a795fcc61b60a9afae82f072c32c76a7f5cd7a167f1f052ba17051fcb51fd41dc07d08f53e72b3f241352435564a3e00cd42a8f327cbdd400f755333c1197514b2e50712bc2cb463a5c682e5eb6b16c79d0e316083f0372189b67861c852d34b3ab40e33be588351611631d0faa913b48a707bd65e6688e613c84dd268fe465035bcef4218d8b7850c6a055c882b05a6b4632127afe6118eaef257c50f5a08a0a5f48af69c64abc97075417975fa69d1625826362c17057c8cb553c227e8fd7a663d66c309ff30c27e851a86f8d7cdfe7f377ffb1a85a02ce692843dc9921921564c82ba94afebe0a5ae661ba5ec945989a97ef7b91176bcc5f4b08aacc6e5346a631e765ca7a1baa59d62ac491828dc8ab327a563d4be7a44165e4d555e1eacf833e6f3b2cf070f7c023bbe03be8b500190ca13314d3d3cc501ece597db5181e78a1a8692a449127a85588a32332aa3a2e591d61b115a368c84b19cc9f62c41bad300b818674331ae9ddc5114f8eb622e847de4dcfc820ecb6e85c74e297064e9d09d8c758e38a17c54189289e3feecf303ca390e3cfbbbd4f3ca04e8fd435f8ee9f16ef956b666da71ab8cd4fc1f3ad834a89e76a50ed94f284c4f85c4aa4481b39d5ffe5a9f50b4eb0b6bc913bbe7e7f798dfb6f57db42db2a2d5a98a11ab807cd4715282c922ab76b9716ca10985dbbba5036c09233683b7aa9b42e2204e12a8f4adbdf85c08d8f1ab3ce6dfca2d7245e91a5ea3cee65509c898c5e774c49c2437e393c1b9fda015cd0747b1fbedc25e821420e7e0de22ea5edc0a068ba6e50f4fc772996770f452f3fec49e125b20824443f9eaa865db933fd57fd61697d81471d1cb564bb70b4729cb93dc5b04dc12ce8dba8f09353774aaab6871691ace2b23c8ff660541cbbdfd67590a2c22a878ddea31dd603062ffc253923d9c0d2e24ceb53d6fd8a981dde39f1a6d1f0c858c3037a68fbe391aff88d187640e5abb57d7d427900df9b2b5a1475524fb6ac54624824694ea36eba676820d11118a84663b91fe91067c7927f7f01d8b0f89225832cd9c574c353a7d89e7197e742095209d0c0024c9fad74acf220f78fc1a5c30818f6478a18061cfba9ecd5fd2ef94ba30f89bbdbb423a4a5db6a3063633df6077c977a9cbed3840ec85d9853c4601d509a62c63a95cc05b95e1cafce1bb81389c648b73c7c8eb13f46251dfec9eb1c4a06d7f038e3604f62948cfe10bdb5d42a0803b7f22d467ae67be04dd28e49dfc9b0a9d437380b45a613d4e25346b43179fe5cd9f79744b41458914e76f2a9a63cbb95ae7317731627d36b89a779c712e1f4302a9730fc9f23a6725cfa748f8f90432e369674a366973de74003655a651f6e409e15d077d05ab2f44149838ad4ac1d3218c8be31201319b959358e6f1c9f4da4e67e3b8b595cb9e3cb882408282ae620fe3b04bf1d9c354fbcdac29020068ab21a1821b6655a6ad27d61ada9af00425889286718105528a469b6b709b748280609fc75a732645a2c355cda43dd403dfc1e0cf4d188869a763a467a892d6634ad9a0a15ab53dd4e5ac8efcfadea3c842d23367a4ad5c4a432684777ce499673725bd8818ac8eb776e198ded6fcb94aafda6a261dd4db9e3084559c5a68a83ecba68be397f2b5b69c1cdcc20d9be7d122ea0f122b7d658fd4eb081894f0c876d533c58ff547f3df3b232a200eb6fb6040294c305964f2fbd7fee346388e96bfcde130b630205e5512d8287b5f5aa0e52740b4c8b4f8d9bd0890ec01af92d5696e5dfbbb9de49c8cffcd955b31d52ddc45b682cb0c04f441f22b13757ccb320a9851fd7c4f7852c9052fa81a7033a883291e4f95617419e4a1de7e54df4d6adcd220d2357cbe466c2f501d961713106187815b3046be79224e0ea6817d1782967d0f8545d81065e6f0aa9e6632af521ae8830918e63c1f4f10c024d46f6e4a98ddf9c459a449722add392503ed06800e6e0055c8ec0fb866125e941aaf60512e510db1fd23fa27e4a817213874f060c41f41bdeec2816468dbb852337b2ef8065640b06cf9601d8ac4072f9b25016f73ffdbe99c1e98a689bb615a931863329045b9beb263b3a0e5e4c476e2a72957b3a91ede3c065ea504e1e7b5ae5ad38f70827f4a9ad4c321b851f858ef2acfe1994e62ebc4ca1a8c051d150909e542d2836dd7d7acaaeee5727886fc710d5927132293d5ed952781f2ea8f2151cfe2ada9f1ffd6089b48bd721003ef9e6173e1aa089bba987fd8f439e2e6b4dd27490625372ec50fdc2007acca27a43e1e2a81bb19aa48e98497732f648c47082a013b159cefc6f9940a0b23b0be4333094178685742492aaed710ad66c0142d1db4b8529e93a16625e75eac5e319d00ba5939146607bded38f81124167c0881c431eec5f2167c975a452a701e3cf4b60c5ed0cd0fcacdd472eb2e6f7f4c87568324e9bba5e492e6f7b080979f1fb9d669b205bd3e4686d9d74fa03892575f43089c98338b55326d7823ae3c58f30ad0f8fb2f4c53a1c5308e64c65a5f192d24bb164272f3d06c7cc4dda9fda9152b8e61fa3ce39f0cebf58df450036960dc9980aaf9b23c4593c82c7c40c70dcd3d7e6b964dbe996159eb8d3b5caf0546822590e5e5306bb2df9ef398484bef69089ce86e74cefc5cb6c5e554635ae34d6a319401d51a65d4985e95796df6009da22af6955a8317e07f07de3c598f356255cd9a69df751a84a669d7d4f61a197ba121584997c6bfc6b2cd413149e13f4abdd71332f968ee903b7563aedacec6964f2acee6cb55cbabfbacc8fbcc4e94be05d384a8c77415a81a809b96b94247432caf4ad479579f0f9cb6f44881f79a7f284037fc49ac3bfeb119ab4f447684065267634be953d20dcc60fe851fc89d307a746d313928c6966417899a492679c6c6a03313fffb5c98056e1fe862cee3eb095dc7211551902c5c3dfe0398f4375642e9cdec3e76967906b943f221408eaca6a5f5c7c25e4909632f4d1d849759992ebf631ed71859da74f1e7d3171ab719a77a895f954abe97b176736053b4a39a4d0c0dfb555c1766df757b749e5a0fd1b15b0ae7f8cf662a05ed70e6ce7697bad020725c60059ea19e8e3fb219a6508519ce2d3147258f6ab2808aef6821cd52faaefd548fe055b22f908129a29fe2276dbb4ab972731dbcc19fceaaddbf62c545a525721fde7d51e29552dccdd492fdee8226a530ee5f3816e49d77175f2a891227b69777154f845fade797382a92c90a051923cfefaa470357ead3bf98c8a54132312ab05704a3f36baa27761f71fc24fdf49fa1d16445d017a3fc905f96f05cac3b5a5e71c54f32ce213ce4ec3b21bf310660470625fc5dcde3c0839389f1a59559bdcde676330b52d8fff50dcf8731d557e3aa557a21ed2d43542796e28d7046ad52a46927a650ef093c81449665e308d83810bb13bd3480f8bbc3e51757308f9c38ab5d7e1a3d50f3cd21eb822dfd7f34293e65811d931d8948bb7e9ed82e4ca684e00b65431453272cf70db3d6ddf69c9bc00c3d58fa044645c377fa66340dcc7072be361549095bfbf26d857028f6ce6f33a980a63e8043abe5743d95b96e18e1c89a8cb4e6e5bbd97121a9afe489399cf1087c3ccf901b6c8e9f430a999d5b3d0ba52fee266d63019cd371f0f4ea668f3963308d1553e10111c1e22e21d1a3f15abfc12db1d1f52e9ef69ef1ad876efa4ae79861ab2202cad571b94cc712dfedcf0246ffdce8195fdc520b445cd0579c356965a93148448aa210629347dc584f342ff786384708fb2837df025176e4fdda9b5b6916d9bb7cf69d0e5950dea01aab78ecf471c71a3c61bbe7dd56d33caef21158616779fcd8960ddcd3f5b9ad4c6376bc6f5786efc5896aa814a1a5485e8a2a6a0408786143839eb483705e6c924d2aad031103a01cea19643bf9a5693ff90d31c36c8a4f6f16ebee8d090c125549e9bb3325159e68881b301542c5494d227ca27ae00928dc22efaa7d01953cf12a481d386dfdd2ee38ecfe856b331c893637b9eb128a5a64098dcb63ef48b79d1a0717f49f737d8f54b4ff29b05e917a3a907fcecc6f9296c4b72c2ded9b61b9164d1ac2b09c4543f0b7186c9417a8e5203eac325183cda62874f422115a433008deda6e7b4b5026458856c51252e607aa6e26c43865906811aa6ee0893b853a2e2b4fd45adcc10665ade996ea813af4e9dd3ef0bf0a2415be22af0222a5ded4355569f1a9065c5b0decdf48947b4f46f28211c223b42ef393be28fee37a0bcf3f47d9d02e358884781308d6d6ddcbb1428603059d194d622e115202742f73a1ed49aa808e24214fdbe5d87b956109ad3565a68159b0accd28c84939d4f686416bf4ce8841889d10a3f886d31f64a56aec08bd455192f2bd1e44dde7daddca832f412ab7a7163e3d488feeb52478007bdd36f12eb3e4c0a87d96563a47e314b8b63a8b7fd449b343794906610e7d2c74a545b8b5f1ba9c2f142100b61fa46bd3b839d4882cd2f3f2a05e81515d8e073cc529dc0868578dce66d48ffa2c686b5044f4f7ad498d01a72e50f23a315de80b39ba8aa50bacdcc36339e60c272f53c1ef008a26f24ef4bb8405046af2517b892d18ddb36022028ed9bc99a84db8b8f39b161e110e113c153729cd76a4bb8ada60be8b1798403ed2887c10cffe2576ae6a4579c94a8bc1ecfce1748aad1e2f6f7eef37cb3f58bbfb599247f54bd1fd7fa6a8949dac7368b349ecac4bddd756aaf5eb1c7e7a7b806caf7fa606b902a5e461c925515aa8f8a232b7e2b4e14615d9addab3d71f74a0684c76314f3c30428eb04ee898e6ea43f95f8e8ef33d773f9bd3b36960364afcc39bcfdc7ef2a7b893821ae35afc843882f7a84d5779d461e742a3eaca0b21c7c8ccca234ef6a3d153f1a2efdb34e6a981fce952363c90b3b12f74390df3cc2b94a7610f2461dff7390a21cc3849f96dd1d6e64d210ef0a5257202d7c515381f096688b2aef4ce223f6a79c89fa3e6e9b77325e69a981976c7084668f88b8803faa7e53c78b9a85c895295a88131340b371f9269611ec794278dc724bfd60c0c77bd286ad3f8b83f7111279ff93c28ac4c1b1176e8c999e8229cb13295f27fc3b6d5f8e2d3140e44bd4a384c3555cb6550584369aa57c7ae754519da5de3327357436a8f5f2e44e530f3337216618d837f7f524774b76b4980a15ccfadf033001b32b1884c789b571cd37adac723f8d71b88558f224550d99a878472448da53b02d0faad4fddcc16fd1f244cc039e56e9a659d74b2f5fbe67d51d6d614eaf34872748121c4cc85e5a8ba8c7c7f0e01d6755216462c0b3d34d30a031a8aa8f4e2660597fc9068c1d7bcb6929ff034aa95b6d46128c0c047e5f249d656f9b3ef6274e478707e4af6f84f07d93603b5165e3c668f68d2257711a6189a4bc65ff601def482ae966534f115253f9daa62f91198079ed7016fc03e4f060cb3ee4a100eef22ea64791eb18217efb438457f458115c5840e6a1526ca980b54b07ead76b1ee3618133211c28228d60c241b8759a853f63946c2778e78791dd5d0c60af851ac01ac6b7a7e8b95ac5a27378ef1c5bf2fed2c8412bb7ba52777d550f03ab4177c9d2f1af48ffb5ab1db352488576e42975fb65492269275a959a457f54a4bd12c9e03a7e3bf9b8fb623582544083766b3e256c825b5d43eb1bda6fac631b2db907bed920090b1adabd1cda3e07492eb31c15f0be17b1af7fe39f82aa7b7e98ddd9e1d2c74e27b673f529c2cc195007e1eac2dbd5bb3f3e79d7fda1689b50f158fe68ffea2382933005f63fa305ab9da93dd6d0f37a6f913742b499c14c449b8d7ac01813c87d2ef36e318048ff1f21d3cdfe23c537eb51a098ee27b85271678f399af9342339a2a22b9b764bfcdc19d9bfc6d0a1c21bc02d69c5e98483093be868914b7d54461f02994c59f8c682db23a47d825575d941350a6794b8f46569af3666df415e994d6d3b8b6e53a5b04fb89b8ce07f908689782841d0b402759e8d2de3fe0f628649f2a2cc8517c143678a4c909fedb7d8950b793e45397c914a133c173f9ac8ad86de93daaef63accac0ed0ffad772f782deff5854384534a320deba81bca4572ea3ececa6f4e1f206859845685815edadda1cfa20ec00fd438db14aa152f4b111d5adb9b5d7ef60abe9351faa18bc74232d295f37cd33c08047ecdd4419abd852ce2b886f894b15c55b663f8921d27e1ba1918f190bfb69fe88983ed04febfdd6226adf30f809e1593918bdd4cdc9b6cbf6106ce36d4029cbeb72ec33bf256fd2a41ac9cf0f55e2f444a400253ba13e9aa04857b4aa98b7c8726d65893e36e17d0b8c25412082c84d39fd7a185cc65cce99c428c771d848c4246e28b9ad6948b14fe6557be578a93cae04da7ba7ab1ba7408fcf22f7aa1a10ed69f5211eb5445e77ab68f118a4ffaaca3f961f6639962b7183f8060988158fb303d758b002126f972889ef8d80705cebc2f3d214a84e14134e3fe2bc832d01df6be3ab46e417ac4f232a0b719b67fab02adb3cdd7bfed0ec8de05c3f575c1b96a19a711a759002c2e8a737563873983463ec50aa560f7b8925ae17b596a064719356de55c2017e0e76a6fb00529809c6f6b50688859379ffc6ab1c8c938f0f17eecbba9b10d401e5bce90c240062e9fca8cd6798a3e6a30cf05952c2c9c55647ee818e1aff227ac8f87f403966c51a9ab1aae8476c9a4dfbe9f4e923b9fc28cae9044bd03c391e63eef23faf2ea6f6c36de82499a12d67f63b854be361a0a3f270f1b54244efa26c4c4e1738a33448ab9ba423774c02268a80ff0b45c91a05435879a6f1d83871f3aa6408f67de8ed4f01ae954b316012e2c9af97c79662641dacf3579a156ad4bc5a9bf391ad6b67a7f82a47e69fa05ca5d89e1c60e369f62ef5a9d381319deff05a991b0af2c72236598cae3919121dac2579c431837af072ba631935105f0431aaf700fb0a5f8287fab3a613cbc053d121f5d8f8c64a122c3b9d48ad7bb9939fe0e26e165faefb11481e1c38d1fe1ba8001b606f0d8479a88c1b7784a8bd07cd7e00ae17e76fe005033d7d4721914a373983d857bc586671e3f4f1ba995a17ac7ec9dcc97a8ad12e263ec04bee8f9d56e122b36de00da276e955a60dd8da4817b37207308fcf7720b776579684981b9b4b8a418c25226e7a6b7ae77f682a126ba2ccfe9783d1490dffb2464e1b206ae50288946893df7aa7511abc089790cf33b5a54fe564af0f01b0fab17bb78a6f0277d47dc08e049914957955030cc84d0bdd89fc42db6082538aa283c5f24abcd325c8dae710921b7e7f38b63664d6748a368985d9e5e13661cc53687b0b0ed2087a85cfe2b80bc5d8a518ea52126e1320dd8b53687271fcbf3905a9fd41616cf8b2b414f1575f3bc92e6f429c525920704774307deda74a5cb0bcfb7d8b89ed983c13f1f71f5ced6412d79aa2b8cda1643b85d46ee73670d4f3869b4b49259c1524bacee721d6c1476ecd5871cac3dc96c92f0b93e811536b8274356f42aef7d4bbc707cca0cae81b64167a85e7e653b5cc1d519d80c9816945f7868c33369ea88beb1125101f166d9338fbc807b632cbabfe680f70c2dc096b844ff4bf4a95b1ee2a6148548aef6efa864b1176f0b923c1a5023ec44637ce71ffafdab684f705daace0996831fff2b71dc037ce5a68c04458526ed7abfa7e6c2d316ec9052de3cb685e539357d7f79921e1a2f79970f26b9af26c0e3ca4ef1e579c7f6311dfb1f8513ed320f9656effd69af656be35b995cf2d0ef685de0e4af5c3509de467072f80382bf86d7ab0fc4c505fb94882a9425b6d60c18ca8b5a48b6c795169b71bc0650d7a84fdfaf64ca27bbf7647f412640e4260c32a327bb691a1d7ab156fffe60b8920afab866580d1e5db718caaba7584a1daf8356375f3a783361d9e2393ac03d9631a48f49ffe7cecd0a0afb6491075842514ba7ace85b44a867e40cac7ea772c1db1b12ef378990b828e7182c71cdfcff74d5a5782f6f5cfb6dba9ab89b7971695f00f21e6df101581795f8829d3683c1f44c34f5f297e215203260ce5d34976a4c9588985e627b51f2d18d722f385f801310a026ca05066d20e335919809e74fd1a90c5c1b3de215ff6ccafd9c649be2883bbd38176e5ec943471c036a6896d7a9939cc65d6a87bf81e3a2b1296236304236678b9f29721efb5d078d129d156139d397b8b200db7ce343f2bc8606d4216c2add6d1093021c68d90a110fa9c17488bbfb2c71f48acb1ff0d25fada2110a124147c32bad2f91cd00f6b380cace5f480c7684b5fa4517f4ade360fb3cf832bcea9bf8b13ee494c54e9f8516ad1d954cde8b5f28e52804885e535eddee07c352a31bec1add6fdebc4eeda02709f05280730c7d7f3401b88a33c5183ec893034bb4c1959308f99bda7140e68c3b10062128163a1acb3788ffe814fd94dfd02db0d12e19d2c127279cbd17e3324c137e93d310a68faec037887650c4194e55098da91b5ce1722fd6fe80dd4a2c52044594aaa98986bf183bfc936e1a8d02a8eac0ce390a5eb4cbee88114e2fa7652dc2a4be253e185c17a024b22c50b2e381eb68658601d512ff8c80cd0ca53eb01bd2065da96f7187728b668581c0d064ee4c1bc3e9bb239614327d89eeb327d4f2ea5bd03a67bbd010d49185c2f2a62067f8eb0037987c8fbcd7afda508f111e56d93111169144034f5bddc2125911709f2264123cffcc05cc70ff38fba308eb070e34858726271b294e2beaaa68d78c13ad9efef8d7932c50d7772048b877d869d6e6761b2f17bd37c57e58e105c8a2692443abea0374caf5dbbcf652191255175626e6feade7f6f5b0f048d97760f897cb0c47dc50cca95858596da79707bf199a0e1cc3e9c2ee3dad86625b442d671f4105dd6bfd1278e071d3332d2c1ef469907c294d010c134f20cbf23aa702833bc418e13d59e6735c7a8660a7096765ccc059c9e7cb872fc9646d4e5a0a1d741fc4d59fd84026c99a6132233cd3515064cbe1bad901d9b4d2b943af0775c4c9637a725f9ea6d101d1a0ab0adcc8ac10e060c67eed6dfdeadcea7ed2a0f64e84e29968a5e2a4498b2e3ec5b1fada870ce33c715084e462f7f27b3beb479ae4a561f4bb1f8006cb63185d5b60c751f8d468d68f0a0d7d3dbc5b7a26786be26ab884d325a15b6a8be521f3bf99b6dc86804b9f1df14c56fa028cd1a18166ae3df45e8bf16ff25e9c27f3685e8f9750ef2e15386d04db5910417c9d825ef80ea6f1d69e2d4b50489d3db4b2f4074e19b313779cf561aea3958aa83ec0b0cc6a54ebd348d618337e198bb321c927d5a188185224f64e5495f12f736e375f8b8435a4416b84231577172dcd05b8b5b4cca2b22e0e6a017e120b458f0564e9468e8709a4531c9c70ffaf111d9a6a36a1295b68c568376d789a4770426102c16b6dc2d2335379756749985aa58a0095607dded3b6eb59d190eca5107a14f7853e8b2d98ead06f551aa94c2f3e40d421d09d985d890a349a03c9b3245a8b8b9360863da9656ba6f32c111922a165f8682e8402775645bdcd28c8bb1fb104901450990640c8e8b09943b407a50e9954f2c7cc37244549d98ed62639953552dbceb4d2a09c49894b895c00819f822cd34485a1f01a5c447edff877df216d23c71150e086338185d70334f30e952c68cb2ae336b2fbec5f059930f0b68d1dae644da4d1deeab6d1704c0c9daca29d917b88ffb01dff85ecff26a51d73831cd231aaaa8b0566a0126209a7efc02cffa5b984e647c2ed334396c346cdc23ac876337f619a191f965f6224b1985268a4bf8eec096683e09ba2adf644ec1cf5de640edc109c8915cb0e632531c430a9ad3ea3d39f097de0e45f604d5015172339e731725abf06ee0602f726455a85fea3555604685921d1b84b1815ae0cd2c422d9395a96f3107c0447f0f3b0a8771e4f3fdec0def685d9f0f8ad47724d5e4ab7a10bfececd6069d321c120bb56fc1b2e0795af8249d432feabaea04b92ae327a7fedf5a190dc106dd2a4dd08295415031841f59275487d5aa3bcd939e1813bde0908395c0c9ea36f7f1b844ec39795f5652d7755f6387fdcdbb9f62bccb6c3186151d0568a64a37fb5e1ad1f9e89ed7de4906ce3b25e249ece1e67e6f97013904ef0ab469750a4b41b761834bc3939f2b563befa51f30d9bc3ef97ff33c38ae8d9ec9619318c3868b0098bb98ae4a516fb7de3e2293b42b0791521dc3e140e15c3a5b22943802d714d15a5d7c66e409a37d8ae2ddb952534055244d885e4310f7c86bb7e3d244ce491e54cbecbda9dfbc4f685b7c784a4188a3c878ba8367e685ea932dc95b48bf76ad94c886017e82d159a89273dc4acacbe566df56bab9a7551708571da64797c1b5f170cb950457ee9f523196dac916268bcba77f7b950397aa0650b6b6fe8550563dc76862c8fb9c3620855965eada4c7f377413c1f7ae7cec26a4699063c2455277948d76a47290dfbd95538eb144309fe6926e8413380951e01dd35f2a40f76f1569350788d0e82049e15351f2391172a95bcd8e9ada1da2934814d7439432756bd3da7fe149892df592d982b753dcd24581f42dc5193cadf1852a16f206595862039da2d4e8898292b7d3574db14ebe1b391bbf7bb35ff88da5c27ca33f650a147608de2cfed0eee9bbed06004a28a98229f2ef01efeda02f4f8f082b6e1b9d3beb54c77906523e8d65b91b39a479ee1acae838188272baa5ebea779a634a704d53cd2cdec0e1047774eb00d8ba4480a040f39a1dcac6f6d7a9ab54233f41e49d7a2ca338dcd8f7dcd31f03b5059e5c053986cc3248d1677f13900208d3e6005dd5699a859dc24dbb08a410e33df9236c9a76b0e8c0a53b3ab475f3d94333707a6ce687c66320824514b7c34c097217eb1904d556403fbb245e2a7241eec4be8b2cab8558baabf4aaddcdc63105108e37ba5b06391ba666d27d3bc9c6429f28e853a183ebc6ed00a93850a43929727ed0b4f1c248eda2c294dd3df706e54def4a45da0b7d41046944e64b13a4c81abe0e7a62fa08f157823ebc59f9d761e57a57f97aef0cc80b5816bd4d9cf63fbb5b59fc779a840e5a713f3ee37ede709064dd3016d32c2efc20811432dcea4418a5039deac5fc7716aa4294147a05b46216c68773be804d633dfc3167796391489d2e161a1bac4b700a0ce34ef879b0c196ddc76ab35352b1b125f8b4c297bba378212f7929d1dff67d4a34ddc9fb3e083fe37c52749b75658808c27749db429cf2b57393711fbec7a0b1f41e52c361128fe0e569606f94279eb567951871bb0053c909f13206f4ff884e45caac427a24434622de3d645375f6b7460592267fe7e14864fb3f098ab892caba39747c7ef0444a0c4af3662a2fc57852586e5ec6b35d85664489c687bec00f72fa8095c7d19666490ad988d0615a41eb4009185c81fab876bce9fde2df89826ff5b63402f19f1d253ca52c82e46b2e0d92803a2799d939c0e240c77915d9c0b0bcc644defa83b8eb81eb313dd2dbaaf781269e9069680038b0b288a5009a483a67ea86abb2e88d9c479cb9d306a613bae8f021333602ab40ddfe10bfc7b1c042253eb6aae12268f14a88b73ad50d7f2a76fcd043282c60ea36beceb2d14dfff58c09d57e4153f95be94d556b1386603cac3b305ab8d98fecd98d8d8c2d1b70dbcae57120238bda3391b9c2b1af8d70c580996edd7364de684cd65dd56677ef37f3ae9cb2035819cf26f248fcab76059562bcf2ae14fc317cf96d27e7db3b1e2e1c17fdcea72aa80b200ad646b7b78b52950589c9c1c16ea52cdcbaab07dab146811f623d15f641439c73bbc28fc764dec0ae41655ac91e6e991583bc8adc9c6203745b218014f14065c38896109c9012f44309b7c8864617b292562f49c5e721371fa154b6d8c08f042c738942c7a1592d88fe11f65a718367d2d2bf2c7f105140407342b981be48ca5007e3ff30be5adb2b5d7390ddfca4726a855e55cee7132411f090942ed17df41d5ebd8effe8089e84c4510db0d8746c442cfe726d5f8b75ce778d55a8da8159b35c3252e0d099b5442c522067112e19789d63ff443fffc3cf14a28fe945499da8de3df16e464309f1a7ee8b309075f3b0b718f1ae5389ed003060fb42ba2c29617ed7f64f625be15b36518dd22c30bfabd7cd9add24d1bb479c2a5f424c904a6a35d85a32357a518a8874924ffc763e86de492d033f88384ba736bbc0fcc30b28027dde4e899a861dcabef7d04aab5f1a51117784522587d1f50fa2f807a9e1d62830b7472be3d429696026ffa47c852c56e4786a9abe6c3ef4a7379470309e98285d4ae9982d279e25e7766205ccfd760f35e175e49d5987b9a714d38ea1b52ce7ee5bf89c8beb24f2433933cc845acc2f77784ba9420cd4baccfe48afd57add35786598eb99b0b35a1b29306ab549d8fe448fcbff8f74bb3e6b5f4f6d712558c7ba0bc5d379c534a5232221af66f1952cb21cb24567608c7e54e425eb581ee1cba99f38aa1b8f08065589497d47631d77586c981c22852c132ac5172396dd545d538ad260738fcf73dca844acfb31b6fc71d9fad6d13625502dab563b20ea24aba794cd2240a942bd6f0d1f12c968e624da6c9e95891a28df388bcf5aa711d9f924945fad3c0997fbfb3abcc009a6dd7add149fefcef8cea2ce56e9af1f3965e610d0c28cee09dbc2ca471f0ebdb895e4660cebc6441c97bf773f87a95c246bda897ef5651e0f4ca7e9ff21c79797fe197f3a76efe153e21af642889bbc4606aea79e08f2ee1d7b13b8f2058e3ec3e684a3ad12d1b0ea7195087b7f742623e1c5af8125a0c8aac62a56d5765f66e98e3ec827c02eff29dafcb555eb4e6ec8963d8ea4a58824ff5272e964c8b0319f679bdad3faa431ab0d954870c410f7fe45e34d3dc2f76b465b4d52d770c4b79be7af4d2fd1f0e364ec2bd495a4228df0f7aa809c307f7621790361db0055c8868adca33cff661df20785e324c0b0c69d022f4c7089f5f99ae02f1781937195dda1d3ba63b7c3c72e26b357b78373cbf0651d17b1b6273838fdf6a288dbe6f8c0455a8cd529b97007963888404a6b94356cfcae6be25e6b98b412c707b85defd4c4a89d35affd46d00dc68df51076df890091a17284f4766b9bf18537be6ae2826bae7fb7688b03e20f9ac9ba7130e87a2b54f380b951828783a25392e04c436658a55afbd9d723aa2c503a8eee35f02853b510360cea4178c4ad32298a21a0fd096a89e62e2a0f0a6e952f7a690a3a249ccb4a2959e54cf8b6b042067d3b0f34679bf3db34e767eeab27f642eaca54c57e4bce9b199ff80da7ba312bffa0555776c9e3b4bccb56bbb1998b387331c16bc733e19b9291172cf5464ddbbb7aaaa23adec7aa0c920c04c237c911998e522b81003445239e217dcc1e8aff3d13440af036e8ac753cb65c90c811f51978889029a3b99c6c6dc93aea934af9bd88be56bcd1e3cae4e0767464a2e39b211416aaa0c444cb95bc10997e186ef28ec2d3221d13e9ec78db21b772102837ff3275a6ed87387deaa083f34a43862e5f55dc88c5c52884815e7741705c5b441b12692ba4828b9dc4569d0134575e6c167eea66ed448b72c1e33f06b3b800f6632cac476baf0630661dfea7f69c16eae2ea1879af0362f33192bc1879e71ac23cc2bf299ff1f023cc3d78ba8e0e60baf4a582ecfe9a877363eb050d963f8b1479e80d18b7a917e85756379231f6f22b558530f1d7b057a85266127f41697f80dbeff4323cf54e84f4f3c1ae65b62e60ae6bb22e73a838428e97f6d63b0b0ed405e1834e616645205d3eb48d26adfdf13e17ae178ff492eb93347b9f787d829b973cb8e64d0d8fd7bd6376e311840e5c696bfc2cdf856c2c3d2eac05b954ded815e31fd5be87a4ed845fcfcf7e493b81f030e0f76240b1fb6aba88711f464e0726c42b69302ae4a71f6b87a0855a159f1c38f7fc654880f73ff7c8a1b4712e03426c771e089d2ea8087183b302b9d0bb108defa719f382e9abcad7ca2f4d552df32a2739d680b60bf5d4d0ff3bb5c1e360728fbb11e71a001f71c8f1baf0fc126fa6b7932488c91e716fb1f4d892ba3624580bb3bf8549d4da67267b80da72d7d9235cd67f8a522a791f8cbff48f332be8b7f300cfad5f5dc654eb2c52004b90fd6ea9d567f50fa78c3cfb32a030b06b649730614cc49b1d85f80e4d7a192df9924470e5ed569f274ccda8b47dac60bdd1f655c32a54c2bc2903a95887cb83d5e1c6cec31ceb984a805f2f2327491463f2503ec5ce1a7e6508bf881269ce02f66d406b34a42e9a48bd8f9716fc9194e43ec0a4868cde25940804036c28d90b0d34187c2d32b1dfc610e0d16faa3cbf9e24b2e0dfd8b4630654db179d583392e502d656ff064b89e3564fa7135fc9c67993395708adfb92ff10375477a2678702a6b86e812385332d13ebc03eec90f1d4ce5ec07edb106b16a81f8ca72fffd756fb08c7c0640e7bc2d12ea14cb467f3174b7bf85b7254420dbd6353042706407c45a2ea98463c1aa645efe458a105fbd5d66918c56cb9e9535fb74c4da39d46f53c21ec3afeffb198afb565f33f75a3994191c09adbf5edfcb23adbae5d648a6ff263d20821aa56424c47411221186663a93aaf70a7693fa8e257c278d48dc9b86e93dfb4744cbb98d3758aee05f717e6efc3fd3c0768fe885100d2cb5c10ef2aa71cc69a331e6dfaef557104e9a92efd8366d7fba7cc72a08cddf8900d1a472d6dce0fa3d430663cb6ae500e48c62958bd713becf452ca5200ae9beffe43981cc9a154527927688a1f78d0d1ebceab01064a2777e06626c152787047daaeb5ee639206ed5a4ec96591de92320fae333a30525cd40ac5376a3792f29e4d27647a9f8a209ea1b14f0945a9f6435ffccebe482ed7b5f1a19e75bcf8711e52c14c6af0e0435688edddfd7f2563a57a18de5643c1e56eb4da5190a2137494a2cd4d685a8dbb98cf143d591305156178d576136cc22bc048df0108f62d81cc93ea4c63e57fffaf51d1803568e9011518f3fc4a15f0dff960d99e44e67e86a6282cfcb6757cb7fcebf06f5894b6042f5288c855a2be75ed5a1797d877fcc93e51dacef573140b09a217c3201c971f74fc18b7b579a211ed09f093c5e97c3a4f52481a2f31e620d198440a58df64f193bd73e04761fa1f298d23e56e00d9cda6542eae06a7a016290f2ef5756d348919cb8f7a007e94ae5186a9f99755c8ad654e257992e0f543f3b42428d3157707afc2300641a551955554d7f1978094cb8ad994db5ebb357d8d222dd720fe9164815aecf4462f92d180da35303322243fc9b20cf115c42dcfbc5b03250d722234e2c570ad68cdc3e1b4c7b7e46eb4702f23be6308413af567db31e4f8ea5a2357cbbee2f893d7113bbeefb99716321ed1db41c097f1502b7e032ad9417037ec02317672fd5324d8be56c7c1bfce2de8a7cb01f5c9ceb96ad26bfb82ab853bb0d794b7984166b000a945d760a45921231450abe68070d3b297627009e3ca316b235e396c278f159f5b538901a3acbf8ffdf8049896e926ecdc5e7b4e088b55dcb786defd5ec66d5461b855bfbdd2c55a6fdd0ca5e1bf030ab9ecb1c633299afeca42eac8dcc1196748796c3490a408df621ced56801ba19e7f373dab044f59950d5c78b7d28cb00b91cb6176fff2036bbac519a8b591e5af0e1aeb2b38a5b45ce0c4caf9388a928c4382f2974b0205c18cbe9fca2f840fb58ed1346de8968ab6e1c917029c9eec70a2c8bfb88ccce20900652af1e339ded06ced1ce0de48201f22a260a0b21eaa433737112e7eb65ea20153f4f5197b321200f70ea559637fe41b074ef80dc640812880b447f30980d5dc67a248e7bcd5064f8a2b76e2167b51fe27588007025d172f187def50eed6880f419c656b5f03d1b599484d60d58c91bccf814c853d5211ac2481110be86524e9c96e5d1f1773ab91cd95aeec63fe20ba802a223b4fabb34619ab7f025ecea462ad0e6f8771c37681c241f71aeacecac7d79626696c5ab9c5661e3cc1b5f3fa82cd7081964a1784f82ecb41acb3d0b6e7cc2fa8b4575c77402f6ce0da9f04e9c6396335ec9fe9d2189ec52a1e7e77f1b824b841bb0708df0c0bf227e081e8fd6cfb36c35d724ec1794afe1901bbed4667e9630a1f3a6a2390000889f250f1cdd33c35a4e2174d58c59b07450e656aafb4e4478a174305a18d09ea6a1b81e1d94349fed0b49a35231cad66e5cec0dfdaee9ff35eb4523acbffa77c89f59a829dcf41884a7c48019ede02dd8b0f6123a7a8ba941b801c4f3f9068fb1b3cbe1566c27c7d7b55b6da9896f7e20ffb21141bf5705d132d76ce8f93831a70390a752b144d1bbc68a86b3c0225ff8d9f176f39a91f08f1164da636fb3cfefbbb209ae894e6484e91feab47b4d131485ef7d0bdb3f8f01af63ab294d1008a7552c0801e432a01e0606a0aef1b9629def2c70bcf32bf573358d912a48651221d4b2b7985dc092ff1131ecb2521773ffded638ecdf3a1bdd4d798d427f4868ef4e6b4983a5c4f0707d5e4867b4d0c2c94f5c3becd590ae030e6e32bdc76059ffc5bd1bf26d4f7d7d10736660b3d2303f8156a5d90dd15d14c96bbf11dfcd6e145bc5995191b6c0ab4b411f5bf0a7da07f17dc8262156c42cc408aa54805c9dffa95caa2100912f659d37c92747e6f7c6535ba64ab30617a517df6d2a21aa4afa9d43937d5b3780ebc5988e1705a42f3a6a94b6052a0abd997cd7f5d13baeb3ec931dddea3e13777574cab97cc73eebe091a80d1eaf77a5e886753b07b31b0275bfdf04edbf5d25db06cf4e671c3a50beec5edadc5f2adb3e1d08a51e736c8f7ebfc49b6a93c17f4b92204999d06bb59e1a2f</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-xray">      <input class="hbe hbe-input-field hbe-input-field-xray" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-xray" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-xray">请输入密码</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-xray" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>        <path d="M0,2.5c0,0,298.666,0,399.333,0C448.336,2.5,513.994,13,597,13c77.327,0,135-10.5,200.999-10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">Here&#39;s something encrypted, password is required to continue reading.</summary>
    
    
    
    <category term="面经" scheme="https://ychch.top/categories/%E9%9D%A2%E7%BB%8F/"/>
    
    
    <category term="面经" scheme="https://ychch.top/tags/%E9%9D%A2%E7%BB%8F/"/>
    
    <category term="拼多多" scheme="https://ychch.top/tags/%E6%8B%BC%E5%A4%9A%E5%A4%9A/"/>
    
  </entry>
  
  <entry>
    <title>push(array)和push([…array])的区别</title>
    <link href="https://ychch.top/archives/2916f4df.html"/>
    <id>https://ychch.top/archives/2916f4df.html</id>
    <published>2023-03-07T01:38:23.000Z</published>
    <updated>2024-08-20T01:50:08.991Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>刷<a href="https://leetcode.cn/problems/combinations/">Leecode77题</a>中发现的有关push(array)和push([…array])的区别，记录一下。</p><span id="more"></span><p><strong>题目：</strong></p><p>给定两个整数 <code>n</code> 和 <code>k</code>，返回范围 <code>[1, n]</code> 中所有可能的 <code>k</code> 个数的组合。</p><p>你可以按 <strong>任何顺序</strong> 返回答案。</p><p><strong>答案：</strong></p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">var</span> <span class="token function-variable function">combine</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">n<span class="token punctuation">,</span> k</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> sub_res <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">const</span> <span class="token function-variable function">backtracking</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">n<span class="token punctuation">,</span> k<span class="token punctuation">,</span> startIndex</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>sub_res<span class="token punctuation">.</span>length <span class="token operator">===</span> k<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            res<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>sub_res<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> startIndex<span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            sub_res<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">backtracking</span><span class="token punctuation">(</span>n<span class="token punctuation">,</span> k <span class="token punctuation">,</span> i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            sub_res<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token function">backtracking</span><span class="token punctuation">(</span>n<span class="token punctuation">,</span> k<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> res<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>我这个答案得出的结果是 [[],[],[],[]….]</p><p>在查看别人代码之后，发现了差异，是push(array)和push([…array])的区别。</p><p><strong>解析</strong></p><ul><li>res.push(path) 等于把 path 的引用，追加到了数组里面。所以如果path被改变了，res里面的也会改变。</li><li>res.push([…path]),这里等于把 path 的内容拿出来，重新构建了一个数组。然后追加。这里重点是切断了引用关系。</li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;刷&lt;a href=&quot;https://leetcode.cn/problems/combinations/&quot;&gt;Leecode77题&lt;/a&gt;中发现的有关push(array)和push([…array])的区别，记录一下。&lt;/p&gt;</summary>
    
    
    
    <category term="前端开发" scheme="https://ychch.top/categories/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    
    
  </entry>
  
  <entry>
    <title>中国平安前端面试</title>
    <link href="https://ychch.top/archives/19065a70.html"/>
    <id>https://ychch.top/archives/19065a70.html</id>
    <published>2023-02-26T22:45:37.000Z</published>
    <updated>2024-08-20T02:00:04.190Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="00c71fa204ddb4349ed2b32825c47fbbeded12adce43ff82a7e6e8ceec8f1b59"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-xray">      <input class="hbe hbe-input-field hbe-input-field-xray" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-xray" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-xray">请输入密码</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-xray" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>        <path d="M0,2.5c0,0,298.666,0,399.333,0C448.336,2.5,513.994,13,597,13c77.327,0,135-10.5,200.999-10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">Here&#39;s something encrypted, password is required to continue reading.</summary>
    
    
    
    <category term="面经" scheme="https://ychch.top/categories/%E9%9D%A2%E7%BB%8F/"/>
    
    
    <category term="面经" scheme="https://ychch.top/tags/%E9%9D%A2%E7%BB%8F/"/>
    
    <category term="中国平安" scheme="https://ychch.top/tags/%E4%B8%AD%E5%9B%BD%E5%B9%B3%E5%AE%89/"/>
    
  </entry>
  
  <entry>
    <title>阿里云SLS前端提前批面试</title>
    <link href="https://ychch.top/archives/a1cc9d5d.html"/>
    <id>https://ychch.top/archives/a1cc9d5d.html</id>
    <published>2023-02-17T06:44:12.000Z</published>
    <updated>2024-08-15T08:30:21.538Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="725a8809de4ace19c6e136c5bbd244db2f2ceeb716a20f860f6d89648a94d2ac"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-xray">      <input class="hbe hbe-input-field hbe-input-field-xray" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-xray" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-xray">请输入密码</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-xray" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>        <path d="M0,2.5c0,0,298.666,0,399.333,0C448.336,2.5,513.994,13,597,13c77.327,0,135-10.5,200.999-10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">Here&#39;s something encrypted, password is required to continue reading.</summary>
    
    
    
    <category term="面经" scheme="https://ychch.top/categories/%E9%9D%A2%E7%BB%8F/"/>
    
    
    <category term="面经" scheme="https://ychch.top/tags/%E9%9D%A2%E7%BB%8F/"/>
    
    <category term="阿里云" scheme="https://ychch.top/tags/%E9%98%BF%E9%87%8C%E4%BA%91/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript概念辨析</title>
    <link href="https://ychch.top/archives/62403f8d.html"/>
    <id>https://ychch.top/archives/62403f8d.html</id>
    <published>2023-02-12T01:29:08.000Z</published>
    <updated>2024-08-20T01:51:23.554Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>如何理解宏任务、微任务？</p><span id="more"></span><h1 id="异步处理"><a href="#异步处理" class="headerlink" title="异步处理"></a>异步处理</h1><p> JS 引擎对事件队列的取出执行方式，以及与宿主环境的配合，称之为事件循环。</p><h2 id="如何理解宏任务、微任务？"><a href="#如何理解宏任务、微任务？" class="headerlink" title="如何理解宏任务、微任务？"></a>如何理解宏任务、微任务？</h2><p>JavaScript代码执行顺序：</p><ol><li>先执行同步代码</li><li>遇到异步宏任务则将放入宏任务队列中，遇到异步微任务则将放入微任务队列中</li><li>当所有同步代码执行完毕后</li><li>将异步微任务从队列中调入主线程执行</li><li>再将异步宏任务从队列中调入主线程执行（宏任务执行中会产生微任务，这些微任务会在下一个宏任务执行前就完成掉）</li><li>循环往复…</li></ol><p>结论：在异步任务中：微任务先于宏任务</p><h3 id="运行机制"><a href="#运行机制" class="headerlink" title="运行机制"></a>运行机制</h3><p>在事件循环中，每进行一次循环操作称为 tick，关键步骤如下：</p><ul><li>执行一个宏任务（栈中没有就从事件队列中获取）</li><li>执行过程中如果遇到微任务，就将它添加到微任务的任务队列中</li><li>宏任务执行完毕后，立即执行当前微任务队列中的所有微任务（依次执行）</li><li>当前宏任务执行完毕，开始检查渲染，然后GUI线程接管渲染</li><li>渲染完毕后，JS线程继续接管，开始下一个宏任务（从事件队列中获取）</li></ul><h3 id="宏任务"><a href="#宏任务" class="headerlink" title="宏任务"></a>宏任务</h3><p>(macro)task，可以理解是每次执行栈执行的代码就是一个宏任务（包括每次从事件队列中获取一个事件回调并放到执行栈中执行）</p><p>浏览器为了能够使得JS内部(macro)task与DOM任务能够有序的执行，会在一个(macro)task执行结束后，在下一个(macro)task 执行开始前，对页面进行重新渲染，流程如下：</p><p>(<strong>macro</strong>)task-&gt;渲染-&gt;(<strong>macro</strong>)task-&gt;…</p><p>宏任务具体包括：</p><pre class="line-numbers language-none"><code class="language-none">script(整体代码)计时器结束的回调，setTimeout、setInterval事件回调、http 回调等绝大部分异步函数进入宏队列I&#x2F;OUI交互事件postMessageMessageChannelsetImmediate(Node.js 环境)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>new Promise在实例化的过程中所执行的代码都是同步进行的，而then中注册的回调才是异步执行的</strong></p><h3 id="微任务"><a href="#微任务" class="headerlink" title="微任务"></a>微任务</h3><p>在当前 task 执行结束后立即执行的任务。在当前task任务后，下一个task之前，在渲染之前。</p><p>在某一个macrotask执行完后，就会将在它执行期间产生的所有microtask都执行完毕</p><p>具体包括：</p><pre class="line-numbers language-js" data-language="js"><code class="language-js">Promise<span class="token punctuation">.</span>thenObject<span class="token punctuation">.</span>observeMutationObserverprocess<span class="token punctuation">.</span><span class="token function">nextTick</span><span class="token punctuation">(</span>Node<span class="token punctuation">.</span>js 环境<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>案例</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token parameter">_</span> <span class="token operator">=></span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token parameter">resolve</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">_</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol><li>整体script作为第一个宏任务进入主线程，遇到setTimeout入栈处理，发现是异步函数（宏任务），出栈，移交给Web API处理，0秒等待后，将回调函数加到宏任务队列尾部；</li><li>遇到new Promise,入栈处理，发现是同步任务，直接执行，console输出1；</li><li>遇到then，入栈处理，发现是异步函数（微任务），出栈，移交给Web API处理，将回调函数加入微任务队列尾部；</li><li>遇到console.log(2)，入栈处理，同步任务，直接console输出2, 出栈;</li><li>栈已清空，检查微任务队列；</li><li>取出第一个回调函数，入栈处理，发现是同步任务，直接console输出3, 出栈；</li><li>继续从取微任务队列中取下一个，发现微任务队列已清空，结束第一轮事件循环；</li><li>从宏任务队列中取出第一个宏任务，入栈处理，发现是同步任务，直接console输出4；</li></ol><p>所以，最终输出结果为：1 &gt; 2 &gt; 3 &gt; 4</p><h1 id="JavaScript异步解决方案"><a href="#JavaScript异步解决方案" class="headerlink" title="JavaScript异步解决方案"></a>JavaScript异步解决方案</h1><ol><li>回调函数，解决同步问题，但是带来回调地狱</li><li>promise，解决回调地狱，但是无法取消promise，错误需要用回调函数来捕获</li><li>generator，控制函数的执行</li><li>async/await，代码清晰，不用写一堆then链</li></ol><h2 id="代理和反射"><a href="#代理和反射" class="headerlink" title="代理和反射"></a>代理和反射</h2><h1 id="最后一遍说-bind、call、apply"><a href="#最后一遍说-bind、call、apply" class="headerlink" title="最后一遍说 bind、call、apply"></a>最后一遍说 bind、call、apply</h1><p>区别一：call、apply是立即执行、bind是返回一个新的函数</p><p><strong>bind 返回的是一个新的函数，你必须调用它才会被执行</strong></p><pre class="line-numbers language-none"><code class="language-none">obj.myFun.call(db)；　　　　&#x2F;&#x2F; 德玛年龄 99obj.myFun.apply(db);　　　 &#x2F;&#x2F; 德玛年龄 99obj.myFun.bind(db)();　　　&#x2F;&#x2F; 德玛年龄 99<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>区别二：</p><p>call 、bind 、 apply 这三个函数的第一个参数都是 this 的指向对象，<strong>第二个参数差别</strong></p><p>call 的参数是直接放进去的，第二第三第 n 个参数全都用逗号分隔</p><p>apply 的所有参数都必须放在一个数组里面传进去</p><p>bind 除了返回是函数以外，它 的参数和 call 一样</p><pre class="line-numbers language-none"><code class="language-none">obj.myFun.call(db,&#39;成都&#39;,&#39;上海&#39;)；　　　　 &#x2F;&#x2F; 德玛 年龄 99  来自 成都去往上海obj.myFun.apply(db,[&#39;成都&#39;,&#39;上海&#39;]);      &#x2F;&#x2F; 德玛 年龄 99  来自 成都去往上海  obj.myFun.bind(db,&#39;成都&#39;,&#39;上海&#39;)();       &#x2F;&#x2F; 德玛 年龄 99  来自 成都去往上海obj.myFun.bind(db,[&#39;成都&#39;,&#39;上海&#39;])();　　 &#x2F;&#x2F; 德玛 年龄 99  来自 成都, 上海去往 undefined<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><ul><li><a href="https://juejin.cn/post/7072666354402197540#heading-6">宏任务与微任务 - 掘金 (juejin.cn)</a></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;如何理解宏任务、微任务？&lt;/p&gt;</summary>
    
    
    
    <category term="前端开发" scheme="https://ychch.top/categories/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    
    
    <category term="前端" scheme="https://ychch.top/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>前端VUE知识点汇总</title>
    <link href="https://ychch.top/archives/70d3274b.html"/>
    <id>https://ychch.top/archives/70d3274b.html</id>
    <published>2023-02-09T19:37:06.000Z</published>
    <updated>2024-08-20T01:47:49.051Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>背八股过程中，做一些精简记录，不定期更新。</p><p>比较全的前端框架知识 见以前的博文。</p><span id="more"></span><h1 id="vue"><a href="#vue" class="headerlink" title="vue"></a>vue</h1><h2 id="Vue"><a href="#Vue" class="headerlink" title="Vue"></a>Vue</h2><p>一个构建数据驱动的渐进式框架，关于 <em>Vue</em> 的优点，主要有<strong>响应式编程、组件化开发、虚拟 DOM</strong></p><p>响应式编程：通过 <em>MVVM</em> 思想实现数据的双向绑定</p><p>组件化开发：将应用各模块拆分到各组件中，提高开发效率、方便重复使用…</p><p>虚拟 DOM：传统开发中，jQuery或原生DOM操作会导致浏览器不断渲染DOM树，性能开销大；虚拟 <em>DOM</em> 将各种操作放在虚拟节点中，计算完毕后才统一提交。</p><h2 id="双向绑定原理"><a href="#双向绑定原理" class="headerlink" title="双向绑定原理"></a>双向绑定原理</h2><h3 id="vue2"><a href="#vue2" class="headerlink" title="vue2"></a>vue2</h3><p><img data-src="https://s2.loli.net/2023/02/10/82aUMNwB6TYWEp3.png"></p><p>采用<strong>数据劫持</strong>结合<strong>发布者-订阅者模式</strong>的方式，通过Object.defineProperty()来劫持各个属性的setter，getter，在数据变动时发布消息给订阅者，触发相应的监听回调。主要分为：</p><ol><li>需要 observe 的数据对象进行递归遍历，包括子属性对象的属性，都加上 setter 和 getter 这样的话，给这个对象的某个值赋值，就会触发 setter，那么就能监听到了数据变化</li><li>compile 解析模板指令，将模板中的变量替换成数据，然后初始化渲染页面视图，并将每个指令对应的节点绑定更新函数，添加监听数据的订阅者，一旦数据有变动，收到通知，更新视图</li><li>Watcher 订阅者是 Observer 和 Compile 之间通信的桥梁</li><li>MVVM 作为数据绑定的入口，整合 Observer、Compile 和 Watcher 三者，通过 Observer 来监听自己的 model 数据变化，通过 Compile 来解析编译模板指令，最终利用 Watcher 搭起 Observer 和 Compile 之间的通信桥梁，达到数据变化 -&gt; 视图更新；视图交互变化(input) -&gt; 数据 model 变更的双向绑定效果。</li></ol><h3 id="Vue3"><a href="#Vue3" class="headerlink" title="Vue3"></a>Vue3</h3><p><em>Vue 3.0</em> 中采用了 <em>Proxy</em>，抛弃了 <em>Object.defineProperty</em> 方法</p><ol><li><em>Object.defineProperty</em> 无法监控到数组下标的变化，导致通过数组下标添加元素，不能实时响应</li><li><em>Object.defineProperty</em> 只能劫持对象的属性,需要对每个对象，每个属性进行遍历; <em>Proxy</em> 可以劫持整个对象，并返回一个新的对象</li><li><em>Proxy</em> 不仅可以代理对象，还可以代理数组。还可以代理动态增加的属性。</li><li>多达 <em>13</em> 种拦截方法，作为新标准是趋势</li></ol><h3 id="Proxy-只会代理对象的第一层，那么-Vue3-又是怎样处理这个问题的呢？"><a href="#Proxy-只会代理对象的第一层，那么-Vue3-又是怎样处理这个问题的呢？" class="headerlink" title="Proxy 只会代理对象的第一层，那么 Vue3 又是怎样处理这个问题的呢？"></a>Proxy 只会代理对象的第一层，那么 Vue3 又是怎样处理这个问题的呢？</h3><p>判断当前 <em>Reflect.get</em> 的返回值是否为 <em>Object</em>，如果是则再通过 <em>reactive</em> 方法做代理， 这样就实现了深度观测。</p><h2 id="虚拟DOM"><a href="#虚拟DOM" class="headerlink" title="虚拟DOM"></a>虚拟DOM</h2><h3 id="如何理解虚拟DOM"><a href="#如何理解虚拟DOM" class="headerlink" title="如何理解虚拟DOM"></a>如何理解虚拟DOM</h3><p>从本质上来说，Virtual Dom是一个JavaScript对象，通过对象的方式来表示DOM结构。</p><p>将页面的状态抽象为JS对象的形式，配合不同的渲染工具，使跨平台渲染成为可能。</p><p>通过<strong>事务处理机制</strong>，将多次DOM修改的结果一次性的更新到页面上，从而有效的减少页面渲染的次数，减少修改DOM的重绘重排次数，提高渲染性能。</p><h3 id="虚拟DOM的解析过程"><a href="#虚拟DOM的解析过程" class="headerlink" title="虚拟DOM的解析过程"></a>虚拟DOM的解析过程</h3><ul><li>对将要插入到文档中的 DOM 树结构进行分析，使用 js 对象将其表示出来，包含 TagName、props 和 Children 这些属性。然后将这个 js 对象树给保存下来，最后再将 DOM 片段插入到文档中。</li><li>当页面的状态发生改变，需要对页面 DOM 结构进行调整的时候，首先根据变更的状态，重新构建起一棵对象树，然后将这棵新的对象树和旧的对象树进行比较，记录下两棵树的的差异。</li><li>最后将有差异的地方应用到真正的 DOM 树中去，这样视图就更新了。</li></ul><h3 id="为什么使用虚拟DOM"><a href="#为什么使用虚拟DOM" class="headerlink" title="为什么使用虚拟DOM"></a>为什么使用虚拟DOM</h3><ol><li>提升性能</li></ol><p>如果渲染使用真实DOM，由于真实DOM的各项操作会带来大量性能损耗，极大降低渲染效率。使用虚拟 dom ，主要为解决渲染效率的问题。</p><ul><li>真实DOM∶ 生成HTML字符串＋重建所有的DOM元素</li><li>虚拟DOM∶ 生成vNode+ DOMDiff＋必要的dom更新</li></ul><p><strong>虚拟DOM保证性能下限，提供过得去的性能</strong></p><ol start="2"><li>跨平台</li></ol><p>Virtual DOM本质上是JavaScript的对象，它可以很方便的跨平台操作，比如服务端渲染、uniapp等。</p><h2 id="diff算法"><a href="#diff算法" class="headerlink" title="diff算法"></a>diff算法</h2><p>当组件创建和更新时，vue 均会执行内部的 update 函数，该函数使用 render 函数生成的虚拟 dom 树，将新旧两树进行对比，找到差异点，最终更新到真实 dom</p><p>对比差异的过程叫 diff，vue 在内部通过一个叫 patch 的函数完成该过程</p><p>在对比时，vue 采用<strong>深度优先、同层比较</strong>的方式进行比对。</p><p>在判断两个节点是否相同时，vue 是通过<strong>虚拟节点的 key 和 tag</strong>来进行判断</p><h2 id="既然-Vue-通过数据劫持可以精准探测数据变化，为什么还需要虚拟-DOM-进行-diff-监测差异-？"><a href="#既然-Vue-通过数据劫持可以精准探测数据变化，为什么还需要虚拟-DOM-进行-diff-监测差异-？" class="headerlink" title="既然 Vue 通过数据劫持可以精准探测数据变化，为什么还需要虚拟 DOM 进行 diff 监测差异 ？"></a>既然 Vue 通过数据劫持可以精准探测数据变化，为什么还需要虚拟 DOM 进行 diff 监测差异 ？</h2><p>现代前端框架有两种方式侦测变化，一种是 <em>pull</em>，一种是 <em>push</em>。</p><h3 id="pull"><a href="#pull" class="headerlink" title="pull"></a>pull</h3><p>其代表为 <em>React</em>，我们可以回忆一下 <em>React</em> 是如何侦测到变化的。</p><p>我们通常会用 <em>setState API</em> 显式更新,然后 <em>React</em> 会进行一层层的 <em>Virtual Dom Diff</em> 操作找出差异，然后 <em>Patch</em> 到 <em>DOM</em> 上，<em>React</em> 从一开始就不知道到底是哪发生了变化,只是知道「有变化了」,然后再进行比较暴力的 <em>Diff</em> 操作查找「哪发生变化了」</p><h3 id="push"><a href="#push" class="headerlink" title="push"></a><strong>push</strong></h3><p><em>Vue</em> 的响应式系统则是 <em>push</em> 的代表，当 <em>Vue</em> 程序初始化的时候就会对数据 <em>data</em> 进行依赖的收集，一但数据发生变化，响应式系统就会立刻得知，因此 <em>Vue</em> 是一开始就知道是「在哪发生变化了」</p><p>这又会产生一个问题，通常绑定一个数据就需要一个 <em>Watcher</em>，一但我们的绑定细粒度过高就会产生大量的 <em>Watcher</em>，这会带来内存以及依赖追踪的开销，而细粒度过低会无法精准侦测变化，因此 <em>Vue</em> 的设计是选择中等细粒度的方案，<strong>在组件级别进行 <em>push</em> 侦测</strong>的方式</p><p><strong>通常我们会第一时间侦测到发生变化的组件,然后在组件内部进行 <em>Virtual Dom Diff</em> 获取更加具体的差异，而 <em>Virtual Dom Diff</em> 则是 <em>pull</em> 操作，<em>Vue</em> 是 <em>push + pull</em> 结合的方式进行变化侦测的。</strong></p><h2 id="Vue-为什么没有类似于-React-中-shouldComponentUpdate-的生命周期？"><a href="#Vue-为什么没有类似于-React-中-shouldComponentUpdate-的生命周期？" class="headerlink" title="Vue 为什么没有类似于 React 中 shouldComponentUpdate 的生命周期？"></a>Vue 为什么没有类似于 React 中 shouldComponentUpdate 的生命周期？</h2><p>根本原因是 <em>Vue</em> 与 <em>React</em> 的变化侦测方式有所不同</p><p><em>React</em> 是 <em>pull</em> 的方式侦测变化，当 <em>React</em> 知道发生变化后，会使用 <em>Virtual Dom Diff</em> 进行差异检测,但是很多组件实际上是肯定不会发生变化的，这个时候<strong>需要用 <em>shouldComponentUpdate</em> 进行手动操作来减少 <em>diff</em></strong>，从而提高程序整体的性能。</p><p><em>Vue</em> 是 <em>pull+push</em> 的方式侦测变化的，在一开始就知道那个组件发生了变化，因此在 <em>push</em> 的阶段并不需要手动控制 <em>diff</em>，而组件内部采用的 <em>diff</em> 方式实际上是可以引入类似于 <em>shouldComponentUpdate</em> 相关生命周期的，但是**通常合理大小的组件不会有过量的 <em>diff</em>，手动优化的价值有限**，因此目前 <em>Vue</em> 并没有考虑引入 <em>shouldComponentUpdate</em> 这种手动优化的生命周期。</p><h2 id="setup"><a href="#setup" class="headerlink" title="setup"></a>setup</h2><p>给 <code>script</code> 标签附上 <code>setup</code> 属性后，内部将不再通过 <code>export default</code> 抛出方式的语法。<code>template</code> 模板可以直接拿到 <code>script</code> 标签内声明的变量，并且支持响应式</p><h2 id="生命周期"><a href="#生命周期" class="headerlink" title="生命周期"></a>生命周期</h2><p>对于 <em>vue</em> 来讲，生命周期就是一个 <em>vue</em> 实例从创建到销毁的过程。</p><p>通俗的说，<em>hook</em> 就是在程序运行中，在某个特定的位置，框架的开发者设计好了一个钩子来告诉我们当前程序已经运行到特定的位置了，会触发一个回调函数，并提供给我们，让我们可以在生命周期的特定阶段进行相关业务代码的编写</p><p>先看看生命周期的对照表：</p><table><thead><tr><th>Vue 2.0</th><th>Vue3</th><th></th></tr></thead><tbody><tr><td>beforeCreate</td><td>setup()</td><td></td></tr><tr><td>created</td><td>setup()</td><td>创建<code>data</code> 和 <code>method</code></td></tr><tr><td>beforeMount</td><td>onBeforeMount</td><td>组件挂载前执行的函数</td></tr><tr><td>mounted</td><td>onMounted</td><td>组件挂载后的函数</td></tr><tr><td>beforeUpdate</td><td>onBeforeUpdate</td><td>更新前</td></tr><tr><td>updated</td><td>onUpdated</td><td>更新后</td></tr><tr><td>beforeDestroy</td><td>onBeforeUnmount</td><td>卸载前</td></tr><tr><td>destroyed</td><td>onUnmounted</td><td>卸载后</td></tr><tr><td>activated</td><td>onActivated</td><td>被 <code>keep-alive</code> 缓存的组件激活时调用</td></tr><tr><td>deactivated</td><td>onDeactivated</td><td>被 keep-alive 缓存的组件停用时调用</td></tr><tr><td>errorCaptured</td><td>onErrorCaptured</td><td>捕获来自子孙组件的异常时激活钩子函数</td></tr></tbody></table><p><code>setup</code> 调用的时机是创建组件实例，然后初始化 <code>props</code>，紧接着就是调用 <code>setup</code> 函数。在 <code>beforeCreate</code> 钩子之前被调用，所以 <code>setup</code> 内是拿不到 <code>this</code> 上下文的。</p><p>vue3中，除去 <code>beforeCreate</code> 和 <code>created</code> 之外，有 9 个旧的生命周期钩子，我们可以在 <code>setup</code> 方法中访问</p><h3 id="父子组件中生命周期的调用顺序"><a href="#父子组件中生命周期的调用顺序" class="headerlink" title="父子组件中生命周期的调用顺序"></a><strong>父子组件中生命周期的调用顺序</strong></h3><ul><li>加载渲染过程：父<em>beforeCreate</em>-&gt;父<em>created</em>-&gt;父<em>beforeMount</em>-&gt;子<em>beforeCreate</em>-&gt;子<em>created</em>-&gt;子<em>beforeMount</em>- &gt;子<em>mounted</em>-&gt;父<em>mounted</em></li><li>子组件更新过程：父<em>beforeUpdate</em>-&gt;子<em>beforeUpdate</em>-&gt;子<em>updated</em>-&gt;父<em>updated</em></li><li>父组件更新过程：父 <em>beforeUpdate</em> -&gt; 父 <em>updated</em></li><li>销毁过程：父<em>beforeDestroy</em>-&gt;子<em>beforeDestroy</em>-&gt;子<em>destroyed</em>-&gt;父 destroyed</li></ul><h2 id="添加响应式"><a href="#添加响应式" class="headerlink" title="添加响应式"></a>添加响应式</h2><h3 id="reactive"><a href="#reactive" class="headerlink" title="reactive"></a>reactive</h3><p>reactive 接收一个 JS 对象 作为参数，返回一个该对象的proxy代理，允许多层嵌套</p><ul><li><p>JS 对象为 对象、数组和 <code>Map</code>、<code>Set</code> 这样的集合类型，而对 <code>string</code>、<code>number</code> 和 <code>boolean</code> 这样的 <a href="https://developer.mozilla.org/zh-CN/docs/Glossary/Primitive">原始类型</a> 无效</p></li><li><p>不可以随意地“替换”一个响应式对象，不可以将响应式对象的属性赋值或解构</p></li></ul><h2 id="样式穿透"><a href="#样式穿透" class="headerlink" title="样式穿透"></a>样式穿透</h2><p>需要使用 scoped 属性 保证组件间不会样式污染，但是有时候需要做样式穿透，有这么几种方式：</p><ol><li>深度选择器  ::deep()</li><li>在 <em>vue</em> 组件中定义一个全局的 <em>style</em> 标签，一个含有作用域的 <em>style</em> 标签</li></ol><h2 id="ref-的作用"><a href="#ref-的作用" class="headerlink" title="ref 的作用"></a>ref 的作用</h2><p><em>ref</em> 的作用是被用来给元素或子组件注册引用信息。引用信息将会注册在父组件的 <em>$refs</em> 对象上。其特点是：</p><ul><li>如果在普通的 <em>DOM</em> 元素上使用，引用指向的就是 <em>DOM</em> 元素</li><li>如果用在子组件上，引用就指向组件实例</li></ul><p>常见的使用场景有：</p><ol><li>基本用法，本页面获取 <em>DOM</em> 元素</li><li>获取子组件中的 <em>data</em></li><li>调用子组件中的方法</li></ol><h2 id="说一下常用的Vue修饰符"><a href="#说一下常用的Vue修饰符" class="headerlink" title="说一下常用的Vue修饰符"></a>说一下常用的Vue修饰符</h2><ul><li>事件修饰符<ul><li><em>.stop</em>：阻止冒泡。</li><li><em>.prevent</em>：阻止默认事件。</li><li><em>.capture</em>：使用事件捕获模式。</li><li><em>.self</em>：只在当前元素本身触发。</li><li><em>.once</em>：只触发一次。</li></ul></li><li>按键修饰符<ul><li>.<em>enter</em>：回车</li><li>.<em>tab</em>：制表键</li><li>.<em>delete</em>：捕获 “删除” 和 “退格” 键</li><li>.<em>esc</em>：返回</li><li>.<em>space</em>：空格</li></ul></li><li>表单修饰符<ul><li>.<em>lazy</em>：在文本框失去焦点时才会渲染</li><li>.<em>number</em>：将文本框中所输入的内容转换为 number 类型</li><li>.<em>trim</em>：可以自动过滤输入首尾的空格</li></ul></li></ul><h2 id="移动端如何实现一个常见的header组件"><a href="#移动端如何实现一个常见的header组件" class="headerlink" title="移动端如何实现一个常见的header组件"></a>移动端如何实现一个常见的header组件</h2><p>header组件一般分为 左右中 三部分。中间为主标题，可以通过vue props方式做成可配置向外暴露，左右两侧可以通过 <em>vue slot</em> 插槽的方式对外暴露以实现多样化，同时也可以提供 <em>default slot</em> 默认插槽来统一页面风格。</p><h2 id="v-on可以实现监听多个方法吗"><a href="#v-on可以实现监听多个方法吗" class="headerlink" title="v-on可以实现监听多个方法吗"></a>v-on可以实现监听多个方法吗</h2><p>可以，几种写法：</p><pre class="line-numbers language-js" data-language="js"><code class="language-js">写法一：<span class="token operator">&lt;</span>div v<span class="token operator">-</span>on<span class="token operator">=</span><span class="token string">"&#123; 事件类型: 事件处理函数, 事件类型: 事件处理函数 &#125;"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>写法二：<span class="token operator">&lt;</span>div @事件类型<span class="token operator">=</span><span class="token string">"“事件处理函数”"</span> @事件类型<span class="token operator">=</span><span class="token string">"“事件处理函数”"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>写法三：在一个事件里面书写多个事件处理函数<span class="token operator">&lt;</span>div @事件类型<span class="token operator">=</span><span class="token string">"“事件处理函数1，事件处理函数2”"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>写法四：在事件处理函数内部调用其他的函数<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="vue数据为什么频繁变化但只更新一次"><a href="#vue数据为什么频繁变化但只更新一次" class="headerlink" title="vue数据为什么频繁变化但只更新一次"></a>vue数据为什么频繁变化但只更新一次</h2><p><em>DOM</em> 更新是一个异步操作，在数据更新后会首先被 <em>set</em> 钩子监听到，但是不会马上执行 <em>DOM</em> 更新，而是在下一轮循环中执行更新。</p><p><em>具体实现是vue</em> 中实现了一个 <em>queue</em> 队列用于存放本次事件循环中的所有 <em>watcher</em> 更新，并且同一个 <em>watcher</em> 的更新只会被推入队列一次。在本轮事件循环的微任务执行结束后执行此更新，这就是 <em>DOM</em> 只会更新一次的原因。</p><p>在下一个的事件循环“<em>tick</em>”中，<em>vue</em> 刷新队列并执行实际 (已去重的) 工作。<em>vue</em> 在内部对异步队列尝试使用原生的 <em>Promise.then、MutationObserver</em>  和 <em>setImmediate</em>，如果执行环境不支持，则会采用 <em>setTimeout(fn, 0)</em> 代替。</p><h2 id="插槽和作用域插槽的区别"><a href="#插槽和作用域插槽的区别" class="headerlink" title="插槽和作用域插槽的区别"></a>插槽和作用域插槽的区别</h2><p>插槽的作用是子组件提供了可替换模板，父组件可以更换模板的内容。</p><p>作用域插槽给了子组件将数据返给父组件的能力，让父组件根据子组件的传递过来的数据决定如何渲染该插槽。<strong>本质是子组件可以通过插槽的位置绑定一些数据，让父组件插槽位置可以用这个数据。</strong></p><h2 id="vue中相同逻辑如何进行抽离？"><a href="#vue中相同逻辑如何进行抽离？" class="headerlink" title="vue中相同逻辑如何进行抽离？"></a>vue中相同逻辑如何进行抽离？</h2><p>vue2 中采用混入（<em>mixin</em>）技术。</p><p>vue3 中采用组合式函数，组合式函数(Composables) 是一个利用 Vue 的组合式 API 来封装和复用<strong>有状态逻辑</strong>的函数。</p><h2 id="vue为什么采用异步渲染"><a href="#vue为什么采用异步渲染" class="headerlink" title="vue为什么采用异步渲染"></a>vue为什么采用异步渲染</h2><p>如果不采用异步更新，那么每次更新数据都会对当前组件进行重新渲染；为了性能考虑，<em>Vue</em> 会在本轮数据更新后，再去异步更新视图</p><p>异步渲染的原理</p><ol><li>调用 <em>notify( )</em> 方法，通知 <em>watcher</em> 进行更新操作</li><li>依次调用 watcher 的 update 方法</li><li>对 watcher 进行去重操作（通过 id）放到队列里</li><li>执行完后异步清空这个队列，nextTick（flushSchedulerQueue）进行批量更新操作</li></ol><h2 id="nextTick原理及作用"><a href="#nextTick原理及作用" class="headerlink" title="$nextTick原理及作用"></a>$nextTick原理及作用</h2><p>nextTick 其本质是对 JavaScript 执行原理 EventLoop 的一种应用。</p><p>nextTick 的核心是利用了如 Promise 、MutationObserver、setImmediate、setTimeout的原生 JavaScript 方法来模拟对应的微/宏任务的实现，本质是为了利用 JavaScript 的这些异步回调任务队列来实现 Vue 框架中自己的异步回调队列。</p><p>有时候，可能遇到这样的情况，DOM1的数据发生了变化，而DOM2需要从DOM1中获取数据，那这时就会发现DOM2的视图并没有更新，这时就需要用到了<code>nextTick</code>了。</p><p>由于Vue的DOM操作是异步的，所以，在上面的情况中，就要将DOM2获取数据的操作写在<code>$nextTick</code>中。</p><p>两种情况用到：</p><ol><li>在数据变化后执行的某个操作，而这个操作需要使用随数据变化而变化的DOM结构的时候，这个操作就需要方法在<code>nextTick()</code>的回调函数中；</li><li>在created()钩子进行DOM操作，也一定要放在<code>nextTick()</code>的回调函数中。因为在created()钩子函数中，页面的DOM还未渲染，没办法操作DOM，所以必须将代码放在<code>nextTick()</code>的回调函数中</li></ol><h2 id="v-if、v-show"><a href="#v-if、v-show" class="headerlink" title="v-if、v-show"></a>v-if、v-show</h2><ul><li>v-if会调用addIfCondition方法，生成vnode的时候会忽略对应节点，render的时候就不会渲染；</li><li>v-show会生成vnode，render的时候也会渲染成真实节点，只是在render过程中会在节点的属性中修改show属性值，也就是常说的display；</li></ul><p>两者区别：</p><ul><li><strong>手段</strong>：v-if是动态的向DOM树内添加或者删除DOM元素；v-show是通过设置DOM元素的display样式属性控制显隐；</li><li><strong>编译过程</strong>：v-if切换有一个局部编译/卸载的过程，切换过程中合适地销毁和重建内部的事件监听和子组件；v-show只是简单的基于css切换；</li><li><strong>编译条件</strong>：v-if是惰性的，如果初始条件为假，则什么也不做；只有在条件第一次变为真时才开始局部编译; v-show是在任何条件下，无论首次条件是否为真，都被编译，然后被缓存，而且DOM元素保留；</li><li><strong>性能消耗</strong>：v-if有更高的切换消耗；v-show有更高的初始渲染消耗；</li><li><strong>使用场景</strong>：v-if适合运营条件不大可能改变；v-show适合频繁切换。</li></ul><h2 id="v-model"><a href="#v-model" class="headerlink" title="v-model"></a>v-model</h2><p>v-model 实际上是一个语法糖</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token operator">&lt;</span>input v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"searchText"</span><span class="token operator">></span> 全等于<span class="token operator">&lt;</span>input  v<span class="token operator">-</span>bind<span class="token operator">:</span>value<span class="token operator">=</span><span class="token string">"searchText"</span>  v<span class="token operator">-</span>on<span class="token operator">:</span>input<span class="token operator">=</span><span class="token string">"searchText = $event.target.value"</span><span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>适用于<strong>表单元素、组件</strong></p><p>如何理解v-model用在组件上，自定义组件和父组件的交互如下：</p><ol><li>父组件将<code>searchText</code>变量传入custom-input 组件，使用的 prop 名为<code>value</code>；</li><li>custom-input 组件向父组件传出名为<code>input</code>的事件，父组件将接收到的值赋值给<code>searchText</code>；</li></ol><h2 id="keep-alive"><a href="#keep-alive" class="headerlink" title="keep-alive"></a>keep-alive</h2><p>在组件切换的时候，保存一些组件的状态防止多次渲染，可以使用 keep-alive 组件包裹需要保存的组件。</p><h1 id="VueRouter"><a href="#VueRouter" class="headerlink" title="VueRouter"></a>VueRouter</h1><h2 id="hash模式和history模式"><a href="#hash模式和history模式" class="headerlink" title="hash模式和history模式"></a>hash模式和history模式</h2><p><code>#</code> 后面 <em>hash</em> 值的变化，不会导致浏览器向服务器发出请求，浏览器不发出请求，就不会刷新页面；</p><p>通过监听 <em>hashchange</em> 事件可以知道 <em>hash</em> 发生了哪些变化，然后根据 <em>hash</em> 变化来实现更新页面部分内容的操作。</p><p><em>history</em> 模式的实现，主要是 <em>HTML5</em> 标准发布的两个 <em>API</em>，<em>pushState</em> 和 <em>replaceState</em>，这两个 <em>API</em> 可以 <strong>改变url但又不刷新页面</strong>的效果。这样就可以监听 <em>url</em> 变化来实现更新页面部分内容的操作。</p><p>两者区别：</p><ul><li>首先是在 <em>URL</em> 的展示上，<em>hash</em> 模式有“#”，<em>history</em> 模式没有</li><li>刷新页面时，<em>hash</em> 模式可以正常加载到 <em>hash</em> 值对应的页面，而 <em>history</em> 没有处理的话，会返回 <em>404</em>，一般需要后端将所有页面都配置重定向到首页路由</li><li>在兼容性上，<em>hash</em> 可以支持低版本浏览器和 <em>IE</em></li></ul><h2 id="router和route区别"><a href="#router和route区别" class="headerlink" title="router和route区别"></a>router和route区别</h2><ul><li>$route 是“路由信息对象”，包括 path，params，hash，query，fullPath，matched，name ，component等路由信息参数</li><li>$router 是“路由实例”对象包括了路由的跳转方法，钩子函数等。</li></ul><h2 id="路由懒加载"><a href="#路由懒加载" class="headerlink" title="路由懒加载"></a>路由懒加载</h2><p>延迟加载，即在需要的时候进行加载，随用随载</p><p>如果能把不同路由对应的组件分割成不同的代码块，当路由被访问的时候才加载对应组件，这样就更加高效了。</p><p>非懒加载：</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">import</span> List <span class="token keyword">from</span> <span class="token string">"@/components/list.vue"</span><span class="token punctuation">;</span><span class="token keyword">const</span> router <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">VueRouter</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>  <span class="token literal-property property">routes</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">&#123;</span> <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">"/list"</span><span class="token punctuation">,</span> <span class="token literal-property property">component</span><span class="token operator">:</span> List <span class="token punctuation">&#125;</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>懒加载：</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> <span class="token function-variable function">List</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">"@/components/list.vue"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> router <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">VueRouter</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>  <span class="token literal-property property">routes</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">&#123;</span> <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">"/list"</span><span class="token punctuation">,</span> <span class="token literal-property property">component</span><span class="token operator">:</span> List <span class="token punctuation">&#125;</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="对前端路由的理解"><a href="#对前端路由的理解" class="headerlink" title="对前端路由的理解"></a>对前端路由的理解</h2><p>在前端技术早期，一个 url 对应一个页面，如果要从 A 页面切换到 B 页面，那么必然伴随着页面的刷新。这个体验并不好，不过在最初也是无奈之举——用户只有在刷新页面的情况下，才可以重新去请求数据。</p><p>Ajax 出现了，它允许人们在不刷新页面的情况下发起请求。与之共生的，还有不刷新页面即可更新页面内容这种需求。在这样的背景下，出现了 <strong>SPA（单页面应用</strong>）。</p><p>在 SPA 诞生之初，在内容切换前后，页面的 URL 都是一样的，这就有两个问题：</p><ul><li>SPA 其实并不知道当前的页面“进展到了哪一步，一次刷新，一切就会被清零，必须重复之前的操作、才可以重新对内容进行定位</li><li>有且仅有一个 URL 给页面做映射，这对 SEO 也不够友好，收集信息不全</li></ul><p>为了解决这个问题，前端路由出现了</p><p>前端路由可以帮助我们在仅有一个页面的情况下，“记住”用户当前走到了哪一步——为 SPA 中的各个视图匹配一个唯一标识。刷新页面，因为当前的 URL 可以标识出他所处的位置，因此内容也不会丢失。</p><p>如何实现呢：</p><ol><li>拦截用户的刷新操作，因为一旦刷新就重新请求资源，就重来了，要把刷新这个动作完全放到前端逻辑里消化掉。</li><li>感知 URL 的变化。这里不是说要改造 URL、凭空制造出 N 个 URL 来。我们可以给它做一些微小的处理，根据后续感知到的变化，用 JS 去给它生成不同的内容。</li></ol><h1 id="Vuex"><a href="#Vuex" class="headerlink" title="Vuex"></a>Vuex</h1><p>Vuex 是一个专为 Vue.js 应用程序开发的状态管理模式。</p><p>待续…</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;背八股过程中，做一些精简记录，不定期更新。&lt;/p&gt;
&lt;p&gt;比较全的前端框架知识 见以前的博文。&lt;/p&gt;</summary>
    
    
    
    <category term="前端开发" scheme="https://ychch.top/categories/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    
    
    <category term="前端" scheme="https://ychch.top/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>2023总结与新年展望</title>
    <link href="https://ychch.top/archives/66bfc408.html"/>
    <id>https://ychch.top/archives/66bfc408.html</id>
    <published>2023-01-15T17:29:46.000Z</published>
    <updated>2024-08-20T02:07:36.059Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="5f03024f38b5a4cb39b80e4bea940dbf3dace1a005a64b95cc3b013c1c9ce6fa"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-xray">      <input class="hbe hbe-input-field hbe-input-field-xray" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-xray" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-xray">请输入密码</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-xray" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>        <path d="M0,2.5c0,0,298.666,0,399.333,0C448.336,2.5,513.994,13,597,13c77.327,0,135-10.5,200.999-10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">Here&#39;s something encrypted, password is required to continue reading.</summary>
    
    
    
    <category term="年度总结" scheme="https://ychch.top/categories/%E5%B9%B4%E5%BA%A6%E6%80%BB%E7%BB%93/"/>
    
    <category term="随记" scheme="https://ychch.top/categories/%E5%B9%B4%E5%BA%A6%E6%80%BB%E7%BB%93/%E9%9A%8F%E8%AE%B0/"/>
    
    
    <category term="新年展望" scheme="https://ychch.top/tags/%E6%96%B0%E5%B9%B4%E5%B1%95%E6%9C%9B/"/>
    
  </entry>
  
  <entry>
    <title>2023寒假记事</title>
    <link href="https://ychch.top/archives/911aeea6.html"/>
    <id>https://ychch.top/archives/911aeea6.html</id>
    <published>2023-01-08T07:17:10.000Z</published>
    <updated>2024-08-20T02:08:10.451Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>现在也尝试着多做一些记录，以此篇记录倒数第二个寒假时光~</p><span id="more"></span><h3 id="1-8-高中同学聚餐"><a href="#1-8-高中同学聚餐" class="headerlink" title="1.8 高中同学聚餐"></a>1.8 高中同学聚餐</h3><p>每年过年回来和高中同学一起吃饭，聊聊一年里新奇有趣的事，吐槽一下苦闷，不同行业之间交流见闻，是我每次回来都很期待的事情。</p><p>今天约了三五好友，湖边散步，聊天说地，晚上一起吃的火锅。</p><p>和老同学一起，总是格外的放松，难得的快乐</p><table><thead><tr><th><img data-src="https://ychch-blog.oss-cn-hongkong.aliyuncs.com/image-20230108232854430.webp" alt="image-20230108232854430"></th><th><img data-src="https://ychch-blog.oss-cn-hongkong.aliyuncs.com/image-20230108232948867.webp" alt="image-20230108232948867"></th><th><img data-src="https://ychch-blog.oss-cn-hongkong.aliyuncs.com/image-20230108233046533.webp" alt="image-20230108233046533"></th></tr></thead><tbody><tr><td><img data-src="https://ychch-blog.oss-cn-hongkong.aliyuncs.com/image-20230108232758478.webp" alt="image-20230108232758478"></td><td><img data-src="https://ychch-blog.oss-cn-hongkong.aliyuncs.com/image-20230108233123644.webp" alt="image-20230108233123644"></td><td><img data-src="https://ychch-blog.oss-cn-hongkong.aliyuncs.com/image-20230108233158403.webp" alt="image-20230108233158403"></td></tr><tr><td><img data-src="https://ychch-blog.oss-cn-hongkong.aliyuncs.com/image-20230108233219158.webp" alt="image-20230108233219158"></td><td><img data-src="https://ychch-blog.oss-cn-hongkong.aliyuncs.com/image-20230108233310478.webp" alt="image-20230108233310478"></td><td><img data-src="https://ychch-blog.oss-cn-hongkong.aliyuncs.com/image-20230108233318813.webp" alt="image-20230108233318813"></td></tr></tbody></table><h3 id="1-14-炸年货"><a href="#1-14-炸年货" class="headerlink" title="1.14 炸年货"></a>1.14 炸年货</h3><h3 id="1-15-初雪"><a href="#1-15-初雪" class="headerlink" title="1.15 初雪"></a>1.15 初雪</h3><table><thead><tr><th><img data-src="https://ychch-blog.oss-cn-hongkong.aliyuncs.com/IMG_1783.webp" alt="IMG_1783"></th><th><img data-src="https://ychch-blog.oss-cn-hongkong.aliyuncs.com/IMG_1789.webp" alt="IMG_1789"></th><th><img data-src="https://ychch-blog.oss-cn-hongkong.aliyuncs.com/IMG_1781.webp" alt="IMG_1781"></th></tr></thead><tbody><tr><td><img data-src="https://ychch-blog.oss-cn-hongkong.aliyuncs.com/IMG_1797.webp" alt="IMG_1797"></td><td><img data-src="https://ychch-blog.oss-cn-hongkong.aliyuncs.com/IMG_1799.webp" alt="IMG_1799"></td><td><img data-src="https://ychch-blog.oss-cn-hongkong.aliyuncs.com/IMG_1792.webp" alt="IMG_1792"></td></tr><tr><td><img data-src="https://ychch-blog.oss-cn-hongkong.aliyuncs.com/IMG_1795.webp" alt="IMG_1795"></td><td><img data-src="https://ychch-blog.oss-cn-hongkong.aliyuncs.com/IMG_1803.webp" alt="IMG_1803"></td><td><img data-src="https://ychch-blog.oss-cn-hongkong.aliyuncs.com/IMG_1801.webp" alt="IMG_1801"></td></tr></tbody></table>]]></content>
    
    
    <summary type="html">&lt;p&gt;现在也尝试着多做一些记录，以此篇记录倒数第二个寒假时光~&lt;/p&gt;</summary>
    
    
    
    <category term="随记" scheme="https://ychch.top/categories/%E9%9A%8F%E8%AE%B0/"/>
    
    
    <category term="寒假记事" scheme="https://ychch.top/tags/%E5%AF%92%E5%81%87%E8%AE%B0%E4%BA%8B/"/>
    
  </entry>
  
  <entry>
    <title>家庭光猫改桥接</title>
    <link href="https://ychch.top/archives/98abee74.html"/>
    <id>https://ychch.top/archives/98abee74.html</id>
    <published>2023-01-07T05:48:07.000Z</published>
    <updated>2024-08-20T02:07:09.417Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>今天一到家又被家里的WiFi开始折磨。因为小区比较老了，之前光纤埋线只埋了一个端口，导致现在只有爸妈房间可以装路由。</p><p>家里空间比较大，墙壁比较厚，导致我房间一直处于信号荒漠区，晚上在家躺床玩手机还用不上wifi，被折磨了四年o_o ….</p><p>前两年在客厅装了个tplink的信号增强器，有效果，我姐的房间实现网络覆盖，but我的还在荒漠区(;´༎ຶД༎ຶ`)</p><p>前一阵看<a href="https://post.smzdm.com/p/aevx5gdz/">一篇文章</a>介绍申请公网IP里提到 拨号方式中路由和桥接的不同，这次回家第一件事就是试试这个。</p><span id="more"></span><h3 id="关于拨号方式"><a href="#关于拨号方式" class="headerlink" title="关于拨号方式"></a>关于拨号方式</h3><p>现在大多运营商都是光迁入户，然后通过光猫实现广电转换。现在光猫基本上都有两种模式，路由模式和桥接模式，两种模式的区别如下:</p><p><strong>路由模式:使用光猫完成光电转换，并进行拨号，并路由给其他设备，光猫任务量比较大。</strong></p><p><strong>桥接模式:光猫只完成光电转换，使用下一级路由器进行拨号，并路由，光猫任务量轻。主要任务是由路由器完成。</strong></p><p>因为运营商赠送的光猫一般情况下性能相对较弱，对于家中设备多的折腾一族来说，因为有大量的设备，端口转发等等，光猫基本上不能满足需求。所以大都是选择光猫桥接，路由器进行拨号，最好选一个性能强悍点的路由器。</p><p>光猫改桥接有两种方法：一种打客服电话，他们会后台同步，把配置改为桥接；但是我电话打过去了，湖北电信不肯提供这个服务，无奈；另一种就是拿到超级管理员密码，自行修改。关于这个我也打了电话，问他们超级管理员密码，依旧是说没有，反正没有帮上任何忙</p><h3 id="如何拿到超管密码"><a href="#如何拿到超管密码" class="headerlink" title="如何拿到超管密码"></a>如何拿到超管密码</h3><p>尝试了网络上很多方法，得出的结论是大多数帖子都失效了，联通电信移动 又不傻，不会放任一些万能密码的，现在应该都是每台光猫独自的密码，看这种类似的教程还是要看新不看旧；</p><p>我是跟着这个视频成功的：<a href="https://www.bilibili.com/video/BV1LS4y187NX/?vd_source=57ac88e7b8d0e5cd1b0c032745042667">电信光猫100%获取超级管理员密码，光猫改桥接，通过小翼管家返回密码_哔哩哔哩_bilibili</a></p><p>主要用到小翼管家 和 一个抓包软件，教程里是httpcanary，我用的是IOS系统，所以自己换成了stream。思路流程还是和视频里一样，这里就不赘述了。</p><p>这里额外想提一点：</p><p>很多时候，跟着网上的教程做一些配置，不能无脑全称跟，还是要有一些基础知识备着，这样才能在一些环节自己做替换。 比如这次的抓包软件 ，以前的我可能就是借台安卓机，非要一步步全程按照教程来，但最近自己正好在学http请求头相关的浏览器知识，所以知其所以然后就自己找了个 ios的抓包软件，软件里界面啥的都不一样，但是只要自己知道为什么做这一步，很多时候就可以举一反三了。</p><h3 id="路由改桥接"><a href="#路由改桥接" class="headerlink" title="路由改桥接"></a>路由改桥接</h3><p>连接光猫的wifi，通过超级管理员密码进入光猫管理后台，具体设置指南可以看下面这篇文章，讲的也挺详细，但是有两点不要跟：</p><p><a href="https://zhuanlan.zhihu.com/p/358075010">光猫桥接模式设置指南 - 知乎 (zhihu.com)</a></p><ol><li><strong><del>超级管理员密码：nE7jA%5m</del></strong>  错的</li><li><del>关闭光猫的DHCP服务</del>  没有必要，且不建议这么做</li></ol><p>下图是我的配置截图</p><img data-src="https://ychch-blog.oss-cn-hongkong.aliyuncs.com/image-20230107224133514.webp" alt="image-20230107224133514" style="zoom:67%;" /><h3 id="光猫接路由"><a href="#光猫接路由" class="headerlink" title="光猫接路由"></a>光猫接路由</h3><p>路由模式下，光猫既干光电转换，又做进行拨号，任务量比较大；改成桥接模式后光猫只完成光电转换，拨号就交给路由器。</p><p>GG的是 我又不知道家里的宽带密码，好在现在的服务越来越好了，直接网上可以查询修改，<a href="https://hb.189.cn/pages/selfservice/custinfomanager/password/resetpassword.jsp">附上链接</a></p><p>进入路由器后台管理系统，我用的TP-LINK。在上网连接里 使用 <strong>宽带上网</strong>，使用账号密码，就搞定了。网络测速：<a href="https://www.speedtest.cn/">测速网 - 专业测网速</a></p><p>搞完明显网络好了很多，上来的流程说来简单，但是也搞了我好几个小时(;´༎ຶД༎ຶ`)。但是这种成功DIY也是超级快乐的。</p><img data-src="https://ychch-blog.oss-cn-hongkong.aliyuncs.com/image-20230107230043140.webp" alt="image-20230107230043140" style="zoom:67%;" />]]></content>
    
    
    <summary type="html">&lt;p&gt;今天一到家又被家里的WiFi开始折磨。因为小区比较老了，之前光纤埋线只埋了一个端口，导致现在只有爸妈房间可以装路由。&lt;/p&gt;
&lt;p&gt;家里空间比较大，墙壁比较厚，导致我房间一直处于信号荒漠区，晚上在家躺床玩手机还用不上wifi，被折磨了四年o_o ….&lt;/p&gt;
&lt;p&gt;前两年在客厅装了个tplink的信号增强器，有效果，我姐的房间实现网络覆盖，but我的还在荒漠区(;´༎ຶД༎ຶ`)&lt;/p&gt;
&lt;p&gt;前一阵看&lt;a href=&quot;https://post.smzdm.com/p/aevx5gdz/&quot;&gt;一篇文章&lt;/a&gt;介绍申请公网IP里提到 拨号方式中路由和桥接的不同，这次回家第一件事就是试试这个。&lt;/p&gt;</summary>
    
    
    
    <category term="随记" scheme="https://ychch.top/categories/%E9%9A%8F%E8%AE%B0/"/>
    
    
    <category term="光猫改造" scheme="https://ychch.top/tags/%E5%85%89%E7%8C%AB%E6%94%B9%E9%80%A0/"/>
    
  </entry>
  
  <entry>
    <title>2023深圳跨年之行</title>
    <link href="https://ychch.top/archives/610a7c6b.html"/>
    <id>https://ychch.top/archives/610a7c6b.html</id>
    <published>2023-01-04T06:55:25.000Z</published>
    <updated>2024-08-20T02:07:53.227Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="ff1e27ff5e5b74572b112b589ba676d967730f7040e359fcb33196398500359c"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-xray">      <input class="hbe hbe-input-field hbe-input-field-xray" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-xray" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-xray">请输入密码</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-xray" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>        <path d="M0,2.5c0,0,298.666,0,399.333,0C448.336,2.5,513.994,13,597,13c77.327,0,135-10.5,200.999-10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">Here&#39;s something encrypted, password is required to continue reading.</summary>
    
    
    
    <category term="随记" scheme="https://ychch.top/categories/%E9%9A%8F%E8%AE%B0/"/>
    
    
    <category term="深圳跨年" scheme="https://ychch.top/tags/%E6%B7%B1%E5%9C%B3%E8%B7%A8%E5%B9%B4/"/>
    
  </entry>
  
  <entry>
    <title>浏览器原理</title>
    <link href="https://ychch.top/archives/f1e02d11.html"/>
    <id>https://ychch.top/archives/f1e02d11.html</id>
    <published>2022-12-09T06:09:10.000Z</published>
    <updated>2024-08-20T01:46:56.174Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p><img data-src="https://s2.loli.net/2022/12/09/hn6szuTWENfaHPZ.png"></p><span id="more"></span><h1 id="浏览器安全"><a href="#浏览器安全" class="headerlink" title="浏览器安全"></a>浏览器安全</h1><h2 id="XSS攻击"><a href="#XSS攻击" class="headerlink" title="XSS攻击"></a>XSS攻击</h2><p>XSS攻击指的是跨站脚本攻击(Cross-Site Scripting)，是<strong>一种代码注入攻击</strong>。攻击者通过在网站注入恶意脚本，使之在用户的浏览器上运行，从而盗取用户的信息如 cookie 等。</p><p>XSS 的本质是因为网站没有对恶意代码进行过滤，与正常的代码混合在一起了，浏览器没有办法分辨哪些脚本是可信的，从而导致了恶意代码的执行。</p><p>攻击者可以通过XSS攻击进行以下操作：</p><ul><li>获取页面的数据，如DOM、cookie、localStorage；</li><li>DOS攻击，发送合理请求，占用服务器资源，从而使用户无法访问服务器；</li><li>破坏页面结构；</li><li>流量劫持（将链接指向某网站）</li></ul><h3 id="攻击类型"><a href="#攻击类型" class="headerlink" title="攻击类型"></a>攻击类型</h3><p>XSS 可以<strong>分为存储型、反射型和 DOM 型</strong>：</p><ul><li>存储型指的是恶意脚本会存储在目标服务器上，当浏览器请求数据时，脚本从服务器传回并执行。</li><li>反射型指的是攻击者诱导用户访问一个带有恶意代码的 URL 后，服务器端接收数据后处理，然后把带有恶意代码的数据发送到浏览器端，浏览器端解析这段带有 XSS 代码的数据后当做脚本执行，最终完成 XSS 攻击。 </li><li>DOM 型指的通过修改页面的 DOM 节点形成的 XSS。</li></ul><p>反射型 XSS 跟存储型 XSS 的区别是：存储型 XSS 的恶意代码存在数据库⾥，反射型 XSS 的恶意代码存在 URL ⾥。 </p><p>反射型 XSS 漏洞常⻅于通过 URL 传递参数的功能，如⽹站搜索、跳转等。 由于需要⽤户主动打开恶意的 URL 才能⽣效，攻击者往往会结合多种⼿段诱导⽤户点击。  </p><p>DOM 型 XSS 跟前两种 XSS 的区别：DOM 型 XSS 攻击中，取出和执⾏恶意代码由浏览器端完成，属于前端JavaScript ⾃身的安全漏洞，⽽其他两种 XSS 都属于服务端的安全漏洞。 </p><h2 id="如何抵御XSS"><a href="#如何抵御XSS" class="headerlink" title="如何抵御XSS"></a>如何抵御XSS</h2><ul><li>抵御XSS攻击的一般方法是对用户输入的数据进行转义或者过滤，防止恶意的脚本代码被执行</li><li>使用 CSP ，CSP 的本质是建立一个白名单，告诉浏览器哪些外部资源可以加载和执行，从而防止恶意代码的注入攻击。</li></ul><blockquote><ol><li>CSP 指的是内容安全策略，它的本质是建立一个白名单，告诉浏览器哪些外部资源可以加载和执行。我们只需要配置规则，如何拦截由浏览器自己来实现。</li><li>通常有两种方式来开启 CSP，一种是设置 HTTP 首部中的 Content-Security-Policy，一种是设置 meta 标签的方式 <meta http-equiv="Content-Security-Policy"></li></ol></blockquote><ul><li>对一些敏感信息进行保护，比如 cookie 使用 http-only，使得脚本无法获取。也可以使用验证码，避免脚本伪装成用户执行一些操作。</li></ul><h2 id="CSRF攻击"><a href="#CSRF攻击" class="headerlink" title="CSRF攻击"></a>CSRF攻击</h2><p>CSRF 攻击指的是<strong>跨站请求伪造攻击</strong>。</p><p>CSRF攻击的过程是，用户在浏览器上登录了网站A，并且网站A返回了Cookie信息给浏览器，用户没有退出网站A；然后用户在同一浏览器上访问了网站B，网站B上有一些隐藏的链接或者表单，指向网站A的一些敏感操作；当用户点击这些链接或者表单时，浏览器会自动带上网站A的Cookie信息，发送请求到网站A，网站A认为这是用户的合法请求，从而执行了攻击者想要的操作</p><p>CSRF 攻击的<strong>本质是利用 cookie 会在同源请求中携带发送给服务器的特点，以此来实现用户的冒充</strong>。</p><h2 id="如何抵御CSRF"><a href="#如何抵御CSRF" class="headerlink" title="如何抵御CSRF"></a>如何抵御CSRF</h2><ul><li>使用验证码。验证码是一种让用户进行二次身份验证的方式，可以阻止攻击者伪造用户的请求。但是验证码会影响用户的体验，不适合频繁使用。</li><li>使用Token。Token是一种服务器生成的随机字符串，可以放在表单的隐藏字段或者URL的参数中，每次用户发送请求时，都要带上Token。服务器会验证Token的有效性，如果Token不匹配或者过期，就拒绝请求。Token可以有效防止CSRF攻击，但是需要服务器保存和管理Token。</li><li>使用Referer。Referer是HTTP请求头中的一个字段，表示请求的来源网站。服务器可以检查Referer是否来自合法的网站，如果不是，就拒绝请求。Referer可以简单地防止CSRF攻击，但是也有一些缺点，比如Referer可能被篡改或者禁用。</li><li>使用SameSite。SameSite是Cookie的一个属性，表示Cookie是否可以跨站发送1。如果设置为Strict或者Lax，就可以阻止Cookie在跨站请求中被发送，从而防止CSRF攻击。SameSite是一种比较新的防御方式，但是也有一些兼容性和局限性的问题。</li></ul><h2 id="有哪些可能引起前端安全"><a href="#有哪些可能引起前端安全" class="headerlink" title="有哪些可能引起前端安全"></a>有哪些可能引起前端安全</h2><ul><li>跨站脚本 (Cross-Site Scripting, XSS): ⼀种代码注⼊⽅式, 为了与 CSS 区分所以被称作 XSS。早期常⻅于⽹络论坛, 起因是⽹站没有对⽤户的输⼊进⾏严格的限制, 使得攻击者可以将脚本上传到帖⼦让其他⼈浏览到有恶意脚本的⻚⾯, 其注⼊⽅式很简单包括但不限于 JavaScript / CSS / Flash 等； </li><li>iframe的滥⽤: iframe中的内容是由第三⽅来提供的，默认情况下他们不受控制，他们可以在iframe中运⾏JavaScirpt脚本、Flash插件、弹出对话框等等，这可能会破坏前端⽤户体验；</li><li>跨站点请求伪造（Cross-Site Request Forgeries，CSRF）: 指攻击者通过设置好的陷阱，强制对已完成认证的⽤户进⾏⾮预期的个⼈信息或设定信息等某些状态更新，属于被动攻击 </li><li>恶意第三⽅库: ⽆论是后端服务器应⽤还是前端应⽤开发，绝⼤多数时候都是在借助开发框架和各种类库进⾏快速开发，⼀旦第三⽅库被植⼊恶意代码很容易引起安全问题。</li></ul><h2 id="网络劫持有哪几种，如何防范？"><a href="#网络劫持有哪几种，如何防范？" class="headerlink" title="网络劫持有哪几种，如何防范？"></a>网络劫持有哪几种，如何防范？</h2><p>⽹络劫持分为两种: </p><p>（1）<strong>DNS</strong>劫持: (输⼊京东被强制跳转到淘宝这就属于dns劫持) </p><ul><li>DNS强制解析: 通过修改运营商的本地DNS记录，来引导⽤户流量到缓存服务器</li><li>302跳转的⽅式: 通过监控⽹络出⼝的流量，分析判断哪些内容是可以进⾏劫持处理的,再对劫持的内存发起302跳转的回复，引导⽤户获取内容 </li></ul><p>（2）<strong>HTTP</strong>劫持: (访问⾕歌但是⼀直有贪玩蓝⽉的⼴告),由于http明⽂传输,运营商会修改你的http响应内容(即加⼴告) </p><p>DNS劫持由于涉嫌违法，已经被监管起来，现在很少会有DNS劫持，⽽http劫持依然⾮常盛⾏，最有效的办法就是全站HTTPS，将HTTP加密，这使得运营商⽆法获取明⽂，就⽆法劫持你的响应内容。 </p><h1 id="进程与线程"><a href="#进程与线程" class="headerlink" title="进程与线程"></a>进程与线程</h1><p>进程是资源分配的最小单位，线程是CPU调度的最小单位。</p><p>进程放在应用上来说就代表了一个程序；线程是进程中的更小单位，描述了执行一段指令所需的时间。</p><p>进程和线程之间的关系：</p><ol><li>进程中的任意一线程执行出错，都会导致整个进程的崩溃</li><li>线程之间共享进程中的数据</li><li>当进程关闭，操作系统会回收进程所占用的内存</li><li>进程之间的内容相互隔离</li></ol><h2 id="浏览器的进程"><a href="#浏览器的进程" class="headerlink" title="浏览器的进程"></a>浏览器的进程</h2><img data-src="https://cdn.nlark.com/yuque/0/2020/png/1500604/1603803289911-191cabf3-e7e2-4354-a83d-858668cc116f.png" alt="浏览器的进程" style="zoom:80%;" /><ul><li><strong>浏览器进程</strong>：主要负责界面显示、用户交互、子进程管理，同时提供存储等功能</li><li><strong>渲染进程</strong>：核心任务是将 HTML、CSS 和 JavaScript 转换为用户可以与之交互的网页，排版引擎 Blink 和 JavaScript 引擎 V8 都是运行在该进程中，默认情况下，Chrome 会为每个 Tab 标签创建一个渲染进程。出于安全考虑，渲染进程都是运行在沙箱模式下。</li><li><strong>GPU 进程</strong>：其实， GPU 的使用初衷是为了实现 3D CSS 的效果，只是随后网页、Chrome 的 UI 界面都选择采用 GPU 来绘制，这使得 GPU 成为浏览器普遍的需求。最后，Chrome 在其多进程架构上也引入了 GPU 进程。</li><li><strong>网络进程</strong>：主要负责页面的网络资源加载，之前是作为一个模块运行在浏览器进程里面的，直至最近才独立出来，成为一个单独的进程。</li><li><strong>插件进程</strong>：主要是负责插件的运行，因插件易崩溃，所以需要通过插件进程来隔离，以保证插件进程崩溃不会对浏览器和页面造成影响。</li></ul><p><strong>打开一个网页，最少需要四个进程</strong>：1 个网络进程、1 个浏览器进程、1 个 GPU 进程以及 1 个渲染进程。如果打开的页面有运行插件的话，还需要再加上 1 个插件进程。</p><p>虽然多进程模型提升了浏览器的稳定性、流畅性和安全性，但同样不可避免地带来了一些问题：</p><ul><li><strong>更高的资源占用</strong>：因为每个进程都会包含公共基础结构的副本（如 JavaScript 运行环境），这就意味着浏览器会消耗更多的内存资源。</li><li><strong>更复杂的体系架构</strong>：浏览器各模块之间耦合性高、扩展性差等问题，会导致现在的架构已经很难适应新的需求了。</li></ul><h2 id="渲染进程的线程有哪些"><a href="#渲染进程的线程有哪些" class="headerlink" title="渲染进程的线程有哪些"></a>渲染进程的线程有哪些</h2><ol><li><p>GUI渲染线程，渲染浏览器页面</p></li><li><p>JS引擎线程，负责处理Javascript脚本程序，一个Tab页中无论什么时候都只有一个JS引擎线程在运行JS程序；</p></li><li><p>时间触发线程，用来控制事件循环；</p></li><li><p><strong>定时器触发进程</strong>即setInterval与setTimeout所在线程；</p></li><li><p>异步http请求线程，XMLHttpRequest连接后通过浏览器新开一个线程请求；</p><p>检测到状态变更时，如果设置有回调函数，异步线程就产生状态变更事件，将回调函数放入事件队列中，等待JS引擎空闲后执行；</p></li></ol><p><strong>GUI渲染线程和JS引擎线程是互斥的</strong>，当JS引擎执行时GUI线程会被挂起，GUI更新会被保存在一个队列中等到JS引擎空闲时立即被执行</p><h2 id="进程之间的通信方式"><a href="#进程之间的通信方式" class="headerlink" title="进程之间的通信方式"></a>进程之间的通信方式</h2><p><strong>管道通信</strong></p><p>管道就是操作系统在内核中开辟的一段缓冲区，进程1可以将需要交互的数据拷贝到这段缓冲区，进程2就可以读取了。</p><h2 id="僵尸进程和孤儿进程是什么？"><a href="#僵尸进程和孤儿进程是什么？" class="headerlink" title="僵尸进程和孤儿进程是什么？"></a>僵尸进程和孤儿进程是什么？</h2><ul><li><strong>孤儿进程</strong>：父进程退出了，而它的一个或多个进程还在运行，那这些子进程都会成为孤儿进程。孤儿进程将被init进程(进程号为1)所收养，并由init进程对它们完成状态收集工作。</li><li><strong>僵尸进程</strong>：子进程比父进程先结束，而父进程又没有释放子进程占用的资源，那么子进程的进程描述符仍然保存在系统中，这种进程称之为僵死进程。</li></ul><h2 id="死锁？-如何解决死锁？"><a href="#死锁？-如何解决死锁？" class="headerlink" title="死锁？ 如何解决死锁？"></a>死锁？ 如何解决死锁？</h2><p>所谓死锁，是指多个进程在运行过程中因争夺资源而造成的一种僵局，当进程处于这种僵持状态时，若无外力作用，它们都将无法再向前推进。</p><p>系统中的资源可以分为两类：</p><ul><li>可剥夺资源，是指某进程在获得这类资源后，该资源可以再被其他进程或系统剥夺，CPU和主存均属于可剥夺性资源；</li><li>不可剥夺资源，当系统把这类资源分配给某进程后，再不能强行收回，只能在进程用完后自行释放，如磁带机、打印机等。</li></ul><h1 id="浏览器缓存"><a href="#浏览器缓存" class="headerlink" title="浏览器缓存"></a>浏览器缓存</h1><h2 id="对浏览器缓存机制的理解"><a href="#对浏览器缓存机制的理解" class="headerlink" title="对浏览器缓存机制的理解"></a>对浏览器缓存机制的理解</h2><ul><li>浏览器第一次加载资源，服务器返回200. 浏览器从服务器下载资源文件，并缓存资源文件与 response header，以供下次加载时对比使用；</li><li>下一次加载资源时，由于强制缓存优先级较高，先比较当前时间与上一次返回 200 时的时间差，如果没有超过 cache-control 设置的 max-age，则没有过期，并命中强缓存，直接从本地读取资源；</li><li>如果资源已过期，则表明强制缓存没有被命中，则开始协商缓存，向服务器发送带有 If-None-Match 和 If-Modified-Since 的请求；</li><li>服务器收到请求后，优先根据Etag值判断被请求文件有无做修改，Etag 值一致则没有修改，命中协商缓存，返回 304；如果不一致则有改动，直接返回新的资源文件带上新的 Etag 值并返回 200；</li><li>如果服务器收到的请求没有 Etag 值，则将 If-Modified-Since 和被请求文件的最后修改时间做比对，一致则命中协商缓存，返回 304；不一致则返回新的 last-modified 和文件并返回 200；</li></ul><p>很多网站的资源后面都加了版本号，这样做的目的是：每次升级了 JS 或 CSS 文件后，为了防止浏览器进行缓存，强制改变版本号，客户端浏览器就会重新下载新的 JS 或 CSS 文件 ，以保证用户能够及时获得网站的最新更新。</p><h2 id="浏览器资源缓存位置"><a href="#浏览器资源缓存位置" class="headerlink" title="浏览器资源缓存位置"></a>浏览器资源缓存位置</h2><h3 id="Server-Worker"><a href="#Server-Worker" class="headerlink" title="Server Worker"></a>Server Worker</h3><p>Service Worker 运行在 JavaScript 主线程之外，虽然由于脱离了浏览器窗体无法直接访问 DOM，但是它可以完成离线缓存、消息推送、网络代理等功能。它可以让我们<strong>自由控制</strong>缓存哪些文件、如何匹配缓存、如何读取缓存，并且<strong>缓存是持续性的</strong>。当 Service Worker 没有命中缓存的时候，需要去调用 <code>fetch</code> 函数获取  数据。也就是说，如果没有在 Service Worker 命中缓存，会根据缓存查找优先级去查找数据。<strong>但是不管是从 Memory Cache 中还是从网络请求中获取的数据，浏览器都会显示是从 Service Worker 中获取的内容。</strong></p><h3 id="Memory-Cache"><a href="#Memory-Cache" class="headerlink" title="Memory Cache"></a>Memory Cache</h3><p>Memory Cache 就是内存缓存，它的效率最快，<strong>但是内存缓存虽然读取高效，可是缓存持续性很短，会随着进程的释放而释放。</strong>一旦我们关闭 Tab 页面，内存中的缓存也就被释放了。</p><p>内存缓存中有一块重要的缓存资源是preloader相关指令下载的资源，preloader的相关指令已经是页面优化的常见手段之一，它可以一边解析js/css文件，一边网络请求下一个资源。</p><h3 id="Disk-Cache"><a href="#Disk-Cache" class="headerlink" title="Disk Cache"></a>Disk Cache</h3><p>Disk Cache 也就是存储在硬盘中的缓存，读取速度慢点，但是什么都能存储到磁盘中，比之 Memory Cache <strong>胜在容量和存储时效性上。</strong>在所有浏览器缓存中，Disk Cache 覆盖面基本是最大的。它会根据 HTTP Header 中的字段判断哪些资源需要缓存，哪些资源可以不请求直接使用，哪些资源已经过期需要重新请求。<strong>并且即使在跨站点的情况下，相同地址的资源一旦被硬盘缓存下来，就不会再次去请求数据。</strong></p><p>绝大部分的缓存都来自 Disk Cache</p><h3 id="访问缓存优先级"><a href="#访问缓存优先级" class="headerlink" title="访问缓存优先级"></a>访问缓存优先级</h3><ol><li>先在内存中查找,如果有,直接加载。</li><li>如果内存中不存在,则在硬盘中查找,如果有直接加载。</li><li>如果硬盘中也没有,那么就进行网络请求。</li><li>请求获取的资源缓存到硬盘和内存。</li></ol><h2 id="协商缓存和强缓存的区别"><a href="#协商缓存和强缓存的区别" class="headerlink" title="协商缓存和强缓存的区别"></a>协商缓存和强缓存的区别</h2><h3 id="强缓存"><a href="#强缓存" class="headerlink" title="强缓存"></a>强缓存</h3><p>强缓存，如果缓存资源有效，直接使用缓存资源，不必向服务器发起请求。</p><p>通过http头信息中expires和cache-control属性</p><p>服务器通过在响应头中添加 Expires 属性，来指定资源的过期时间。在过期时间以内，该资源可以被缓存使用，不必再向服务器发送请求。这个时间是一个绝对时间，它是服务器的时间，因此可能存在这样的问题，就是客户端的时间和服务器端的时间不一致，或者用户可以对客户端时间进行修改的情况，这样就可能会影响缓存命中的结果。</p><p>Expires 是 http1.0 中的方式，因为它的一些缺点，在 HTTP 1.1 中提出了一个新的头部属性就是 Cache-Control 属性，它提供了对资源的缓存的更精确的控制。</p><p><code>Cache-Control</code>可设置的字段：</p><ul><li><code>public</code>：设置了该字段值的资源表示可以被任何对象（包括：发送请求的客户端、代理服务器等等）缓存。这个字段值不常用，</li><li><code>private</code>：设置了该字段值的资源只能被用户浏览器缓存，不允许任何代理服务器缓存。在实际开发当中，对于一些含有用户信息的HTML，通常都要设置这个字段值，避免代理服务器(CDN)缓存；</li><li><code>no-cache</code>：设置了该字段需要先和服务端确认返回的资源是否发生了变化，如果资源未发生变化，则直接使用缓存好的资源；</li><li><code>no-store</code>：设置了该字段表示禁止任何缓存，每次都会向服务端发起新的请求，拉取最新的资源；</li><li><code>max-age=</code>：设置缓存的最大有效期，单位为秒；</li><li><code>s-maxage=</code>：优先级高于max-age=，仅适用于共享缓存(CDN)，优先级高于max-age或者Expires头；</li><li><code>max-stale[=]</code>：设置了该字段表明客户端愿意接收已经过期的资源，但是不能超过给定的时间限制。</li></ul><p>一般来说只需要设置其中一种方式就可以实现强缓存策略，当两种方式一起使用时，Cache-Control 的优先级要高于 Expires。</p><p><strong>no-cache和no-store很容易混淆：</strong></p><ul><li>no-cache 是指先要和服务器确认是否有资源更新，在进行判断。也就是说没有强缓存，但是会有协商缓存；</li><li>no-store 是指不使用任何缓存，每次请求都直接从服务器获取资源。</li></ul><h3 id="协商缓存"><a href="#协商缓存" class="headerlink" title="协商缓存"></a>协商缓存</h3><p>如果没有命中强制缓存，如果设置了协商缓存，这个时候协商缓存就会发挥作用了。</p><p>命中协商缓存的条件有两个：</p><ul><li><code>max-age=xxx</code> 过期了</li><li>值为<code>no-store</code></li></ul><p>使用协商缓存策略时，会先向服务器发送一个请求，如果资源没有发生修改，则返回一个 304 状态，让浏览器使用本地的缓存副本。如果资源发生了修改，则返回修改后的资源。</p><p>协商缓存也可以通过两种方式来设置，分别是 http 头信息中的 <strong>Etag</strong> 和 <strong>Last-Modified</strong> 属性。</p><p>（1）服务器通过在响应头中添加 Last-Modified 属性来指出资源最后一次修改的时间，当浏览器下一次发起请求时，会在请求头中添加一个 If-Modified-Since 的属性，属性值为上一次资源返回时的 Last-Modified 的值。当请求发送到服务器后服务器会通过这个属性来和资源的最后一次的修改时间来进行比较，以此来判断资源是否做了修改。如果资源没有修改，那么返回 304 状态，让客户端使用本地的缓存。如果资源已经被修改了，则返回修改后的资源。使用这种方法有一个缺点，就是 Last-Modified 标注的最后修改时间只能精确到秒级，如果某些文件在1秒钟以内，被修改多次的话，那么文件已将改变了但是 Last-Modified 却没有改变，这样会造成缓存命中的不准确。</p><p>（2）因为 Last-Modified 的这种可能发生的不准确性，http 中提供了另外一种方式，那就是 Etag 属性。服务器在返回资源的时候，在头信息中添加了 Etag 属性，这个属性是资源生成的唯一标识符，当资源发生改变的时候，这个值也会发生改变。在下一次资源请求时，浏览器会在请求头中添加一个 If-None-Match 属性，这个属性的值就是上次返回的资源的 Etag 的值。服务接收到请求后会根据这个值来和资源当前的 Etag 的值来进行比较，以此来判断资源是否发生改变，是否需要返回资源。通过这种方式，比 Last-Modified 的方式更加精确。</p><p>当 Last-Modified 和 Etag 属性同时出现的时候，Etag 的优先级更高。使用协商缓存的时候，服务器需要考虑负载平衡的问题，因此多个服务器上资源的 Last-Modified 应该保持一致，因为每个服务器上 Etag 的值都不一样，因此在考虑负载平衡时，最好不要设置 Etag 属性。</p><p><strong>总结：</strong></p><p>强缓存策略和协商缓存策略在缓存命中时都会直接使用本地的缓存副本，区别只在于协商缓存会向服务器发送一次请求。它们缓存不命中时，都会向服务器发送请求来获取资源。在实际的缓存机制中，强缓存策略和协商缓存策略是一起合作使用的。浏览器首先会根据请求的信息判断，强缓存是否命中，如果命中则直接使用资源。如果不命中则根据头信息向服务器发起请求，使用协商缓存，如果协商缓存命中的话，则服务器不返回资源，浏览器直接使用本地资源的副本，如果协商缓存不命中，则浏览器返回最新的资源给浏览器。</p><h2 id="为什么需要浏览器缓存？"><a href="#为什么需要浏览器缓存？" class="headerlink" title="为什么需要浏览器缓存？"></a>为什么需要浏览器缓存？</h2><p>所谓的<strong>浏览器缓存</strong>指的是浏览器将用户请求过的静态资源，存储到电脑本地磁盘中，当浏览器再次访问时，就可以直接从本地加载，不需要再去服务端请求了。</p><p>使用浏览器缓存，有以下优点：</p><ul><li>减少了服务器的负担，提高了网站的性能</li><li>加快了客户端网页的加载速度</li><li>减少了多余网络数据传输</li></ul><h2 id="点击刷新按钮或者按-F5、按-Ctrl-F5-（强制刷新）、地址栏回车有什么区别？"><a href="#点击刷新按钮或者按-F5、按-Ctrl-F5-（强制刷新）、地址栏回车有什么区别？" class="headerlink" title="点击刷新按钮或者按 F5、按 Ctrl+F5 （强制刷新）、地址栏回车有什么区别？"></a>点击刷新按钮或者按 F5、按 Ctrl+F5 （强制刷新）、地址栏回车有什么区别？</h2><ul><li><strong>点击刷新按钮或者按 F5：</strong>浏览器直接对本地的缓存文件过期，但是会带上If-Modifed-Since，If-None-Match，这就意味着服务器会对文件检查新鲜度，返回结果可能是 304，也有可能是 200。</li><li><strong>用户按 Ctrl+F5（强制刷新）：</strong>浏览器不仅会对本地文件过期，而且不会带上 If-Modifed-Since，If-None-Match，相当于之前从来没有请求过，返回结果是 200。</li><li>地址栏回车： 浏览器发起请求，按照正常流程，本地检查是否过期，然后服务器检查新鲜度，最后返回内容。</li></ul><h1 id="浏览器组成"><a href="#浏览器组成" class="headerlink" title="浏览器组成"></a>浏览器组成</h1><h2 id="对浏览器的理解"><a href="#对浏览器的理解" class="headerlink" title="对浏览器的理解"></a>对浏览器的理解</h2><p>浏览器可以分为两部分，shell 和 内核。其中 shell 的种类相对比较多，内核则比较少。</p><ul><li>shell 是指浏览器的外壳：例如菜单，工具栏等。主要是提供给用户界面操作，参数设置等等。它是调用内核来实现各种功能的。</li><li>内核是浏览器的核心。内核是基于标记语言显示内容的程序或模块。</li></ul><h2 id="对浏览器内核的理解"><a href="#对浏览器内核的理解" class="headerlink" title="对浏览器内核的理解"></a>对浏览器内核的理解</h2><p>浏览器内核主要分成两部分：</p><ul><li>渲染引擎就是渲染，即在浏览器窗口中显示所请求的内容。默认情况下，渲染引擎可以显示 html、xml 文档及图片，它也可以借助插件显示其他类型数据，例如PDF 格式。</li><li>JS 引擎：解析和执行 javascript 来实现网页的动态效果。</li></ul><p>最开始渲染引擎和 JS 引擎并没有区分的很明确，后来 JS 引擎越来越独立，内核就倾向于只指渲染引擎。</p><h2 id="常见浏览器内核"><a href="#常见浏览器内核" class="headerlink" title="常见浏览器内核"></a>常见浏览器内核</h2><table><thead><tr><th>5大主流浏览器</th><th>内核</th></tr></thead><tbody><tr><td>IE</td><td>trident</td></tr><tr><td>chrome</td><td>webkit  -&gt;  blink</td></tr><tr><td>safari</td><td>webkit</td></tr><tr><td>firefox</td><td>gocko</td></tr><tr><td>opera</td><td>presto  -&gt; blink</td></tr></tbody></table><h3 id="浏览器的主要组成部分"><a href="#浏览器的主要组成部分" class="headerlink" title="浏览器的主要组成部分"></a>浏览器的主要组成部分</h3><ul><li><strong>⽤户界⾯</strong> - 包括地址栏、前进/后退按钮、书签菜单等。除了浏览器主窗⼝显示的您请求的⻚⾯外，其他显示的各个部分都属于⽤户界⾯。 </li><li><strong>浏览器引擎</strong> - 在⽤户界⾯和呈现引擎之间传送指令。 </li><li><strong>渲染引擎</strong> - 负责显示请求的内容。如果请求的内容是 HTML，它就负责解析 HTML 和 CSS 内容，并将解析后的内容显示在屏幕上。 </li><li><strong>⽹络</strong> - ⽤于⽹络调⽤，⽐如 HTTP 请求。其接⼝与平台⽆关，并为所有平台提供底层实现。 </li><li><strong>JavaScript</strong> <strong>解释器</strong>。⽤于解析和执⾏ JavaScript 代码。 </li><li><strong>数据存储</strong> - 这是持久层。浏览器需要在硬盘上保存各种数据，例如 Cookie。新的 HTML 规范 (HTML5) 定义了“⽹络数据库”，这是⼀个完整（但是轻便）的浏览器内数据库。 </li></ul><p> 浏览器的每个标签⻚都分别对应⼀个呈现引擎实例。<strong>每个标签⻚都是⼀个独⽴的进程</strong></p><h1 id="浏览器渲染机制"><a href="#浏览器渲染机制" class="headerlink" title="浏览器渲染机制"></a>浏览器渲染机制</h1><h2 id="DOM-tree"><a href="#DOM-tree" class="headerlink" title="DOM tree"></a>DOM tree</h2><p>解析是根据收到的HTML文件生成DOM树；加载是加载内部资源，比如img等；</p><p>解析和加载异步完成，解析完毕并不说明页面加载完毕</p><p>加载，当前节点若解析完成（并不是页面解析完成），就开始加载资源</p><p>解析过程中：</p><ol><li>解析过程是将节点挂载到DOM树上，遵循<strong>深度优先解析</strong>原则</li><li>遇到link的外部css，遇到css的代码会进行css的加载，并行操作</li><li>遇见script标签时，会先执行js代码，然后继续构建DOM树，<strong>这就是在底部加入JavaScript代码的原因</strong>。</li></ol><h2 id="CSSom"><a href="#CSSom" class="headerlink" title="CSSom"></a>CSSom</h2><p>CSSom类似于DOM tree的生成过程。</p><h2 id="渲染树"><a href="#渲染树" class="headerlink" title="渲染树"></a>渲染树</h2><p>render tree = DOM tree + CSS tree，渲染树构建完毕后，浏览器的渲染引擎根据它绘制页面。</p><ul><li>渲染树不包含隐藏节点，display:none head类等不需要绘制的节点；visibility: hidden 绘制了只是看不见</li><li>渲染树的每个节点都有自己的样式，被当成一个盒子box，具有内容填充、边距、边框、位置、大小等其他样式</li></ul><h2 id="回流与重绘"><a href="#回流与重绘" class="headerlink" title="回流与重绘"></a>回流与重绘</h2><p>当浏览器渲染引擎对页面的节点操作时，就会产生回流或者重绘。<strong>回流一定重绘，重绘不一定回流</strong></p><h3 id="回流reflow"><a href="#回流reflow" class="headerlink" title="回流reflow"></a><strong>回流reflow</strong></h3><p>当浏览器生成渲染树以后，就会根据渲染树来进行布局。这一阶段浏览器要弄清楚各个节点在页面中的<strong>确切位置和大小，所有相对测量值都将转换为屏幕上的绝对像素</strong>。这一过程被称为 回流，也被称为“自动重排”。</p><p>当<strong>元素属性发生改变且影响布局时</strong>（宽度、高度、内外边距等），产生回流，相当于 刷新页面。</p><ul><li>回流是相当消耗性能的，开发中应该减少回流次数</li><li>回流会引起 渲染树中的一部分或全部重新构建</li><li>引起回流的因素：<ul><li>页面初始化，即（至少有一次回流）</li><li>DOM节点增加 删除、位置变化</li><li>元素的尺寸、边距、填充、边框、显示(display:none block)改变</li><li>浏览器窗口尺寸变化，resize</li><li>向浏览器请求某些样式信息 offset client scroll width </li></ul></li></ul><h3 id="重绘repaint"><a href="#重绘repaint" class="headerlink" title="重绘repaint"></a><strong>重绘repaint</strong></h3><p>当元素<strong>属性发生改变且不影响布局</strong>时（背景颜色、透明度、字体样式等），产生重绘，相当于 不刷新页面，动态更新内容。</p><ul><li>若发生回流，浏览器根据新的渲染树重新绘制，这个过程称为 重绘</li></ul><h3 id="优化策略"><a href="#优化策略" class="headerlink" title="优化策略"></a><strong>优化策略</strong></h3><ul><li>浏览器<strong>队列处理机制</strong></li><li>增添样式 放在 class中，批量处理，减少回流次数  或者 this.style.cssText 做动态值变化</li><li>使用 visibility 替换 display: none ，因为前者只会引起重绘，后者会引发回流</li><li>documentFragment</li><li>动画一定要做绝对定位，相对定位每次变化都会引起父级的回流重绘</li><li>……</li></ul><p><strong>浏览器的渲染队列机制：</strong>浏览器会将所有的回流、重绘的操作放在一个队列中，当队列中的操作到了一定的数量或者到了一定的时间间隔，浏览器就会对队列进行批处理。这样就会让多次的回流、重绘变成一次回流重绘。         </p><h2 id="渲染过程中遇到JS文件如何处理"><a href="#渲染过程中遇到JS文件如何处理" class="headerlink" title="渲染过程中遇到JS文件如何处理"></a>渲染过程中遇到JS文件如何处理</h2><p>JavaScript文件的加载、解析与执行会阻塞DOM的构建，JS文件也会导致CSSOM阻塞DOM的构建</p><h2 id="async、defer和window-onload的区别"><a href="#async、defer和window-onload的区别" class="headerlink" title="async、defer和window.onload的区别"></a>async、defer和window.onload的区别</h2><p><img data-src="https://s2.loli.net/2022/12/13/pQGk9N2UHnjZeg3.png" alt="img"></p><p>async属性的script脚本：HTML解析与script加载并行发生，但在script执行时，HTML解析被阻塞，script执行结束后，继续HTML解析。多个带async属性的标签，不能保证加载的顺序</p><p>defer属性的script脚本：HTML解析与script加载并行发生，但script的执行要等到所有的HTML解析完成后才会发生。多个带defer属性的标签，按照顺序执行</p><p>1.defer和async在网络加载过程是一致的，都是异步执行的； </p><p>2.两者的区别在于脚本加载完成之后何时执行</p><p><strong>window.onload()</strong> 方法用于在网页加载完毕后立刻执行的操作，即当 HTML 文档加载完毕后，立刻执行某个方法。</p><h2 id="CSS如何阻塞文档解析"><a href="#CSS如何阻塞文档解析" class="headerlink" title="CSS如何阻塞文档解析"></a>CSS如何阻塞文档解析</h2><p>理论上，样式表不改变DOM树，也就没有必要停下文档解析等待它们。但是，JavaScript脚本执行时可能会请求样式信息，如果样式还没有加载解析，脚本会得到错误的值。 </p><p>为了避免这种错误，浏览器会先下载和构建 CSSOM，然后再执行 JavaScript，最后再继续文档的解析。至此，CSS可以阻塞文档解析</p><h2 id="浏览器渲染优化"><a href="#浏览器渲染优化" class="headerlink" title="浏览器渲染优化"></a>浏览器渲染优化</h2><p><strong>针对JavaScript：</strong></p><p>（1）尽量将JavaScript文件放在body的最后，用async和defer属性来异步引入</p><p>（2） body中间尽量不要写<code>&lt;script&gt;</code>标签</p><p><strong>针对CSS：</strong></p><p>（1）在开发过程中，导入外部样式使用link，而不用@import。</p><p>（2）如果css少，尽可能采用内嵌样式，直接写在style标签中</p><p>使用CSS有三种方式：使用<strong>link、@import、内联样式</strong>，其中link和@import都是导入外部样式。区别：</p><ul><li><strong>link</strong>：浏览器会派发一个新线程(HTTP线程)去加载资源文件，与此同时GUI渲染线程会继续向下渲染代码</li><li><strong>@import</strong>：GUI渲染线程会暂时停止渲染，去服务器加载资源文件，资源文件没有返回之前不会继续渲染(阻碍浏览器渲染)</li><li><strong>style</strong>：GUI直接渲染</li></ul><p>外部样式如果长时间没有加载完毕，浏览器为了用户体验，会使用浏览器会默认样式，确保首次渲染的速度。所以CSS一般写在head中，让浏览器尽快发送请求去获取css样式。</p><p><strong>针对DOM树、CSSOM树</strong></p><p>（1）HTML代码层级尽量不要太深，减少CSSD代码的层级</p><p>（2）使用语义化的标签，避免不标准语义化的特殊处理</p><p><strong>减少回流与重绘</strong></p><h2 id="如何优化关键渲染路径？"><a href="#如何优化关键渲染路径？" class="headerlink" title="如何优化关键渲染路径？"></a>如何优化关键渲染路径？</h2><p><strong>关键渲染路径</strong>是浏览器将 HTML，CSS 和 JavaScript 转换为屏幕上的像素所经历的步骤序列。</p><ol><li>通过异步、延迟加载或者消除非关键资源来减少关键资源的请求数量</li><li>优化必须的请求数量和每个请求的文件体积</li><li>通过区分关键资源的优先级来优化被加载关键资源的顺序，来缩短关键路径长度。</li></ol><h2 id="一定要掌握的时间线"><a href="#一定要掌握的时间线" class="headerlink" title="一定要掌握的时间线"></a>一定要掌握的时间线</h2><p>在浏览器加载页面开始到页面加载完成，按顺序发生的每一件事情</p><ol><li><p>生成document对象，以供DOM操作</p></li><li><p>解析文档，构建DOM树</p><p>document.readyState = ‘loading’</p></li><li><p>遇到link开始异步加载css外部文件的新线程，遇到style开始异步构建CSSOM的新线程</p></li><li><p>没有设置异步加载的script，阻塞文档解析，等到JS脚本加载并执行完成后，继续解析文档</p></li><li><p>异步加载script，异步加载JS脚本，不阻塞解析文档（不能使用documen.write)</p></li><li><p>解析文档遇到img，先解析节点。创建加载线程，异步加载图片资源，不阻塞解析文档</p></li><li><p>文档解析完成，document.readyState = ‘interactive’</p></li><li><p>defer script，JS脚本按照顺序执行</p></li><li><p>DOMContentLoaded事件，</p></li><li><p>async script加载并执行完毕，img等资源加载完毕，window对象中的onload事件才开始触发，document.readyState = ‘complete’</p></li></ol><p>window.onload 和 DOMContentLoaded的区别：window.onload是页面全部加载完毕才触发，DOMContentLoaded是文档解析完成和异步脚本加载完成后就触发</p><h1 id="浏览器本地存储"><a href="#浏览器本地存储" class="headerlink" title="浏览器本地存储"></a>浏览器本地存储</h1><p>浏览器本地存储方式主要5种，点击随便一个网页，F12，应用程序下的存储就可以看到了。</p><p>下面的学习对应着一个真实的网页会快很多</p><p><img data-src="https://s2.loli.net/2022/12/09/t4JQZ1aPoNdcBuw.png"></p><h2 id="Cookie"><a href="#Cookie" class="headerlink" title="Cookie"></a>Cookie</h2><p>Cookie是最早被提出来的本地存储方式，在此之前，服务端是无法判断网络中的两个请求是否是同一用户发起的，为解决这个问题，Cookie就出现了。Cookie的大小只有4kb，它是一种纯文本文件，每次发起HTTP请求都会携带Cookie</p><p><strong>Cookie的特性：</strong></p><ul><li>Cookie一旦创建成功，名称就无法修改</li><li>Cookie是无法跨域名的</li><li>每个Cookie的大小不能超过4kb</li><li>Cookie在请求一个新的页面的时候都会被发送过去</li></ul><p>如果需要域名之间跨域共享Cookie，有两种方法：</p><ol><li>使用Nginx反向代理</li><li>在一个站点登陆之后，往其他网站写Cookie。服务端的Session存储到一个节点，Cookie存储sessionId</li></ol><p><strong>Cookie的使用场景：</strong></p><ul><li>最常见的使用场景就是Cookie和session结合使用，我们将sessionId存储到Cookie中，每次发请求都会携带这个sessionId，这样服务端就知道是谁发起的请求，从而响应相应的信息。</li><li>可以用来统计页面的点击次数</li></ul><p><strong>Cookie字段组成：</strong></p><ul><li><p><strong>Name</strong>：cookie的名称</p></li><li><p><strong>Value</strong>：cookie的值，对于认证cookie，value值包括web服务器所提供的访问令牌；</p></li><li><p><strong>Size</strong>： cookie的大小</p></li><li><p><strong>Domain</strong>：可以访问该cookie的域名，Cookie 机制并未遵循严格的同源策略，允许一个子域可以设置或获取其父域的 Cookie。</p><p>当需要实现单点登录方案时，Cookie 的上述特性非常有用，然而也增加了 Cookie受攻击的危险，比如攻击者可以借此发动会话定置攻击。因而，浏览器禁止在 Domain 属性中设置.org、.com 等通用顶级域名、以及在国家及地区顶级域下注册的二级域名，以减小攻击发生的范围。</p></li><li><p><strong>Path</strong>：可以访问此cookie的页面路径。 比如domain是ychch.com，path是<code>/about</code>，那么只有<code>/about</code>路径下的页面可以读取此cookie</p></li><li><p><strong>Secure</strong>： 指定是否使用HTTPS安全协议发送Cookie。使用HTTPS安全协议，可以保护Cookie在浏览器和Web服务器间的传输过程中不被窃取和篡改。该方法也可用于Web站点的身份鉴别，即在HTTPS的连接建立阶段，浏览器会检查Web网站的SSL证书的有效性。</p><p>但是基于兼容性的原因（比如有些网站使用自签署的证书）在检测到SSL证书无效时，浏览器并不会立即终止用户的连接请求，而是显示安全风险信息，用户仍可以选择继续访问该站点。</p></li><li><p><strong>HTTP</strong>： 该字段包含<code>HTTPOnly</code> 属性 ，该属性用来设置cookie能否通过脚本来访问，默认为空，即可以通过脚本访问。在客户端是不能通过js代码去设置一个httpOnly类型的cookie的，这种类型的cookie只能通过服务端来设置。该属性用于防止客户端脚本通过<code>document.cookie</code>属性访问Cookie，有助于保护Cookie不被跨站脚本攻击窃取或篡改。但是，HTTPOnly的应用仍存在局限性，一些浏览器可以阻止客户端脚本对Cookie的读操作，但允许写操作；此外大多数浏览器仍允许通过XMLHTTP对象读取HTTP响应中的Set-Cookie头。</p></li><li><p><strong>Expires/Max-size</strong> ： 此cookie的超时时间。若设置其值为一个时间，那么当到达此时间后，此cookie失效。不设置的话默认值是Session，意思是cookie会和session一起失效。当浏览器关闭(不是浏览器标签页，而是整个浏览器) 后，此cookie失效。</p></li></ul><h2 id="LocalStorage"><a href="#LocalStorage" class="headerlink" title="LocalStorage"></a>LocalStorage</h2><p>LocalStorage是HTML5新引入的特性。</p><p><strong>LocalStorage的优点：</strong></p><ul><li>在大小方面，LocalStorage的大小一般为5MB，有时候我们存储的信息较大，Cookie就不能满足我们的需求，LocalStorage可以储存更多的信息</li><li>LocalStorage是持久储存，并不会随着页面的关闭而消失，除非主动清理，不然会永久存在</li><li>仅储存在本地，不像Cookie那样每次HTTP请求都会被携带</li></ul><p><strong>LocalStorage的缺点：</strong></p><ul><li>浏览器兼容问题，IE8以下不支持</li><li>隐私模式，无法读取LocalStorage</li><li>LocalStorage受到同源策略的限制，即端口、协议、主机地址有任何一个不相同，都不会访问</li></ul><p><strong>LocalStorage的常用API：</strong></p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 保存数据到 localStorage</span>localStorage<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span><span class="token string">'key'</span><span class="token punctuation">,</span> <span class="token string">'value'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 从 localStorage 获取数据</span><span class="token keyword">let</span> data <span class="token operator">=</span> localStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">'key'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 从 localStorage 删除保存的数据</span>localStorage<span class="token punctuation">.</span><span class="token function">removeItem</span><span class="token punctuation">(</span><span class="token string">'key'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 从 localStorage 删除所有保存的数据</span>localStorage<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 获取某个索引的Key</span>localStorage<span class="token punctuation">.</span><span class="token function">key</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>LocalStorage的</strong>使用场景：</p><ul><li>有些网站有换肤的功能，这时候就可以将换肤的信息存储在本地的LocalStorage中，当需要换肤的时候，直接操作LocalStorage即可</li><li>在网站中的用户浏览信息和一些不常变动的个人信息等可以存储在本地的LocalStorage中</li></ul><h2 id="SessionStorage"><a href="#SessionStorage" class="headerlink" title="SessionStorage"></a>SessionStorage</h2><p>SessionStorage和LocalStorage都是在HTML5才提出来的存储方案，SessionStorage 主要用于临时保存同一窗口(或标签页)的数据，刷新页面时不会删除，关闭窗口或标签页之后将会删除这些数据。</p><p><strong>SessionStorage与LocalStorage对比：</strong></p><ul><li>都在<strong>本地进行数据存储</strong>；</li><li><strong>都不能被爬虫爬取</strong>；</li><li>SessionStorage也有同源策略的限制，但是更严格，SessionStorage只有在<strong>同一浏览器的同一窗口下</strong>才能够共享；</li></ul><p><strong>SessionStorage的使用场景</strong></p><ul><li>由于SessionStorage具有时效性，可以用来存储游客登录的信息和临时的浏览记录。当关闭网站之后，这些信息也就随之消除了。</li></ul><h2 id="IndexedDB"><a href="#IndexedDB" class="headerlink" title="IndexedDB"></a>IndexedDB</h2><p>cookies、localStorage、sessionStorage都是存储少量数据的存储方式，当需要在本地存储大量数据时，使用浏览器的 indexDB 。</p><p>这是浏览器提供的一种本地的数据库存储机制。它不是关系型数据库，更接近 NoSQL 数据库。它内部⽤键值对进⾏存储数据，可以进⾏快速读取操作，⾮常适合web场景，同时⽤JavaScript进⾏操作会⾮常方便。</p><p>IndexedDB 具有以下特点</p><ul><li><p><strong>键值对储存</strong>：IndexedDB 内部采用对象仓库（object store）存放数据，所有类型的数据都可以直接存入。</p><p>对象仓库中，数据以”键值对”的形式保存，每一个数据记录都有对应的主键，主键是独一无二的，不能有重复，否则会抛出一个错误。</p></li><li><p><strong>异步</strong>：IndexedDB 操作时不会锁死浏览器，用户依然可以进行其他操作，这与 LocalStorage 形成对比，后者的操作是同步的。</p><p>异步设计是为了防止大量数据的读写，拖慢网页的表现。</p></li><li><p><strong>支持事务</strong>：IndexedDB 支持事务（transaction），系列操作中，只要有一步失败，整个事务就都取消，数据库回滚到事务发生之前的状态，不存在只改写一部分数据的情况。</p></li><li><p><strong>同源限制：</strong>IndexedDB 受到同源限制，每一个数据库对应创建它的域名。网页只能访问自身域名下的数据库，而不能访问跨域的数据库。</p></li><li><p><strong>储存空间大</strong>：IndexedDB 的储存空间比 LocalStorage 大得多，一般来说不少于 250MB，甚至没有上限。</p></li><li><p><strong>支持二进制储存</strong>：IndexedDB 不仅可以储存字符串，还可以储存二进制数据（ArrayBuffer 对象和 Blob 对象）。</p></li></ul><h1 id="浏览器同源策略"><a href="#浏览器同源策略" class="headerlink" title="浏览器同源策略"></a>浏览器同源策略</h1><h2 id="同源策略"><a href="#同源策略" class="headerlink" title="同源策略"></a>同源策略</h2><p>同源策略（Same origin policy）是一种约定，它是浏览器最核心也最基本的安全功能，如果缺少了同源策略，则浏览器的正常功能可能都会受到影响。可以说 Web 是构建在同源策略基础之上的，浏览器只是针对同源策略的一种实现。</p><p>它认为自任何站点装载的信赖内容是不安全的。当被浏览器半信半疑的脚本运行在沙箱时，它们应该只被允许访问来自同一站点的资源，而不是那些来自其它站点可能怀有恶意的资源。</p><p>同源指的是：protocol<strong>协议</strong>、domain<strong>域名</strong>、port<strong>端口号</strong>必须一致。</p><p><strong>同源政策主要限制了三个方面：</strong></p><ul><li>当前域下的 js 脚本不能够访问其他域下的 cookie、localStorage 和 indexDB。</li><li>当前域下的 js 脚本不能够操作访问操作其他域下的 DOM。</li><li>当前域下 ajax 无法发送跨域请求。</li></ul><h2 id="如何解决跨域问题"><a href="#如何解决跨域问题" class="headerlink" title="如何解决跨域问题"></a>如何解决跨域问题</h2><p>有了跨域限制，才使我们能安全的上网。但是在实际中，有时候我们需要突破这样的限制，下面将介绍几种跨域的解决方法。</p><h3 id="CORS"><a href="#CORS" class="headerlink" title="CORS"></a>CORS</h3><p>CORS是一种W3C标准，它允许服务器通过一些自定义的头部来限制哪些源可以访问它自身的资源。CORS需要浏览器和服务器同时支持。</p><p>整个CORS通信过程，都是浏览器自动完成，不需要用户参与。对于开发者来说，CORS通信与同源的AJAX通信没有差别，代码完全一样。浏览器一旦发现AJAX请求跨源，就会自动添加一些附加的头信息，有时还会多出一次附加的请求，但用户不会有感觉。</p><p><strong>实现CORS通信的关键是服务器。只要服务器实现了CORS接口，就可以跨源通信。</strong></p><p>根据是否需要预检请求，CORS可以分为简单请求和复杂请求</p><h4 id="简单请求"><a href="#简单请求" class="headerlink" title="简单请求"></a>简单请求</h4><p>满足以下两大条件，就属于简单请求</p><pre class="line-numbers language-js" data-language="js"><code class="language-js">（<span class="token number">1</span><span class="token punctuation">)</span> 请求方法是以下三种方法之一：<span class="token constant">HEAD</span><span class="token constant">GET</span><span class="token constant">POST</span>（<span class="token number">2</span>）<span class="token constant">HTTP</span>的头信息不超出以下几种字段：AcceptAccept<span class="token operator">-</span>LanguageContent<span class="token operator">-</span>LanguageLast<span class="token operator">-</span>Event<span class="token operator">-</span><span class="token constant">ID</span>Content<span class="token operator">-</span>Type：只限于三个值application<span class="token operator">/</span>x<span class="token operator">-</span>www<span class="token operator">-</span>form<span class="token operator">-</span>urlencoded、multipart<span class="token operator">/</span>form<span class="token operator">-</span>data、text<span class="token operator">/</span>plain<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>对于简单请求，浏览器直接发出CORS请求。浏览器在头信息之中，自动增加一个<code>Origin</code>字段。<code>Origin</code>字段用来说明，本次请求来自哪个源（协议 + 域名 + 端口）。服务器根据这个值，决定是否同意这次请求。</p><p>如果<code>Origin</code>指定的源，不在许可范围内，服务器会返回一个正常的HTTP回应。这种错误<strong>无法通过状态码识别</strong>，因为HTTP回应的状态码有可能是200。</p><p>如果<code>Origin</code>指定的域名在许可范围内，响应报文会多出几个头信息字段。</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">//要么是请求时Origin字段的值，要么是一个*</span>Access<span class="token operator">-</span>Control<span class="token operator">-</span>Allow<span class="token operator">-</span>Origin<span class="token operator">:</span> http<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>api<span class="token punctuation">.</span>bob<span class="token punctuation">.</span>com<span class="token comment">//布尔值，表示是否允许发送Cookie</span>Access<span class="token operator">-</span>Control<span class="token operator">-</span>Allow<span class="token operator">-</span>Credentials<span class="token operator">:</span> <span class="token boolean">true</span><span class="token comment">//如果想拿到其他字段，就必须在Access-Control-Expose-Headers里面指定。</span>Access<span class="token operator">-</span>Control<span class="token operator">-</span>Expose<span class="token operator">-</span>Headers<span class="token operator">:</span> FooBar<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="withCredentials"><a href="#withCredentials" class="headerlink" title="withCredentials"></a>withCredentials</h4><p>CORS请求默认不发送Cookie和HTTP认证信息，如果要把Cookie发到服务器，一方面服务器同意，指定<code>Access-Control-Allow-Credentials = true</code> 字段；另一方面，请求中打开<code>withCredentials</code>属性</p><p>需要注意的是，如果要发送Cookie，<code>Access-Control-Allow-Origin</code>就不能设为星号，必须指定明确的、与请求网页一致的域名。</p><h4 id="非简单请求"><a href="#非简单请求" class="headerlink" title="非简单请求"></a>非简单请求</h4><p>对服务器有特殊要求的请求，比如请求方法是<code>PUT</code>或<code>DELETE</code>，或者<code>Content-Type</code>字段的类型是<code>application/json</code></p><p>浏览器先询问服务器，当前网页所在的域名是否在服务器的许可名单之中，以及可以使用哪些HTTP动词和头信息字段。只有得到肯定答复，浏览器才会发出正式的<code>XMLHttpRequest</code>请求，否则就报错。</p><p>“预检”请求用的请求方法是<code>OPTIONS</code>，表示这个请求是用来询问的。除了<code>Origin</code>字段，”预检”请求的头信息包括两个特殊字段。</p><p><strong>Access-Control-Request-Method</strong></p><p>该字段是必须的，用来列出浏览器的CORS请求会用到哪些HTTP方法，上例是<code>PUT</code></p><p><strong>Access-Control-Request-Headers</strong></p><p>一个逗号分隔的字符串，指定浏览器CORS请求会额外发送的头信息字段，上例是<code>X-Custom-Header</code></p><h3 id="JSONP"><a href="#JSONP" class="headerlink" title="JSONP"></a>JSONP</h3><p>利用<code>&lt;script&gt;</code>标签没有跨域限制，通过<code>&lt;script&gt;</code>标签src属性，发送带有callback参数的GET请求，服务端将接口返回数据拼凑到callback函数中，返回给浏览器，浏览器解析执行，从而前端拿到callback函数返回的数据。</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 原生JavaScript实现</span><span class="token operator">&lt;</span>script<span class="token operator">></span>    <span class="token keyword">var</span> script <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'script'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    script<span class="token punctuation">.</span>type <span class="token operator">=</span> <span class="token string">'text/javascript'</span><span class="token punctuation">;</span>    <span class="token comment">// 传参一个回调函数名给后端，方便后端返回时执行这个在前端定义的回调函数</span>    script<span class="token punctuation">.</span>src <span class="token operator">=</span> <span class="token string">'http://www.domain2.com:8080/login?user=admin&amp;callback=handleCallback'</span><span class="token punctuation">;</span>    document<span class="token punctuation">.</span>head<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>script<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 回调执行函数</span>    <span class="token keyword">function</span> <span class="token function">handleCallback</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token function">alert</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>JSONP的缺点：</strong></p><ul><li>具有局限性， 仅支持get方法</li><li>不安全，可能会遭受XSS攻击</li></ul><h3 id="postMessage跨域"><a href="#postMessage跨域" class="headerlink" title="postMessage跨域"></a>postMessage跨域</h3><p>postMessage是HTML5 XMLHttpRequest Level 2中的API，且是为数不多可以跨域操作的window属性之一。</p><p><code>window.postMessage()</code> 方法允许来自一个文档的脚本可以传递文本消息到另一个文档里的脚本，可以用这种消息传递技术来实现安全的通信，称为“<strong>跨文档消息传递</strong>”。</p><p><strong>发送消息</strong></p><p>postMessage(data,origin)方法接受两个参数：</p><ul><li><strong>data</strong>： html5规范支持任意基本类型或可复制的对象，但部分浏览器只支持字符串，所以传参时最好用JSON.stringify()序列化。</li><li><strong>origin</strong>： 协议+主机+端口号，也可以设置为”*”，表示可以传递给任意窗口，如果要指定和当前窗口同源的话设置为”/“。</li></ul><p><strong>接收消息</strong></p><p>如果指定的源匹配的话，那么当调用 <code>postMessage()</code> 方法的时候，在目标窗口的Window对象上就会触发一个 <code>message</code> 事件。</p><h3 id="nginx代理跨域"><a href="#nginx代理跨域" class="headerlink" title="nginx代理跨域"></a>nginx代理跨域</h3><p>Nginx跨域的原理是利用Nginx的代理功能，让浏览器认为它访问的是同源的服务器，而实际上是访问了其他的服务器。这样就避免了浏览器的跨域限制。</p><h3 id="nodejs中间件代理跨域"><a href="#nodejs中间件代理跨域" class="headerlink" title="nodejs中间件代理跨域"></a>nodejs中间件代理跨域</h3><p>node中间件实现跨域代理，原理大致与nginx相同，是一种解决前后端交互时跨域问题的方法。它利用Nodejs作为中间层，转发前端的请求到后端服务器，从而绕过浏览器的同源策略。</p><h3 id="document-domain-iframe跨域"><a href="#document-domain-iframe跨域" class="headerlink" title="document.domain + iframe跨域"></a>document.domain + iframe跨域</h3><p>此方案仅限主域相同，子域不同的跨域应用场景。父窗口：(domain.com/a.html)，子窗口：(child.domain.com/a.html)。两个页面都通过js强制设置document.domain为基础主域domain.com，就实现了同域。</p><h3 id="WebSocket协议跨域"><a href="#WebSocket协议跨域" class="headerlink" title="WebSocket协议跨域"></a>WebSocket协议跨域</h3><p>WebSocket协议是一种在浏览器和服务器之间进行全双工通信的技术。WebSocket协议不受同源策略的限制，因此可以跨域请求。</p><p>利用webSocket的API，可以直接new一个socket实例，然后通过open方法内send要传输到后台的值，也可以利用message方法接收后台传来的数据。</p><h2 id="正向代理和反向代理"><a href="#正向代理和反向代理" class="headerlink" title="正向代理和反向代理"></a>正向代理和反向代理</h2><ul><li><strong>正向代理：</strong>隐藏客户端</li></ul><p>客户端想获得一个服务器的数据，但是因为种种原因无法直接获取。于是客户端设置了一个代理服务器，并且指定目标服务器，之后代理服务器向目标服务器转交请求并将获得的内容发送给客户端。这样本质上起到了对真实服务器隐藏真实客户端的目的。实现正向代理需要修改客户端，比如修改浏览器配置。</p><ul><li><strong>反向代理：</strong>隐藏服务器</li></ul><p>服务器为了能够将工作负载分不到多个服务器来提高网站性能 (负载均衡)等目的，当其受到请求后，会首先根据转发规则来确定请求应该被转发到哪个服务器上，然后将请求转发到对应的真实服务器上。这样本质上起到了对客户端隐藏真实服务器的作用。</p><p>一般使用反向代理后，需要通过修改 DNS 让域名解析到代理服务器 IP，这时浏览器无法察觉到真正服务器的存在，当然也就不需要修改配置了。</p><ul><li><strong>两者异同</strong></li></ul><p>正向代理和反向代理的结构是一样的，都是 client-proxy-server 的结构，它们主要的区别就在于中间这个 proxy 是哪一方设置的。在正向代理中，proxy 是 client 设置的，用来隐藏 client；而在反向代理中，proxy 是 server 设置的，用来隐藏 server。</p><p><img data-src="https://cdn.nlark.com/yuque/0/2020/jpeg/1500604/1605256274960-50bd9e69-dde9-4782-b2c0-6afc8188fca2.jpeg" alt="正向代理和反向代理"></p><h2 id="Nginx的概念及其工作原理"><a href="#Nginx的概念及其工作原理" class="headerlink" title="Nginx的概念及其工作原理"></a>Nginx的概念及其工作原理</h2><p>Nginx 是一款轻量级的 Web 服务器，也可以用于反向代理、负载平衡和 HTTP 缓存等。Nginx 使用异步事件驱动的方法来处理请求，是一款面向性能设计的 HTTP 服务器。</p><p>传统的 Web 服务器如 Apache 是 process-based 模型的，而 Nginx 是基于event-driven模型的。正是这个主要的区别带给了 Nginx 在性能上的优势。</p><p>Nginx 架构的最顶层是一个 master process，这个 master process 用于产生其他的 worker process，这一点和Apache 非常像，但是 Nginx 的 worker process 可以同时处理大量的HTTP请求，而每个 Apache process 只能处理一个。</p><h1 id="浏览器事件机制"><a href="#浏览器事件机制" class="headerlink" title="浏览器事件机制"></a>浏览器事件机制</h1><h2 id="事件是什么"><a href="#事件是什么" class="headerlink" title="事件是什么"></a>事件是什么</h2><p>事件是用户操作网页时发生的交互动作，比如 click/move， 事件除了用户触发的动作外，还可以是文档加载，窗口滚动和大小调整。事件被封装成一个 event 对象，包含了该事件发生时的所有相关信息（ event 的属性）以及可以对事件进行的操作（ event 的方法）</p><p>事件是用户操作网页时发生的交互动作或者网页本身的一些操作，现代浏览器一共有三种事件模型：</p><ul><li><strong>DOM0 级事件模型</strong>，这种模型不会传播，所以没有事件流的概念，但是现在有的浏览器支持以冒泡的方式实现，它可以在网页中直接定义监听函数，也可以通过 js 属性来指定监听函数。所有浏览器都兼容这种方式。直接在dom对象上注册事件名称，就是DOM0写法。</li><li><strong>IE 事件模型</strong>，在该事件模型中，一次事件共有两个过程，事件处理阶段和事件冒泡阶段。事件处理阶段会首先执行目标元素绑定的监听事件。然后是事件冒泡阶段，冒泡指的是事件从目标元素冒泡到 document，依次检查经过的节点是否绑定了事件监听函数，如果有则执行。这种模型通过attachEvent 来添加监听函数，可以添加多个监听函数，会按顺序依次执行。</li><li><strong>DOM2 级事件模型</strong>，在该事件模型中，一次事件共有三个过程，第一个过程是事件捕获阶段。捕获指的是事件从 document 一直向下传播到目标元素，依次检查经过的节点是否绑定了事件监听函数，如果有则执行。后面两个阶段和 IE 事件模型的两个阶段相同。这种事件模型，事件绑定的函数是addEventListener，其中第三个参数可以指定事件是否在捕获阶段执行。</li></ul><h2 id="如何阻止事件冒泡"><a href="#如何阻止事件冒泡" class="headerlink" title="如何阻止事件冒泡"></a>如何阻止事件冒泡</h2><ul><li>普通浏览器使用：event.stopPropagation() </li><li>IE浏览器使用：event.cancelBubble = true;</li></ul><h2 id="事件委托"><a href="#事件委托" class="headerlink" title="事件委托"></a>事件委托</h2><p>事件委托 是利用浏览器事件冒泡的机制，将子节点的监听函数定义在父节点上，由父节点的监听函数统一处理多个子元素的事件，这种方式称为事件委托。</p><p>使用事件委托可以不必要为每一个子元素都绑定一个监听事件，<strong>减少内存消耗</strong>。并且还可以<strong>实现事件动态绑定</strong>，比如说新增了一个子节点，并不需要单独地为它添加一个监听事件，它绑定的事件会交给父元素中的监听函数来处理。</p><p>事件委托不是只有优点，它也是有<strong>缺点</strong>的：</p><p>比如 focus、blur 之类的事件没有事件冒泡机制，所以无法实现事件委托；mousemove、mouseout 这样的事件，虽然有事件冒泡，但是只能不断通过位置去计算定位，对性能消耗高，因此也是不适合于事件委托的。</p><h1 id="浏览器垃圾回收机制"><a href="#浏览器垃圾回收机制" class="headerlink" title="浏览器垃圾回收机制"></a>浏览器垃圾回收机制</h1><p>GC<code>就是</code>Garbage Collection<code> 也就是我们常说的</code>垃圾回收机制，它工作在引擎的内部，对于前端来说是相对无感的。</p><p>一般的高级语言里面会自带 GC，比如 Java、Python、JavaScript 等，也有无 GC 的语言，比如 C、C++ 等，那这种就需要我们程序员手动管理内存了，相对比较麻烦。</p><h2 id="V8的垃圾回收机制"><a href="#V8的垃圾回收机制" class="headerlink" title="V8的垃圾回收机制"></a>V8的垃圾回收机制</h2><p>V8 的垃圾回收策略主要基于分代式垃圾回收机制，V8 中将堆内存分为新生代和老生代两区域，采用不同的垃圾回收器。</p><p>新生代的对象为存活时间较短的对象，简单来说就是新产生的对象，通常只支持<code>1～8M</code>的容量，而老生代的对象为存活时间较长或常驻内存的对象，简单来说就是经历过新生代垃圾回收后还存活下来的对象，容量通常比较大。</p><h3 id="新生代垃圾回收器"><a href="#新生代垃圾回收器" class="headerlink" title="新生代垃圾回收器"></a>新生代垃圾回收器</h3><p>新生代对象是通过一个名为 <code>Scavenge</code> 的算法进行垃圾回收，主要采用了一种复制式的方法即 <code>Cheney 算法</code>：</p><p><code>Cheney 算法</code> 中将堆内存一分为二，一个是处于使用状态的空间我们暂且称之为 <code>使用区</code>，一个是处于闲置状态的空间我们称之为 <code>空闲区</code>：</p><p><img data-src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/7fd1a43f0380484288590fff97466d4b~tplv-k3u1fbpfcp-zoom-in-crop-mark:4536:0:0:0.awebp"></p><p>当开始进行垃圾回收时，新生代垃圾回收器会对使用区中的活动对象做标记，标记完成之后将使用区的活动对象复制进空闲区并进行排序，随后进入垃圾清理阶段，即将非活动对象占用的空间清理掉。最后进行角色互换，把原来的使用区变成空闲区，把原来的空闲区变成使用区。</p><h3 id="老生代垃圾回收"><a href="#老生代垃圾回收" class="headerlink" title="老生代垃圾回收"></a>老生代垃圾回收</h3><p>先来说下什么情况下对象会出现在老生代空间中：</p><ul><li>新生代中的对象是否已经经历过一次 Scavenge 算法，如果经历过的话，会将对象从新生代空间移到老生代空间中。</li><li>To 空间的对象占比大小超过 25 %。在这种情况下，为了不影响到内存分配，会将对象从新生代空间移到老生代空间中。</li></ul><p>对于大多数占用空间大、存活时间长的对象会被分配到老生代里，因为老生代中的对象通常比较大，如果再如新生代一般分区然后复制来复制去就会非常耗时，从而导致回收执行效率不高，所以老生代垃圾回收器来管理其垃圾回收执行，它的整个流程就采用的就是<strong>标记清除</strong>了。</p><p>标记阶段，从一组根元素开始，递归遍历这组根元素，遍历过程中能到达的元素称为活动对象，没有到达的元素就可以判断为非活动对象。</p><p>清除阶段，直接将非活动对象，也就是数据清理掉。</p><p>分代式机制把一些新、小、存活时间短的对象作为新生代，采用一小块内存频率较高的快速清理，而一些大、老、存活时间长的对象作为老生代，使其很少接受检查，新老生代的回收机制及频率是不同的，可以说此机制的出现很大程度提高了垃圾回收机制的效率。</p><h3 id="并行回收"><a href="#并行回收" class="headerlink" title="并行回收"></a>并行回收</h3><p> JavaScript 是一门单线程的语言，它是运行在主线程上的，那在进行垃圾回收时就会阻塞 JavaScript 脚本的执行，需等待垃圾回收完毕后再恢复脚本执行，我们把这种行为叫做 <code>全停顿</code>。</p><p><img data-src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/05a802dfb84b494ea0bac6281e292a11~tplv-k3u1fbpfcp-zoom-in-crop-mark:4536:0:0:0.awebp"></p><p>假如一次 GC 的时间过长，对用户来说就可能造成页面卡顿等问题。这里引入多个辅助线程来同时处理，以此加速垃圾回收的执行速度</p><p>在执行垃圾回收的过程中，会启动了多个线程来负责新生代中的垃圾清理操作，这些线程同时将对象空间中的数据移动到空闲区域，这个过程中由于数据地址会发生改变，所以还需要同步更新引用这些对象的指针，这就是并行回收。</p><p><img data-src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/da8164de8a1245fe962673e9c2bfb473~tplv-k3u1fbpfcp-zoom-in-crop-mark:4536:0:0:0.awebp"></p><h3 id="增量标记"><a href="#增量标记" class="headerlink" title="增量标记"></a>增量标记</h3><p><code>并行回收</code> 可以提高回收效率，对于新生代垃圾回收器能够有很好的优化，但是它还是一种全停顿式的垃圾回收方式；</p><p>对于老生代来说，它的内部存放的都是一些比较大的对象，对于这些大的对象 GC 时哪怕我们使用并行策略依然可能会消耗大量时间</p><p>在 2011 年，V8 对老生代的标记进行了优化，从 <code>全停顿标记</code>切换到<code>增量标记</code></p><p><img data-src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/2cf5dc1cf0b04856809050ed165a0d7a~tplv-k3u1fbpfcp-zoom-in-crop-mark:4536:0:0:0.awebp"></p><p>如果采用非黑即白的标记策略，那在垃圾回收器执行了一段增量回收后，暂停后启用主线程去执行了应用程序中的一段JavaScript 代码，随后当垃圾回收器再次被启动，这时候内存中黑白色都有，我们无法得知下一步走到哪里了</p><p>为了解决这个问题，V8 团队采用了一种特殊方式： <code>三色标记法</code></p><h3 id="惰性清理"><a href="#惰性清理" class="headerlink" title="惰性清理"></a>惰性清理</h3><p>增量标记其实只是对活动对象和非活动对象进行标记，对于真正的清理释放内存 V8 采用的是<code>惰性清理</code></p><p>当增量标记完成后，假如当前的可用内存足以让我们快速的执行代码，其实我们是没必要立即清理内存的，可以将清理过程稍微延迟一下，让 JavaScript 脚本代码先执行，也无需一次性清理完所有非活动对象内存，可以按需逐一进行清理直到所有的非活动对象内存都清理完毕，后面再接着执行增量标记。</p><h3 id="并发回收"><a href="#并发回收" class="headerlink" title="并发回收"></a>并发回收</h3><p>并行回收依然会阻塞主线程，增量标记同样有增加了总暂停时间、降低应用程序吞吐量两个缺点，那么怎么才能在不阻塞主线程的情况下执行垃圾回收并且与增量相比更高效呢？</p><p>并发回收了，它指的是主线程在执行 JavaScript 的过程中，辅助线程能够在后台完成执行垃圾回收的操作，辅助线程在执行垃圾回收的时候，主线程也可以自由执行而不会被挂起：</p><p><img data-src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/9f28fab4cc224c18952929a738959a98~tplv-k3u1fbpfcp-zoom-in-crop-mark:4536:0:0:0.awebp"></p><p>辅助线程在执行垃圾回收的时候，主线程也可以自由执行而不会被挂起，这是并发的优点，但同样也是并发回收实现的难点，因为它需要考虑主线程在执行 JavaScript 时，堆中的对象引用关系随时都有可能发生变化，这时辅助线程之前做的一些标记或者正在进行的标记就会要有所改变，所以它需要额外实现一些<code>读写锁机制</code>来控制这一点。</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><ol><li>新生代主要使用分为了使用区和空闲区，使用相关的算法进行垃圾回收机制;</li><li>老生代使用<code>标记清除算法</code>，还是使用了<code>并行回收</code>、<code>增量标记</code>、<code>惰性清理</code>来辅提高回收效率，增量标记中使用<code>三色标记法</code>来达到暂停和恢复的作用;</li><li>还是使用<code>并发回收</code>使回收更高效;</li></ol>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img data-src=&quot;https://s2.loli.net/2022/12/09/hn6szuTWENfaHPZ.png&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="前端开发" scheme="https://ychch.top/categories/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    
    
  </entry>
  
  <entry>
    <title>组件库开发技巧</title>
    <link href="https://ychch.top/archives/590dfd2.html"/>
    <id>https://ychch.top/archives/590dfd2.html</id>
    <published>2022-11-18T12:04:16.000Z</published>
    <updated>2024-08-20T01:48:43.750Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>插件就是一个store、一个组件库、接受一个vue参数</p><span id="more"></span><h1 id="组件库开发"><a href="#组件库开发" class="headerlink" title="组件库开发"></a>组件库开发</h1><p>在组件库的main.js中 定义一个UI，给其一个install方法，导出出去</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">let</span> <span class="token constant">UI</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token constant">UI</span><span class="token punctuation">.</span><span class="token function-variable function">install</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">Vue</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    Vue<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span>Carousel<span class="token punctuation">.</span>name<span class="token punctuation">,</span> Carousel<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token constant">UI</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在使用中：</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> createApp <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'vue'</span><span class="token keyword">import</span> App <span class="token keyword">from</span> <span class="token string">'./App.vue'</span><span class="token keyword">import</span> <span class="token constant">UI</span> <span class="token keyword">from</span> <span class="token string">'@/libs/ui'</span><span class="token punctuation">;</span><span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">createApp</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span>app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token constant">UI</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">'#app'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="递归组件的开发技巧"><a href="#递归组件的开发技巧" class="headerlink" title="递归组件的开发技巧"></a>递归组件的开发技巧</h1><p>在无限多级菜单案例中，需要用到 递归组件 的设计。</p><p>也很简单，在递归组件中 调用自己，传入所需要的参数即可。</p><p>在下面这个案例中，ReSubMenu是递归组件，自己使用自己时，传入所需要的data属性即可。</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token operator">&lt;</span>template<span class="token operator">></span>    <span class="token operator">&lt;</span>sub<span class="token operator">-</span>menu<span class="token operator">></span>        <span class="token operator">&lt;</span>template v<span class="token operator">-</span><span class="token keyword">for</span><span class="token operator">=</span><span class="token string">"c of data.children"</span><span class="token operator">></span>            <span class="token operator">&lt;</span>menu<span class="token operator">-</span>item v<span class="token operator">-</span><span class="token keyword">if</span><span class="token operator">=</span><span class="token string">"!c.children"</span>                <span class="token operator">:</span>key<span class="token operator">=</span><span class="token string">"c.id"</span>            <span class="token operator">></span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span>c<span class="token punctuation">.</span>title<span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>menu<span class="token operator">-</span>item<span class="token operator">></span>            <span class="token operator">&lt;</span>re<span class="token operator">-</span>sub<span class="token operator">-</span>menu                v<span class="token operator">-</span><span class="token keyword">else</span>                <span class="token operator">:</span>key<span class="token operator">=</span><span class="token string">"c.id"</span>                <span class="token operator">:</span>data<span class="token operator">=</span><span class="token string">"c"</span>            <span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>re<span class="token operator">-</span>sub<span class="token operator">-</span>menu<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>sub<span class="token operator">-</span>menu<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span><span class="token operator">&lt;</span>script<span class="token operator">></span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">&#123;</span>    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'ReSubMenu'</span><span class="token punctuation">,</span>    <span class="token literal-property property">props</span><span class="token operator">:</span><span class="token punctuation">&#123;</span>        <span class="token literal-property property">data</span><span class="token operator">:</span> Object    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
    <summary type="html">&lt;p&gt;插件就是一个store、一个组件库、接受一个vue参数&lt;/p&gt;</summary>
    
    
    
    <category term="前端开发" scheme="https://ychch.top/categories/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    
    
    <category term="组件" scheme="https://ychch.top/tags/%E7%BB%84%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>Axios的基本使用</title>
    <link href="https://ychch.top/archives/41a21076.html"/>
    <id>https://ychch.top/archives/41a21076.html</id>
    <published>2022-11-17T04:23:27.000Z</published>
    <updated>2024-08-20T01:48:50.979Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p><a href="https://github.com/axios/axios">Axios</a> 是一个基于 Promise 的 HTTP 库，可以用在浏览器和 node.js 中，在服务端它使用原生 node.js <code>http</code> 模块, 而在客户端 (浏览端) 则使用 XMLHttpRequests。</p><span id="more"></span><h1 id="基本配置"><a href="#基本配置" class="headerlink" title="基本配置"></a>基本配置</h1><pre class="line-numbers language-js" data-language="js"><code class="language-js">使用 npm<span class="token operator">:</span>npm install axios使用 yarn<span class="token operator">:</span>yarn add axios使用 jsDelivr <span class="token constant">CDN</span><span class="token operator">:</span><span class="token operator">&lt;</span>script src<span class="token operator">=</span><span class="token string">"https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span>使用 unpkg <span class="token constant">CDN</span><span class="token operator">:</span><span class="token operator">&lt;</span>script src<span class="token operator">=</span><span class="token string">"https://unpkg.com/axios/dist/axios.min.js"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="基本使用"><a href="#基本使用" class="headerlink" title="基本使用"></a>基本使用</h1><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> axios <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'axios'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 向给定ID的用户发起请求</span>axios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'/user?ID=12345'</span><span class="token punctuation">)</span>  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">response</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 处理成功情况</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 处理错误情况</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token comment">// 上述请求也可以按以下方式完成（可选）</span>axios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'/user'</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>    <span class="token literal-property property">params</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>      <span class="token constant">ID</span><span class="token operator">:</span> <span class="token number">12345</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">response</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token comment">// 支持async/await用法</span><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">getUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token keyword">await</span> axios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'/user?ID=12345'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="发起多个并发请求"><a href="#发起多个并发请求" class="headerlink" title="发起多个并发请求"></a>发起多个并发请求</h2><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">function</span> <span class="token function">getUserAccount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> axios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'/user/12345'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">function</span> <span class="token function">getUserPermissions</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> axios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'/user/12345/permissions'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token function">getUserAccount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">getUserPermissions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">results</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> acct <span class="token operator">=</span> results<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">const</span> perm <span class="token operator">=</span> results<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="API集合"><a href="#API集合" class="headerlink" title="API集合"></a>API集合</h2><p>为了方便起见，已经为所有支持的请求方法提供了别名</p><pre class="line-numbers language-js" data-language="js"><code class="language-js">axios<span class="token punctuation">.</span><span class="token function">request</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span>axios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>url<span class="token punctuation">[</span><span class="token punctuation">,</span> config<span class="token punctuation">]</span><span class="token punctuation">)</span>axios<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span>url<span class="token punctuation">[</span><span class="token punctuation">,</span> config<span class="token punctuation">]</span><span class="token punctuation">)</span>axios<span class="token punctuation">.</span><span class="token function">head</span><span class="token punctuation">(</span>url<span class="token punctuation">[</span><span class="token punctuation">,</span> config<span class="token punctuation">]</span><span class="token punctuation">)</span>axios<span class="token punctuation">.</span><span class="token function">options</span><span class="token punctuation">(</span>url<span class="token punctuation">[</span><span class="token punctuation">,</span> config<span class="token punctuation">]</span><span class="token punctuation">)</span>axios<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span>url<span class="token punctuation">[</span><span class="token punctuation">,</span> data<span class="token punctuation">[</span><span class="token punctuation">,</span> config<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>axios<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>url<span class="token punctuation">[</span><span class="token punctuation">,</span> data<span class="token punctuation">[</span><span class="token punctuation">,</span> config<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>axios<span class="token punctuation">.</span><span class="token function">patch</span><span class="token punctuation">(</span>url<span class="token punctuation">[</span><span class="token punctuation">,</span> data<span class="token punctuation">[</span><span class="token punctuation">,</span> config<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="请求配置"><a href="#请求配置" class="headerlink" title="请求配置"></a>请求配置</h1><p>这些是创建请求时可以用的配置选项。只有 <code>url</code> 是必需的。如果没有指定 <code>method</code>，请求将默认使用 <code>GET</code> 方法</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token punctuation">&#123;</span>  <span class="token comment">// `url` 是用于请求的服务器 URL</span>  <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">'/user'</span><span class="token punctuation">,</span>  <span class="token comment">// `method` 是创建请求时使用的方法</span>  <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">'get'</span><span class="token punctuation">,</span> <span class="token comment">// 默认值</span>  <span class="token comment">// `baseURL` 将自动加在 `url` 前面，除非 `url` 是一个绝对 URL。可以通过设置 `baseURL` 便于为 axios 实例的方法传递相对 URL</span>  <span class="token literal-property property">baseURL</span><span class="token operator">:</span> <span class="token string">'https://some-domain.com/api/'</span><span class="token punctuation">,</span>  <span class="token comment">// `transformRequest` 允许在向服务器发送前，修改请求数据</span>  <span class="token comment">// 它只能用于 'PUT', 'POST' 和 'PATCH' 这几个请求方法</span>  <span class="token literal-property property">transformRequest</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">data<span class="token punctuation">,</span> headers</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 对发送的 data 进行任意转换处理</span>    <span class="token keyword">return</span> data<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>  <span class="token comment">// `transformResponse` 在传递给 then/catch 前，允许修改响应数据</span>  <span class="token literal-property property">transformResponse</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 对接收的 data 进行任意转换处理</span>    <span class="token keyword">return</span> data<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>  <span class="token comment">// 自定义请求头</span>  <span class="token literal-property property">headers</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token string-property property">'X-Requested-With'</span><span class="token operator">:</span> <span class="token string">'XMLHttpRequest'</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token comment">// `params` 是与请求一起发送的 URL 参数</span>  <span class="token literal-property property">params</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token constant">ID</span><span class="token operator">:</span> <span class="token number">12345</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token comment">// `paramsSerializer`是可选方法，主要用于序列化`params`</span>  <span class="token function-variable function">paramsSerializer</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">params</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> Qs<span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>params<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token literal-property property">arrayFormat</span><span class="token operator">:</span> <span class="token string">'brackets'</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token comment">// `data` 是作为请求体被发送的数据</span>  <span class="token comment">// 仅适用 'PUT', 'POST', 'DELETE 和 'PATCH' 请求方法</span>  <span class="token comment">// 在没有设置 `transformRequest` 时，则必须是以下类型之一:</span>  <span class="token comment">// - string, plain object, ArrayBuffer, ArrayBufferView, URLSearchParams</span>  <span class="token comment">// - 浏览器专属: FormData, File, Blob</span>  <span class="token comment">// - Node 专属: Stream, Buffer</span>  <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token literal-property property">firstName</span><span class="token operator">:</span> <span class="token string">'Fred'</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token comment">// 发送请求体数据的可选语法</span>  <span class="token comment">// 请求方式 post</span>  <span class="token comment">// 只有 value 会被发送，key 则不会</span>  <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token string">'Country=Brasil&amp;City=Belo Horizonte'</span><span class="token punctuation">,</span>  <span class="token comment">// 如果请求时间超过 `timeout` 的值，则请求会被中断</span>  <span class="token literal-property property">timeout</span><span class="token operator">:</span> <span class="token number">1000</span><span class="token punctuation">,</span> <span class="token comment">// 默认值是 `0` (永不超时)</span>  <span class="token comment">// `withCredentials` 表示跨域请求时是否需要使用凭证</span>  <span class="token literal-property property">withCredentials</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">// default</span>  <span class="token comment">// `auth` HTTP Basic Auth</span>  <span class="token literal-property property">auth</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token literal-property property">username</span><span class="token operator">:</span> <span class="token string">'janedoe'</span><span class="token punctuation">,</span>    <span class="token literal-property property">password</span><span class="token operator">:</span> <span class="token string">'s00pers3cret'</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="响应结构"><a href="#响应结构" class="headerlink" title="响应结构"></a>响应结构</h1><p>一个请求的响应包含以下信息</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token punctuation">&#123;</span>  <span class="token comment">// `data` 由服务器提供的响应</span>  <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token comment">// `status` 来自服务器响应的 HTTP 状态码</span>  <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span>  <span class="token comment">// `statusText` 来自服务器响应的 HTTP 状态信息</span>  <span class="token literal-property property">statusText</span><span class="token operator">:</span> <span class="token string">'OK'</span><span class="token punctuation">,</span>  <span class="token comment">// `headers` 是服务器响应头，所有的 header 名称都是小写，而且可以使用方括号语法访问</span>  <span class="token comment">// 例如: `response.headers['content-type']`</span>  <span class="token literal-property property">headers</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token comment">// `config` 是 `axios` 请求的配置信息</span>  <span class="token literal-property property">config</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token comment">// `request` 是生成此响应的请求</span>  <span class="token comment">// 在node.js中它是最后一个ClientRequest实例 (in redirects)；在浏览器中则是 XMLHttpRequest 实例</span>  <span class="token literal-property property">request</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>当使用 <code>then</code> 时，将接收如下响应：</p><pre class="line-numbers language-js" data-language="js"><code class="language-js">axios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'/user/12345'</span><span class="token punctuation">)</span>  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">response</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>status<span class="token punctuation">)</span><span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>statusText<span class="token punctuation">)</span><span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>headers<span class="token punctuation">)</span><span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>config<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="默认配置"><a href="#默认配置" class="headerlink" title="默认配置"></a>默认配置</h1><p>可以指定默认配置，它将作用于每个请求</p><h2 id="全局axios-默认"><a href="#全局axios-默认" class="headerlink" title="全局axios 默认"></a>全局axios 默认</h2><pre class="line-numbers language-js" data-language="js"><code class="language-js">axios<span class="token punctuation">.</span>defaults<span class="token punctuation">.</span>baseURL <span class="token operator">=</span> <span class="token string">'https://api.example.com'</span><span class="token punctuation">;</span>axios<span class="token punctuation">.</span>defaults<span class="token punctuation">.</span>headers<span class="token punctuation">.</span>common<span class="token punctuation">[</span><span class="token string">'Authorization'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token constant">AUTH_TOKEN</span><span class="token punctuation">;</span>axios<span class="token punctuation">.</span>defaults<span class="token punctuation">.</span>headers<span class="token punctuation">.</span>post<span class="token punctuation">[</span><span class="token string">'Content-Type'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'application/x-www-form-urlencoded'</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="自定义实例默认值"><a href="#自定义实例默认值" class="headerlink" title="自定义实例默认值"></a>自定义实例默认值</h2><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 创建实例时配置默认值</span><span class="token keyword">const</span> instance <span class="token operator">=</span> axios<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>  <span class="token literal-property property">baseURL</span><span class="token operator">:</span> <span class="token string">'https://api.example.com'</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 创建实例后修改默认值</span>instance<span class="token punctuation">.</span>defaults<span class="token punctuation">.</span>headers<span class="token punctuation">.</span>common<span class="token punctuation">[</span><span class="token string">'Authorization'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token constant">AUTH_TOKEN</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><ul><li><a href="https://www.axios-http.cn/docs/intro">起步 | Axios 中文文档 | Axios 中文网 (axios-http.cn)</a></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://github.com/axios/axios&quot;&gt;Axios&lt;/a&gt; 是一个基于 Promise 的 HTTP 库，可以用在浏览器和 node.js 中，在服务端它使用原生 node.js &lt;code&gt;http&lt;/code&gt; 模块, 而在客户端 (浏览端) 则使用 XMLHttpRequests。&lt;/p&gt;</summary>
    
    
    
    <category term="前端开发" scheme="https://ychch.top/categories/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    
    
    <category term="axios" scheme="https://ychch.top/tags/axios/"/>
    
  </entry>
  
  <entry>
    <title>求职之路</title>
    <link href="https://ychch.top/archives/11073bfc.html"/>
    <id>https://ychch.top/archives/11073bfc.html</id>
    <published>2022-11-14T13:03:12.000Z</published>
    <updated>2024-08-20T02:10:24.633Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>以此记录前端求职历程</p><span id="more"></span><h1 id="求职规划"><a href="#求职规划" class="headerlink" title="求职规划"></a>求职规划</h1><p>校招分为三个阶段：</p><p>​      <strong>1.暑期实习：</strong>大三或研二下学期的3月初开始，6~8月为实习时间。<br>​      <strong>2.秋招：</strong>7月初提前批开始，10月底随着各学校三方下发陆续结束。<br>​      <strong>3.春招：</strong>第二年年初陆续开始， 经历过秋招失败之后，别松懈，总结秋招经验，寒假期间在牛客网的求职-<a href="https://www.nowcoder.com/school/schedule">校招板块</a>中关注春招动态。</p><p>时间规划：</p><p><img data-src="https://s2.loli.net/2022/11/14/uhaEHpzMJkD8WN1.png"></p><p>现在是22年十一月，还有时间准备简历和技能树</p><p> 从书本+技能树+面经三大方面巩固基础知识，通过项目累积经验。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;以此记录前端求职历程&lt;/p&gt;</summary>
    
    
    
    <category term="求职之路" scheme="https://ychch.top/categories/%E6%B1%82%E8%81%8C%E4%B9%8B%E8%B7%AF/"/>
    
    
    <category term="求职之路" scheme="https://ychch.top/tags/%E6%B1%82%E8%81%8C%E4%B9%8B%E8%B7%AF/"/>
    
  </entry>
  
</feed>
